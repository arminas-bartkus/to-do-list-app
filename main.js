(()=>{"use strict";var __webpack_modules__={56:(module,__unused_webpack_exports,__webpack_require__)=>{eval('{\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcz9kZGNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56\n\n}')},72:module=>{eval('{\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcz8yZGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///72\n\n}')},113:module=>{eval("{\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcz8xZGRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///113\n\n}")},129:(n,t,I)=>{n.exports=I.p+"fb34c504ecd27d66541b.woff"},314:module=>{eval('{\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///314\n\n}')},354:module=>{eval('{\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///354\n\n}')},417:module=>{eval('{\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^[\'"].*[\'"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/["\'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return "\\"".concat(url.replace(/"/g, \'\\\\"\').replace(/\\n/g, "\\\\n"), "\\"");\n  }\n  return url;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE3LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanM/MWRlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpO1xuXG4gIC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9XG5cbiAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cbiAgcmV0dXJuIHVybDtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///417\n\n}')},540:module=>{eval('{\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///540\n\n}')},569:(n,t,I)=>{n.exports=I.p+"3d23e35296a35303a0f2.woff2"},621:(module,__webpack_exports__,__webpack_require__)=>{eval('{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(417);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(569), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(129), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(800), __webpack_require__.b);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(758), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\n\n\n}\n\n\n@font-face {\n    font-family: \'amatic_scregular\';\n    src: url(${___CSS_LOADER_URL_REPLACEMENT_0___}) format(\'woff2\'),\n         url(${___CSS_LOADER_URL_REPLACEMENT_1___}) format(\'woff\');\n    font-weight: normal;\n    font-style: normal;\n\n}\n\n\n\n\n@font-face {\n    font-family: \'amaticbold\';\n    src: url(${___CSS_LOADER_URL_REPLACEMENT_2___}) format(\'woff2\'),\n         url(${___CSS_LOADER_URL_REPLACEMENT_3___}) format(\'woff\');\n    font-weight: normal;\n    font-style: normal;\n\n}\n\n\nbody {\n    display: grid;\n    height: 96vh;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 1fr 10fr;\n    margin: 2vh;\n    gap: 30px;\n    background-color: aliceblue;\n    font-family: \'amatic_scregular\';\n\n    font-weight: 100;\n    overflow: -moz-hidden-unscrollable;\n\n}\n\nh4 {\n    font-size: 15rem;\n    place-content: center;\n    align-self: center;\n    margin-top: 20%;\n}\n\n.project-list-body {\n    padding: 0;\n    margin: 0;\n    overflow-y: scroll;\n    border-radius: 2px;\n    box-shadow: 0px 0px 2px 0px gray;\n}\n\n::-webkit-scrollbar {\n    width: 20px;\n}\n\n::-webkit-scrollbar-track {\n    border-radius: 100px;\n}\n\n::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    border: solid black 2px;\n\n}\n\n.current-project-body {\n\n    display: flex;\n    grid-area: 1 / 2 / 3 / 3;\n    flex-direction: column;\n    overflow-y: scroll;\n    border-radius: 2px;\n    box-shadow: 0px 0px 2px 0px gray;\n    \n\n\n\n}\n\n.project-card{\n    border-radius: 15px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 0px 0px 2px 0px gray;\n   \n\n\n}\n\n.project-card div {\n    font-size: 2.1rem;\n}\n\n.clear-storage{\n\n    position: absolute;\n    right: 0;\n    bottom: 0;\n}\n\n.completion-bar {\n    align-self: end;\n    position: absolute;\n    margin: 15px 20px;\n   \n}\n\n.add-project-btn {\n\n   font-size: 2rem;\n   padding: 10px 15px;\n   height: min-content;\n   width: 200px;\n   border-radius: 40px;\n   border: none;\n   box-shadow: 0px 0px 10px 1px gray;\n   \n}\n\n.add-project-card {\n    display: flex;\n    align-items: center;\n    justify-content: start;\n    margin-left: 20px;\n}\n\n.go-to-project-card {\n    width: 80%;\n    margin: 20px;\n    display: flex;\n    justify-content: space-evenly;\n    background-color: rgb(255, 255, 255);\n}\n\n.go-to-project-card-btn {\n    /* padding: 0% 10px; */\n    font-size: 1.5rem;\n    border-radius: 5px;\n    height: min-content;\n    box-shadow: 0px 0px 5px 0px gray;\n    border: none;\n    \n}\n\n.project-card-title {\n    font-size: 2rem;\n    padding: 10px;\n   \n}\n\n.title-div {\n    margin: 20px 20px 10px 20px;\n    display: flex;\n    gap: 40px;\n    align-items: start;\n}\n\n.subheading-div {\n    margin: 0px 30px;\n    display: flex;\n    flex-direction: column;\n   \n}\n\n\n.subheading-btn-div {\n    position: relative;\n    height: min-content;\n    margin-left: 10px;\n  \n}\n\n.task-div {\n    padding: 5px 10px 0px 10px;\n    margin-left: 10px;\n    margin-bottom: 10px;\n\n    font-size: 2rem;\n    border-radius: 5px;\n    box-shadow: 0px 0px 3px 1px gray;\n}\n\n.task-title:hover {\n    color: aliceblue;\n    cursor: pointer;\n    border-radius: 20px;\n}\n\n.add-task-btn, .delete-task-btn, dialog button {\n    margin: 0 5px 40px 5px;\n    \n    width: fit-content;\n    padding: 5px 15px;\n    border-radius: 30px;\n    border: none;\n    box-shadow: 0px 0px 5px 0px gray;\n    \n    font-size: 1.5rem;\n    \n}\n\n.add-subheading-btn, .delete-project-btn, .delete-subheading-btn {\n    margin: 5px 5px 10px 5px;\n    \n    border-radius: 50px;\n    font-size: 1.5rem;\n    text-align: center;\n    place-content: center;\n    padding: 5px 10px;\n    box-shadow: 0px 0px 5px 0px gray;\n    border: none;\n\n}\n\ninput[type = "checkbox"] {\n    appearance: none;\n    margin: 0;\n    font: inherit;\n    color: currentColor;\n    width: 1.15em;\n    height: 1.15em;\n    border: 0.15em solid currentColor;\n    border-radius: 1em;\n    transform: translateY(-0.075em);\n\n    display: grid;\n    place-content: center;\n\n\n    position: relative;\n    top: 15px;\n    left: 15px;\n\n}\n\ninput[type="checkbox"]::before {\n  content: "";\n  width: 0.65em;\n  height: 0.65em;\n  border-radius: 10em;\n  transform: scale(0);\n  transition: 120ms transform ease-in-out;\n  box-shadow: inset 1em 1em#BCCCDC;\n  background-color: CanvasText;\n}\n\ninput[type="checkbox"]:checked::before {\n  transform: scale(1);\n}\n\ndialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n   \n    width: 25%;\n    height: 70%;\n\n    border-radius: 30px;\n    background-color: aliceblue;\n    border: dashed aliceblue 5px;\n\n    font-size: 2rem;\n    overflow: hidden;\n    \n}\n\ndialog button {\n    margin-top: 30px;\n}\n\ndialog label {\n    margin-top: 5px;\n    font-size: 2.5rem;\n}\n\n\ndialog input {\n    display: flex;\n    width: 80%;\n    padding: 0 10px;\n    border-radius: 20px;\n    border: none;\n    box-shadow: 0px 0px 5px 0px gray;\n}\n\ndialog input:focus {\n    outline: none;\n\n}\n\n\ninput[type = "textarea"] {\n    resize: both;\n}\n\n\ndialog input::placeholder {\n    font-size: 1.7rem;\n} \n\n.delete-task-btn {\n    position:relative;\n    left: 70px;\n    top: -30px;\n    margin-bottom: 0px;\n}\n\nbutton {\n    font-family: \'amaticbold\';\n}\n\n.modal-contents {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.title-div {\n    font-size: 3rem;\n    margin-top: 0px;\n    height: fit-content;\n    \n}\n\n.title-div button {\n    align-self: center;\n    \n}\n\n.completion-bar {\n    font-size: 2.5rem;\n}\n\n.subheading-div-title {\n    font-size: 3rem;\n}\n\nbutton:hover {\n    background-color: rgba(175, 175, 175, 0.671);\n    cursor: pointer;\n}`, "",{"version":3,"sources":["webpack://./src/css/styles.css"],"names":[],"mappings":"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","sourcesContent":[":root {\\n\\n\\n}\\n\\n\\n@font-face {\\n    font-family: \'amatic_scregular\';\\n    src: url(\'../fonts/amaticsc-regular-webfont.woff2\') format(\'woff2\'),\\n         url(\'../fonts/amaticsc-regular-webfont.woff\') format(\'woff\');\\n    font-weight: normal;\\n    font-style: normal;\\n\\n}\\n\\n\\n\\n\\n@font-face {\\n    font-family: \'amaticbold\';\\n    src: url(\'../fonts/amatic-bold-webfont.woff2\') format(\'woff2\'),\\n         url(\'../fonts/amatic-bold-webfont.woff\') format(\'woff\');\\n    font-weight: normal;\\n    font-style: normal;\\n\\n}\\n\\n\\nbody {\\n    display: grid;\\n    height: 96vh;\\n    grid-template-columns: 1fr 5fr;\\n    grid-template-rows: 1fr 10fr;\\n    margin: 2vh;\\n    gap: 30px;\\n    background-color: aliceblue;\\n    font-family: \'amatic_scregular\';\\n\\n    font-weight: 100;\\n    overflow: -moz-hidden-unscrollable;\\n\\n}\\n\\nh4 {\\n    font-size: 15rem;\\n    place-content: center;\\n    align-self: center;\\n    margin-top: 20%;\\n}\\n\\n.project-list-body {\\n    padding: 0;\\n    margin: 0;\\n    overflow-y: scroll;\\n    border-radius: 2px;\\n    box-shadow: 0px 0px 2px 0px gray;\\n}\\n\\n::-webkit-scrollbar {\\n    width: 20px;\\n}\\n\\n::-webkit-scrollbar-track {\\n    border-radius: 100px;\\n}\\n\\n::-webkit-scrollbar-thumb {\\n    border-radius: 10px;\\n    border: solid black 2px;\\n\\n}\\n\\n.current-project-body {\\n\\n    display: flex;\\n    grid-area: 1 / 2 / 3 / 3;\\n    flex-direction: column;\\n    overflow-y: scroll;\\n    border-radius: 2px;\\n    box-shadow: 0px 0px 2px 0px gray;\\n    \\n\\n\\n\\n}\\n\\n.project-card{\\n    border-radius: 15px;\\n\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    box-shadow: 0px 0px 2px 0px gray;\\n   \\n\\n\\n}\\n\\n.project-card div {\\n    font-size: 2.1rem;\\n}\\n\\n.clear-storage{\\n\\n    position: absolute;\\n    right: 0;\\n    bottom: 0;\\n}\\n\\n.completion-bar {\\n    align-self: end;\\n    position: absolute;\\n    margin: 15px 20px;\\n   \\n}\\n\\n.add-project-btn {\\n\\n   font-size: 2rem;\\n   padding: 10px 15px;\\n   height: min-content;\\n   width: 200px;\\n   border-radius: 40px;\\n   border: none;\\n   box-shadow: 0px 0px 10px 1px gray;\\n   \\n}\\n\\n.add-project-card {\\n    display: flex;\\n    align-items: center;\\n    justify-content: start;\\n    margin-left: 20px;\\n}\\n\\n.go-to-project-card {\\n    width: 80%;\\n    margin: 20px;\\n    display: flex;\\n    justify-content: space-evenly;\\n    background-color: rgb(255, 255, 255);\\n}\\n\\n.go-to-project-card-btn {\\n    /* padding: 0% 10px; */\\n    font-size: 1.5rem;\\n    border-radius: 5px;\\n    height: min-content;\\n    box-shadow: 0px 0px 5px 0px gray;\\n    border: none;\\n    \\n}\\n\\n.project-card-title {\\n    font-size: 2rem;\\n    padding: 10px;\\n   \\n}\\n\\n.title-div {\\n    margin: 20px 20px 10px 20px;\\n    display: flex;\\n    gap: 40px;\\n    align-items: start;\\n}\\n\\n.subheading-div {\\n    margin: 0px 30px;\\n    display: flex;\\n    flex-direction: column;\\n   \\n}\\n\\n\\n.subheading-btn-div {\\n    position: relative;\\n    height: min-content;\\n    margin-left: 10px;\\n  \\n}\\n\\n.task-div {\\n    padding: 5px 10px 0px 10px;\\n    margin-left: 10px;\\n    margin-bottom: 10px;\\n\\n    font-size: 2rem;\\n    border-radius: 5px;\\n    box-shadow: 0px 0px 3px 1px gray;\\n}\\n\\n.task-title:hover {\\n    color: aliceblue;\\n    cursor: pointer;\\n    border-radius: 20px;\\n}\\n\\n.add-task-btn, .delete-task-btn, dialog button {\\n    margin: 0 5px 40px 5px;\\n    \\n    width: fit-content;\\n    padding: 5px 15px;\\n    border-radius: 30px;\\n    border: none;\\n    box-shadow: 0px 0px 5px 0px gray;\\n    \\n    font-size: 1.5rem;\\n    \\n}\\n\\n.add-subheading-btn, .delete-project-btn, .delete-subheading-btn {\\n    margin: 5px 5px 10px 5px;\\n    \\n    border-radius: 50px;\\n    font-size: 1.5rem;\\n    text-align: center;\\n    place-content: center;\\n    padding: 5px 10px;\\n    box-shadow: 0px 0px 5px 0px gray;\\n    border: none;\\n\\n}\\n\\ninput[type = \\"checkbox\\"] {\\n    appearance: none;\\n    margin: 0;\\n    font: inherit;\\n    color: currentColor;\\n    width: 1.15em;\\n    height: 1.15em;\\n    border: 0.15em solid currentColor;\\n    border-radius: 1em;\\n    transform: translateY(-0.075em);\\n\\n    display: grid;\\n    place-content: center;\\n\\n\\n    position: relative;\\n    top: 15px;\\n    left: 15px;\\n\\n}\\n\\ninput[type=\\"checkbox\\"]::before {\\n  content: \\"\\";\\n  width: 0.65em;\\n  height: 0.65em;\\n  border-radius: 10em;\\n  transform: scale(0);\\n  transition: 120ms transform ease-in-out;\\n  box-shadow: inset 1em 1em#BCCCDC;\\n  background-color: CanvasText;\\n}\\n\\ninput[type=\\"checkbox\\"]:checked::before {\\n  transform: scale(1);\\n}\\n\\ndialog {\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n   \\n    width: 25%;\\n    height: 70%;\\n\\n    border-radius: 30px;\\n    background-color: aliceblue;\\n    border: dashed aliceblue 5px;\\n\\n    font-size: 2rem;\\n    overflow: hidden;\\n    \\n}\\n\\ndialog button {\\n    margin-top: 30px;\\n}\\n\\ndialog label {\\n    margin-top: 5px;\\n    font-size: 2.5rem;\\n}\\n\\n\\ndialog input {\\n    display: flex;\\n    width: 80%;\\n    padding: 0 10px;\\n    border-radius: 20px;\\n    border: none;\\n    box-shadow: 0px 0px 5px 0px gray;\\n}\\n\\ndialog input:focus {\\n    outline: none;\\n\\n}\\n\\n\\ninput[type = \\"textarea\\"] {\\n    resize: both;\\n}\\n\\n\\ndialog input::placeholder {\\n    font-size: 1.7rem;\\n} \\n\\n.delete-task-btn {\\n    position:relative;\\n    left: 70px;\\n    top: -30px;\\n    margin-bottom: 0px;\\n}\\n\\nbutton {\\n    font-family: \'amaticbold\';\\n}\\n\\n.modal-contents {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.title-div {\\n    font-size: 3rem;\\n    margin-top: 0px;\\n    height: fit-content;\\n    \\n}\\n\\n.title-div button {\\n    align-self: center;\\n    \\n}\\n\\n.completion-bar {\\n    font-size: 2.5rem;\\n}\\n\\n.subheading-div-title {\\n    font-size: 3rem;\\n}\\n\\nbutton:hover {\\n    background-color: rgba(175, 175, 175, 0.671);\\n    cursor: pointer;\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///621\n\n}')},659:module=>{eval('{\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcz9iMjE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///659\n\n}')},662:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('{\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  G: () => (/* binding */ currentProjects),\n  F: () => (/* binding */ editTaskModal)\n});\n\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/css/styles.css\nvar styles = __webpack_require__(621);\n;// ./src/css/styles.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, "head");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(styles/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const css_styles = (styles/* default */.A && styles/* default */.A.locals ? styles/* default */.A.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/css/reset.css\nvar css_reset = __webpack_require__(790);\n;// ./src/css/reset.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar reset_options = {};\n\nreset_options.styleTagTransform = (styleTagTransform_default());\nreset_options.setAttributes = (setAttributesWithoutAttributes_default());\nreset_options.insert = insertBySelector_default().bind(null, "head");\nreset_options.domAPI = (styleDomAPI_default());\nreset_options.insertStyleElement = (insertStyleElement_default());\n\nvar reset_update = injectStylesIntoStyleTag_default()(css_reset/* default */.A, reset_options);\n\n\n\n\n       /* harmony default export */ const src_css_reset = (css_reset/* default */.A && css_reset/* default */.A.locals ? css_reset/* default */.A.locals : undefined);\n\n;// ./src/js/addNewProject.js\nclass Project {\n    constructor(title) {\n        this.title = title;\n    }\n}\nfunction addNewProject(title) {\n    let newProjectTitle = new Project(title);\n    const newProject = {\n        projectTitle: newProjectTitle.title,\n        subHeadings: [],\n    }\n    return newProject;\n}\n;// ./src/js/createTask.js\nclass ToDoTask {\n    \n    constructor(taskTitle, taskDesc, dueDate,\n        priorityLvl, isComplete = false) {\n            this.taskTitle = taskTitle;\n            this.taskDesc = taskDesc;\n            this.dueDate = dueDate;\n            this.priorityLvl = priorityLvl;\n            this.isComplete = isComplete;\n        };\n};\n\nfunction createTask(taskTitle, taskDesc, dueDate, priorityLvl) {\n    let newTask = new ToDoTask(taskTitle, taskDesc, dueDate, priorityLvl);\n\n    return newTask;\n} \n;// ./src/js/createSubHeading.js\nclass SubHeading {\n    constructor(title, tasks = []) {\n        this.title = title;\n        this.tasks = tasks;\n    }\n}\nfunction createSubHeading(title) {\n    const newSubHeading = new SubHeading(title);\n    return newSubHeading\n}\n;// ./src/js/renderCompletionBar.js\nfunction renderCompletionBar() {\n    \n    const projectBody = document.querySelector(".current-project-body");\n    const completionBarDiv = document.createElement("div");\n\n    completionBarDiv.innerText = "Completion % :";\n    completionBarDiv.classList.add("completion-bar");\n\n    projectBody.appendChild(completionBarDiv);\n}\n;// ./src/js/updateCompletionBar.js\nfunction updateCompletionBar(workingProject) {\n\n    const completionBarElement = document.querySelector(".completion-bar");\n\n    let completedTasks = [];\n    let totalTaskCounter = 0;\n\n\n    workingProject.subHeadings.forEach(subHeading => {\n        subHeading.tasks.forEach((task) => {\n            totalTaskCounter++;\n            if (task.isComplete) {\n                completedTasks.push(task);\n            };\n        });\n    });\n\n\n    const percentageCompletion = (completedTasks.length / totalTaskCounter) * 100;\n    \n    if (percentageCompletion === undefined || percentageCompletion === NaN || percentageCompletion === null) {\n        completionBarElement.innerText = "Completion % : ";\n    }\n    else {\n    completionBarElement.innerText = "Completion % : " + percentageCompletion + "%";\n    }\n};\n;// ./src/js/renderSubHeadings.js\n\n\n\nlet workingProject;\n\nfunction renderSubHeadings(newWorkingProject) {\n    \n    const projectBody = document.querySelector(".current-project-body");\n    renderCompletionBar();\n    workingProject = newWorkingProject;\n    \n    workingProject.subHeadings.forEach(subHeading => {\n        const subHeadingDiv = document.createElement("div");\n        subHeadingDiv.classList.add("subheading-div");\n        const renderedSubHeading = document.createElement("h2");\n        renderedSubHeading.classList.add("subheading-div-title");\n        const btnDiv = document.createElement("div");\n        btnDiv.classList.add("subheading-btn-div");\n\n        renderedSubHeading.innerHTML = subHeading.title;\n        subHeadingDiv.appendChild(renderedSubHeading);\n\n        const addTaskBtn = document.createElement("button");\n        addTaskBtn.innerText = "Add Task";\n        addTaskBtn.classList.add("add-task-btn");\n        btnDiv.appendChild(addTaskBtn);\n        renderedSubHeading.dataset.subHeadingData = subHeading.title;\n\n        addTaskBtn.addEventListener("click", function() {\n            const addTaskModal = document.querySelector(".add-task-modal");\n            addTaskModal.showModal();\n            addTaskModal.dataset.subHeading = subHeading.title;\n        });\n\n        const deleteSubHeadingBtn = document.createElement("button");\n        deleteSubHeadingBtn.innerText = "Delete Sub Section";\n        deleteSubHeadingBtn.classList.add("delete-subheading-btn");\n        btnDiv.appendChild(deleteSubHeadingBtn);\n        deleteSubHeadingBtn.dataset.subHeading = subHeading.title;\n\n\n        deleteSubHeadingBtn.addEventListener("click", function() {\n        \n        updateCompletionBar(workingProject);\n        deleteSubHeadingBtn.parentElement.remove();\n\n        const subHeadingDomTitle = deleteSubHeadingBtn.dataset.subHeading;\n    \n            workingProject.subHeadings.forEach((subHeading) => {\n\n                if (subHeading.title === subHeadingDomTitle) {\n                    let subHeadingToDeleteIndex = workingProject.subHeadings.indexOf(subHeading);\n                    workingProject.subHeadings.splice(subHeadingToDeleteIndex,1); \n                    updateCompletionBar(workingProject);\n                }\n            });\n        });\n\n\n        addTaskBtn.classList.add("subheading-btn-1");\n        deleteSubHeadingBtn.classList.add("subheading-btn-2");\n\n        updateCompletionBar(workingProject);\n        subHeadingDiv.appendChild(btnDiv);\n        projectBody.append(subHeadingDiv);\n });\n};\n\n\n\n;// ./src/js/saveData.js\n\n\nfunction saveData() {\n    localStorage.setItem("projectData", JSON.stringify(currentProjects));\n};\n;// ./src/js/toggleCompletion.js\n\n\n\nfunction toggleCompletion(taskToEdit, workingProject) {\n    \n    taskToEdit.isComplete = !taskToEdit.isComplete;\n    updateCompletionBar(workingProject);\n\n    saveData();\n};\n;// ./node_modules/date-fns/constants.js\n/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from "./constants/date-fns/constants";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nconst daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nconst daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from "./constants/date-fns/constants";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nconst maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from "./constants/date-fns/constants";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nconst minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nconst millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nconst millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nconst millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nconst millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nconst millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nconst minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nconst minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nconst minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nconst minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nconst monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nconst monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nconst quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nconst secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nconst secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nconst secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nconst secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nconst secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nconst secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nconst secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It\'s useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nconst constructFromSymbol = Symbol.for("constructDateFrom");\n\n;// ./node_modules/date-fns/constructFrom.js\n\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for("constructDateFrom")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It\'s useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from "./constructFrom/date-fns";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nfunction constructFrom(date, value) {\n  if (typeof date === "function") return date(value);\n\n  if (date && typeof date === "object" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_constructFrom = ((/* unused pure expression or super */ null && (constructFrom)));\n\n;// ./node_modules/date-fns/constructNow.js\n\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from \'date-fns\'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nfunction constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_constructNow = ((/* unused pure expression or super */ null && (constructNow)));\n\n;// ./node_modules/date-fns/locale/en-US/_lib/formatDistance.js\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: "less than a second",\n    other: "less than {{count}} seconds",\n  },\n\n  xSeconds: {\n    one: "1 second",\n    other: "{{count}} seconds",\n  },\n\n  halfAMinute: "half a minute",\n\n  lessThanXMinutes: {\n    one: "less than a minute",\n    other: "less than {{count}} minutes",\n  },\n\n  xMinutes: {\n    one: "1 minute",\n    other: "{{count}} minutes",\n  },\n\n  aboutXHours: {\n    one: "about 1 hour",\n    other: "about {{count}} hours",\n  },\n\n  xHours: {\n    one: "1 hour",\n    other: "{{count}} hours",\n  },\n\n  xDays: {\n    one: "1 day",\n    other: "{{count}} days",\n  },\n\n  aboutXWeeks: {\n    one: "about 1 week",\n    other: "about {{count}} weeks",\n  },\n\n  xWeeks: {\n    one: "1 week",\n    other: "{{count}} weeks",\n  },\n\n  aboutXMonths: {\n    one: "about 1 month",\n    other: "about {{count}} months",\n  },\n\n  xMonths: {\n    one: "1 month",\n    other: "{{count}} months",\n  },\n\n  aboutXYears: {\n    one: "about 1 year",\n    other: "about {{count}} years",\n  },\n\n  xYears: {\n    one: "1 year",\n    other: "{{count}} years",\n  },\n\n  overXYears: {\n    one: "over 1 year",\n    other: "over {{count}} years",\n  },\n\n  almostXYears: {\n    one: "almost 1 year",\n    other: "almost {{count}} years",\n  },\n};\n\nconst formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === "string") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace("{{count}}", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return "in " + result;\n    } else {\n      return result + " ago";\n    }\n  }\n\n  return result;\n};\n\n;// ./node_modules/date-fns/locale/_lib/buildFormatLongFn.js\nfunction buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n\n;// ./node_modules/date-fns/locale/en-US/_lib/formatLong.js\n\n\nconst dateFormats = {\n  full: "EEEE, MMMM do, y",\n  long: "MMMM do, y",\n  medium: "MMM d, y",\n  short: "MM/dd/yyyy",\n};\n\nconst timeFormats = {\n  full: "h:mm:ss a zzzz",\n  long: "h:mm:ss a z",\n  medium: "h:mm:ss a",\n  short: "h:mm a",\n};\n\nconst dateTimeFormats = {\n  full: "{{date}} \'at\' {{time}}",\n  long: "{{date}} \'at\' {{time}}",\n  medium: "{{date}}, {{time}}",\n  short: "{{date}}, {{time}}",\n};\n\nconst formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: "full",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: "full",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: "full",\n  }),\n};\n\n;// ./node_modules/date-fns/locale/en-US/_lib/formatRelative.js\nconst formatRelativeLocale = {\n  lastWeek: "\'last\' eeee \'at\' p",\n  yesterday: "\'yesterday at\' p",\n  today: "\'today at\' p",\n  tomorrow: "\'tomorrow at\' p",\n  nextWeek: "eeee \'at\' p",\n  other: "P",\n};\n\nconst formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n\n;// ./node_modules/date-fns/locale/_lib/buildLocalizeFn.js\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don\'t start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nfunction buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : "standalone";\n\n    let valuesArray;\n    if (context === "formatting" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don\'t want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n\n;// ./node_modules/date-fns/locale/en-US/_lib/localize.js\n\n\nconst eraValues = {\n  narrow: ["B", "A"],\n  abbreviated: ["BC", "AD"],\n  wide: ["Before Christ", "Anno Domini"],\n};\n\nconst quarterValues = {\n  narrow: ["1", "2", "3", "4"],\n  abbreviated: ["Q1", "Q2", "Q3", "Q4"],\n  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you\'re working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],\n  abbreviated: [\n    "Jan",\n    "Feb",\n    "Mar",\n    "Apr",\n    "May",\n    "Jun",\n    "Jul",\n    "Aug",\n    "Sep",\n    "Oct",\n    "Nov",\n    "Dec",\n  ],\n\n  wide: [\n    "January",\n    "February",\n    "March",\n    "April",\n    "May",\n    "June",\n    "July",\n    "August",\n    "September",\n    "October",\n    "November",\n    "December",\n  ],\n};\n\nconst dayValues = {\n  narrow: ["S", "M", "T", "W", "T", "F", "S"],\n  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],\n  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],\n  wide: [\n    "Sunday",\n    "Monday",\n    "Tuesday",\n    "Wednesday",\n    "Thursday",\n    "Friday",\n    "Saturday",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: "a",\n    pm: "p",\n    midnight: "mi",\n    noon: "n",\n    morning: "morning",\n    afternoon: "afternoon",\n    evening: "evening",\n    night: "night",\n  },\n  abbreviated: {\n    am: "AM",\n    pm: "PM",\n    midnight: "midnight",\n    noon: "noon",\n    morning: "morning",\n    afternoon: "afternoon",\n    evening: "evening",\n    night: "night",\n  },\n  wide: {\n    am: "a.m.",\n    pm: "p.m.",\n    midnight: "midnight",\n    noon: "noon",\n    morning: "morning",\n    afternoon: "afternoon",\n    evening: "evening",\n    night: "night",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: "a",\n    pm: "p",\n    midnight: "mi",\n    noon: "n",\n    morning: "in the morning",\n    afternoon: "in the afternoon",\n    evening: "in the evening",\n    night: "at night",\n  },\n  abbreviated: {\n    am: "AM",\n    pm: "PM",\n    midnight: "midnight",\n    noon: "noon",\n    morning: "in the morning",\n    afternoon: "in the afternoon",\n    evening: "in the evening",\n    night: "at night",\n  },\n  wide: {\n    am: "a.m.",\n    pm: "p.m.",\n    midnight: "midnight",\n    noon: "noon",\n    morning: "in the morning",\n    afternoon: "in the afternoon",\n    evening: "in the evening",\n    night: "at night",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be \'year\', \'quarter\', \'month\', \'week\', \'date\', \'dayOfYear\',\n  // \'day\', \'hour\', \'minute\', \'second\'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + "st";\n      case 2:\n        return number + "nd";\n      case 3:\n        return number + "rd";\n    }\n  }\n  return number + "th";\n};\n\nconst localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: "wide",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: "wide",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: "wide",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: "wide",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: "wide",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: "wide",\n  }),\n};\n\n;// ./node_modules/date-fns/locale/_lib/buildMatchFn.js\nfunction buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\n;// ./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js\nfunction buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\n;// ./node_modules/date-fns/locale/en-US/_lib/match.js\n\n\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nconst match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: "wide",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: "any",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: "wide",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: "any",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: "wide",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: "any",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: "wide",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: "any",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: "any",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: "any",\n  }),\n};\n\n;// ./node_modules/date-fns/locale/en-US.js\n\n\n\n\n\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nconst enUS = {\n  code: "en-US",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\n/* harmony default export */ const en_US = ((/* unused pure expression or super */ null && (enUS)));\n\n;// ./node_modules/date-fns/_lib/defaultOptions.js\nlet defaultOptions = {};\n\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\n\nfunction setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n\n;// ./node_modules/date-fns/_lib/getRoundingMethod.js\nfunction getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n\n;// ./node_modules/date-fns/toDate.js\n\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for("constructDateFrom")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It\'s useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_toDate = ((/* unused pure expression or super */ null && (toDate)));\n\n;// ./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js\n\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for \'Europe/Prague\' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nfunction getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n\n;// ./node_modules/date-fns/_lib/normalizeDates.js\n\n\nfunction normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === "object"),\n  );\n  return dates.map(normalize);\n}\n\n;// ./node_modules/date-fns/compareAsc.js\n\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nfunction compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_compareAsc = ((/* unused pure expression or super */ null && (compareAsc)));\n\n;// ./node_modules/date-fns/formatDistanceStrict.js\n\n\n\n\n\n\n\n\n/**\n * The {@link formatDistanceStrict} function options.\n */\n\n/**\n * The unit used to format the distance in {@link formatDistanceStrict}.\n */\n\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like \'almost\', \'over\',\n * \'less than\' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.unit` must be \'second\', \'minute\', \'hour\', \'day\', \'month\' or \'year\'\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> \'6 months\'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> \'15 seconds\'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> \'1 year ago\'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: \'minute\'\n * })\n * //=> \'525600 minutes\'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: \'month\',\n *   roundingMethod: \'ceil\'\n * })\n * //=> \'1 month\'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from \'date-fns/locale/eo\'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> \'1 jaro\'\n */\n\nfunction formatDistanceStrict(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? enUS;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError("Invalid time value");\n  }\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const roundingMethod = getRoundingMethod(options?.roundingMethod ?? "round");\n\n  const milliseconds = earlierDate_.getTime() - laterDate_.getTime();\n  const minutes = milliseconds / millisecondsInMinute;\n\n  const timezoneOffset =\n    getTimezoneOffsetInMilliseconds(earlierDate_) -\n    getTimezoneOffsetInMilliseconds(laterDate_);\n\n  // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n  const dstNormalizedMinutes =\n    (milliseconds - timezoneOffset) / millisecondsInMinute;\n\n  const defaultUnit = options?.unit;\n  let unit;\n  if (!defaultUnit) {\n    if (minutes < 1) {\n      unit = "second";\n    } else if (minutes < 60) {\n      unit = "minute";\n    } else if (minutes < minutesInDay) {\n      unit = "hour";\n    } else if (dstNormalizedMinutes < minutesInMonth) {\n      unit = "day";\n    } else if (dstNormalizedMinutes < minutesInYear) {\n      unit = "month";\n    } else {\n      unit = "year";\n    }\n  } else {\n    unit = defaultUnit;\n  }\n\n  // 0 up to 60 seconds\n  if (unit === "second") {\n    const seconds = roundingMethod(milliseconds / 1000);\n    return locale.formatDistance("xSeconds", seconds, localizeOptions);\n\n    // 1 up to 60 mins\n  } else if (unit === "minute") {\n    const roundedMinutes = roundingMethod(minutes);\n    return locale.formatDistance("xMinutes", roundedMinutes, localizeOptions);\n\n    // 1 up to 24 hours\n  } else if (unit === "hour") {\n    const hours = roundingMethod(minutes / 60);\n    return locale.formatDistance("xHours", hours, localizeOptions);\n\n    // 1 up to 30 days\n  } else if (unit === "day") {\n    const days = roundingMethod(dstNormalizedMinutes / minutesInDay);\n    return locale.formatDistance("xDays", days, localizeOptions);\n\n    // 1 up to 12 months\n  } else if (unit === "month") {\n    const months = roundingMethod(dstNormalizedMinutes / minutesInMonth);\n    return months === 12 && defaultUnit !== "month"\n      ? locale.formatDistance("xYears", 1, localizeOptions)\n      : locale.formatDistance("xMonths", months, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const years = roundingMethod(dstNormalizedMinutes / minutesInYear);\n    return locale.formatDistance("xYears", years, localizeOptions);\n  }\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_formatDistanceStrict = ((/* unused pure expression or super */ null && (formatDistanceStrict)));\n\n;// ./node_modules/date-fns/formatDistanceToNowStrict.js\n\n\n\n\n/**\n * The {@link formatDistanceToNowStrict} function options.\n */\n\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like \'almost\', \'over\',\n * \'less than\' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> \'6 months\'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> \'15 seconds\'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> \'in 1 year\'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: \'month\',\n *   roundingMethod: \'ceil\'\n * })\n * //=> \'1 month\'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016 in Esperanto?\n * const eoLocale = require(\'date-fns/locale/eo\')\n * const result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> \'1 jaro\'\n */\nfunction formatDistanceToNowStrict(date, options) {\n  return formatDistanceStrict(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_formatDistanceToNowStrict = ((/* unused pure expression or super */ null && (formatDistanceToNowStrict)));\n\n;// ./src/js/updateTimeLeft.js\n\n\nfunction updateTimeLeft(date) {\n\n    let timeLeft;\n\n    if (date === undefined) {\n        timeLeft = "Error";\n    }\n    else {\n        const dueDate = new Date(date);\n        timeLeft = formatDistanceToNowStrict(dueDate);\n    };\n    return timeLeft;\n};\n;// ./src/js/updateTaskPriority.js\nfunction updateTaskPriority(taskDiv, task) {\n\n    switch (task.priorityLvl) {\n        case "1" :\n            taskDiv.setAttribute("style", "background-color: #f3000094");\n            break\n        case "2" :\n            taskDiv.setAttribute("style", "background-color: #fff170ff");\n            break\n        case "3" :\n            taskDiv.setAttribute("style", "background-color: #4A9782");\n            break\n        default:\n            taskDiv.setAttribute("style", "background-color: #E4E0E1");\n    };\n};\n;// ./src/js/editTask.js\n\n\n\n\nfunction editTask(renderedTaskTitle, workingProject) {\n\n    let fetchedArrayTask;\n    let divToEdit = renderedTaskTitle.parentElement; \n\n    let subHeadingTitle = divToEdit.parentElement.dataset.subHeadingData;\n\n    workingProject.subHeadings.forEach(subHeading => {\n\n        if (subHeading.title === subHeadingTitle) {\n            subHeading.tasks.forEach((task) => {\n          \n                if (task.taskTitle === renderedTaskTitle.innerText) {\n                    fetchedArrayTask = createTask(task.taskTitle, task.taskDesc,\n                        task.dueDate, task.priorityLvl);\n                \n                };\n            });\n        };\n    });\n\n// //     // find input boxes \n\n    let taskTitleInput = document.querySelector("#edittedTaskTitle");\n    let taskDescInput = document.querySelector("#edittedTaskDesc");\n    let taskDueDateInput = document.querySelector("#edittedTaskDueDate");\n    let taskPriorityLvlInput = document.querySelector("#edittedTaskPriorityLvl");\n\n    taskTitleInput.value = fetchedArrayTask.taskTitle;\n    taskDescInput.value = fetchedArrayTask.taskDesc;\n    taskDueDateInput.value = fetchedArrayTask.dueDate;\n    taskPriorityLvlInput.value = fetchedArrayTask.priorityLvl;\n\n    editTaskModal.dataset.fetchedTaskTitle = fetchedArrayTask.taskTitle;\n    editTaskModal.dataset.fetchedTaskDesc = fetchedArrayTask.taskTitle;\n    editTaskModal.dataset.fetchedDueDate = fetchedArrayTask.dueDate;\n    editTaskModal.dataset.fetchedPrioLvl = fetchedArrayTask.priorityLvl;\n\n\n\n    editTaskModal.showModal();\n\n}\n\n\n;// ./src/js/renderTasks.js\n\n\n\n\n\n\nfunction renderTasks(workingProject) {\n\n    NodeList.prototype.forEach = Array.prototype.forEach;\n    let taskDiv;\n    let currentSubHeadingDOMElement;\n\n    workingProject.subHeadings.forEach((subHeading) => {\n        currentSubHeadingDOMElement = document.querySelector("h2[data-sub-heading-data = "  + "\'" + subHeading.title + "\'" + "]");\n        \n        subHeading.tasks.forEach((task) => {\n\n            taskDiv = document.createElement("div");\n            taskDiv.classList.add("task-div");\n            taskDiv.dataset.divIdentifier = task.taskTitle;\n\n            const deleteTaskBtn = document.createElement("button");\n            deleteTaskBtn.innerHTML = "Delete";\n            deleteTaskBtn.classList.add("delete-task-btn");\n\n            deleteTaskBtn.addEventListener("click", function(){\n\n                const recollectedBelongingSubHeading = this.parentElement.parentElement.firstChild.textContent;\n                const recollectedTaskTitle = this.parentElement.firstChild.innerText\n                \n                workingProject.subHeadings.forEach((subHeading) => {\n\n                    if (recollectedBelongingSubHeading === subHeading.title) {\n                        subHeading.tasks.forEach(task => {\n                            if (task.taskTitle === recollectedTaskTitle) {\n        \n                                const taskToDeleteIndex = subHeading.tasks.indexOf(task)\n                                subHeading.tasks.splice(taskToDeleteIndex, 1);\n                            };\n                        });\n                    };\n                });\n                this.parentElement.remove();\n                updateCompletionBar(workingProject);\n            });\n\n            const renderedTaskTitle = document.createElement("h3");\n            renderedTaskTitle.classList.add("task-title");\n            const renderedTaskDesc = document.createElement("p");\n            const renderedTaskDueDate = document.createElement("p");\n            const renderedTaskPriorityLvl = document.createElement("p");\n            const renderedTimeLeft = document.createElement("p");\n            \n            const taskCompletedCheckbox = document.createElement("input");\n            taskCompletedCheckbox.setAttribute("type", "checkbox");\n             \n            taskCompletedCheckbox.addEventListener("change", function() {\n                toggleCompletion(task, workingProject);\n            });\n\n            renderedTaskTitle.innerHTML = task.taskTitle;\n            renderedTaskDesc.innerHTML = task.taskDesc;\n            renderedTaskDueDate.innerHTML = "Due Date: " + task.dueDate;\n            renderedTaskPriorityLvl.innerHTML = task.priorityLvl;\n\n            updateTaskPriority(taskDiv, task);\n            \n            if (task.dueDate === "") {\n                renderedTimeLeft.innerText = "Time Left: " + updateTimeLeft();\n            }\n            else {\n                renderedTimeLeft.innerText = "Time Left: " + updateTimeLeft(task.dueDate);\n            }\n            taskDiv.appendChild(renderedTaskTitle);\n            taskDiv.appendChild(renderedTaskDesc);\n            taskDiv.appendChild(renderedTaskDueDate);\n            taskDiv.appendChild(renderedTimeLeft);\n            taskDiv.appendChild(taskCompletedCheckbox);\n            taskDiv.appendChild(deleteTaskBtn);\n\n\n            if (task.isComplete) {\n                taskCompletedCheckbox.checked = true;\n            }\n\n            renderedTaskTitle.addEventListener("click", function() {\n\n                editTask(this, workingProject);\n\n            });\n            \n            currentSubHeadingDOMElement.appendChild(taskDiv);\n        });\n    });\n    updateCompletionBar(workingProject);\n};\n;// ./src/js/cleanProjectBody.js\nfunction cleanProjectBody() {\n    const projectBody = document.querySelector(".current-project-body");\n\n    while (projectBody.hasChildNodes()) {\n        projectBody.firstChild.remove();\n    };\n};\n;// ./src/js/renderExistingProject.js\n\n\n\n\n\n\nfunction renderExistingProject(projectTitle, workingProject, goToProjectButtonPressed) {\n   \n    cleanProjectBody();\n    renderProjectHeading(projectTitle, goToProjectButtonPressed);\n\n    renderSubHeadings(workingProject);\n    renderTasks(workingProject);\n\n    saveData();\n};\n;// ./src/js/createProjectCard.js\n\n\nfunction createProjectCard(workingProject) {\n\n        const projectListBody = document.querySelector(".project-list-body");\n        const newProjectCard = document.createElement("div");\n        const projectTitleElement = document.createElement("div");\n\n\n        projectTitleElement.innerText = workingProject.projectTitle;\n        projectTitleElement.classList.add("project-card-title")\n        \n        newProjectCard.classList.add("project-card");\n        newProjectCard.classList.add("go-to-project-card")\n\n\n        const goToProjectBtn = document.createElement("button");\n        goToProjectBtn.innerHTML = "Open";\n\n        let classToAdd = workingProject.projectTitle.trim();\n        classToAdd = classToAdd.replace(/\\s/g, \'\');\n        goToProjectBtn.classList.add(classToAdd);\n        goToProjectBtn.classList.add("go-to-project-card-btn")\n\n\n        projectListBody.appendChild(newProjectCard);\n        newProjectCard.appendChild(projectTitleElement);\n        newProjectCard.appendChild(goToProjectBtn);\n\n        goToProjectBtn.addEventListener("click", function() {            \n            // bool to prevent project card creation on go to Project Btn\n            let goToProjectButtonPressed = true;\n            renderExistingProject(workingProject.projectTitle, workingProject, goToProjectButtonPressed);\n        })\n\n}\n;// ./src/js/removeLastCard.js\nfunction removeProjectCard(title) {\n    \n    const formattedTitle = title.replace(/\\s/g, \'\');\n    const btnBelongingToProjectCard = document.querySelector("." + formattedTitle);\n    btnBelongingToProjectCard.parentElement.remove();\n};\n;// ./src/js/renderProjectHeading.js\n\n\n\n\n\n\n\n\n\nfunction renderProjectHeading(title, goToProjectButtonPressed) {\n\n    let workingProject\n    const projectBody = document.querySelector(".current-project-body");\n\n    cleanProjectBody();\n    currentProjects.forEach((project) => {\n        if (project.projectTitle === title) {\n            workingProject = project;\n        };\n    });\n    \n    let classToAdd = workingProject.projectTitle.trim();\n    classToAdd = classToAdd.replace(/\\s/g, \'\');\n    projectBody.classList.add(classToAdd);\n\n    // render heading \n\n    const titleDiv = document.createElement("div");\n    titleDiv.classList.add("title-div");\n    projectBody.appendChild(titleDiv);\n\n    const renderedProjectTitle = document.createElement("h1");\n    renderedProjectTitle.classList.add("project-Title");\n    renderedProjectTitle.innerHTML =  workingProject.projectTitle;\n    titleDiv.appendChild(renderedProjectTitle);\n\n    const addSubHeadingBtn = document.createElement("button");\n    addSubHeadingBtn.innerHTML = "Add Subsection";\n    addSubHeadingBtn.classList.add("add-subheading-btn");\n    \n    addSubHeadingBtn.addEventListener("click", function() {\n\n        let subHeadingExists = false;\n        let emptyInput = false;\n        let enteredSubheading = prompt("Enter a Sub Section Title:", "Kitchen Cleaning");\n\n        if (enteredSubheading === null || enteredSubheading.length === 0) {emptyInput = true;}\n \n        workingProject.subHeadings.forEach((subHeading) => {\n            if (subHeading.title === enteredSubheading) {subHeadingExists = true;}\n        });\n\n        if (!subHeadingExists && !emptyInput) {\n            let createdSubHeading = createSubHeading(enteredSubheading);\n            saveData();\n            workingProject.subHeadings.push(createdSubHeading);\n            cleanProjectBody() \n\n            projectBody.appendChild(titleDiv);\n            renderSubHeadings(workingProject);\n            renderTasks(workingProject);\n        }\n\n        if (subHeadingExists || emptyInput) {\n            alert("Subtitle exists or field is empty, cancelling...")\n        }\n    });\n\n    const deleteProjectBtn = document.createElement("button");\n    deleteProjectBtn.innerText = "Delete Project";\n    deleteProjectBtn.classList.add("delete-project-btn")\n    \n\n    deleteProjectBtn.addEventListener("click", function() {\n        cleanProjectBody();\n        currentProjects.forEach((project) => {\n            if (project.projectTitle === title) {\n                const indexOfRemovingProject = currentProjects.indexOf(project);\n                currentProjects.splice(indexOfRemovingProject, 1);\n                removeProjectCard(title);\n            };\n        });\n    });\n\n    titleDiv.appendChild(addSubHeadingBtn);\n    titleDiv.appendChild(deleteProjectBtn);\n\n    if (!goToProjectButtonPressed) {\n        createProjectCard(workingProject);\n    }\n\n    goToProjectButtonPressed = false;\n\n    return { workingProject };\n\n};\n\n\n\n\n;// ./src/js/renderNewTask.js\n\n\n\n\n\n\n\nfunction renderNewTask(workingProject, workingSubHeading) {\n\n    workingProject.subHeadings.forEach(subHeading => {\n        if (subHeading.title === workingSubHeading) {\n\n            const currentSubHeadingDOMElement = document.querySelector("h2[data-sub-heading-data = "  + "\'" + subHeading.title + "\'" + "]");\n\n            const workingTaskList = subHeading.tasks; \n            const taskToRender = workingTaskList[workingTaskList.length - 1];\n\n            const taskDiv = document.createElement("div");\n            taskDiv.classList.add("task-div");\n            \n            const renderedTaskTitle = document.createElement("h3");\n            renderedTaskTitle.classList.add("task-title");\n            const renderedTaskDesc = document.createElement("p");\n            const renderedTaskDueDate = document.createElement("p");\n            const renderedTaskPriorityLvl = document.createElement("p");\n            const renderedTimeLeft = document.createElement("p");\n\n            const taskCompletedCheckbox = document.createElement("input");\n            taskCompletedCheckbox.setAttribute("type", "checkbox");\n\n            taskCompletedCheckbox.addEventListener("change", function() {\n                toggleCompletion(taskToRender, workingProject);\n            });\n\n            const deleteTaskBtn = document.createElement("button");\n            deleteTaskBtn.innerHTML = "Delete";\n            deleteTaskBtn.classList.add("delete-task-btn");\n\n            deleteTaskBtn.addEventListener("click", function(){\n             \n                const recollectedBelongingSubHeading = this.parentElement.parentElement.firstChild.textContent;\n                const recollectedTaskTitle = this.parentElement.firstChild.innerText;\n                \n                workingProject.subHeadings.forEach((subHeading) => {\n\n                    if (recollectedBelongingSubHeading === subHeading.title) {\n                        subHeading.tasks.forEach(task => {\n                            if (task.taskTitle === recollectedTaskTitle) {\n        \n                                const taskToDeleteIndex = subHeading.tasks.indexOf(task);\n                                subHeading.tasks.splice(taskToDeleteIndex, 1);\n                            };\n                        });\n                    };\n                });\n            \n                this.parentElement.remove();\n                updateCompletionBar(workingProject);\n            });\n\n            renderedTaskTitle.innerHTML = taskToRender.taskTitle;\n            renderedTaskDesc.innerHTML = taskToRender.taskDesc;\n            renderedTaskDueDate.innerHTML = "Due Date: " + taskToRender.dueDate;\n            renderedTaskPriorityLvl.innerHTML = taskToRender.priorityLvl;\n\n            updateTaskPriority(taskDiv, taskToRender);\n\n            // checks to see that due date inputted\n\n            if (taskToRender.dueDate === "") {\n                // throws error\n                renderedTimeLeft.innerText = "Time Left: " + updateTimeLeft();\n            }\n            else {\n                renderedTimeLeft.innerText = "Time Left: " + updateTimeLeft(taskToRender.dueDate);\n            };\n    \n            renderedTaskTitle.addEventListener("click", function() {\n                editTask(renderedTaskTitle, workingProject);                \n            });\n\n            taskDiv.appendChild(renderedTaskTitle);\n            taskDiv.appendChild(renderedTaskDesc);\n            taskDiv.appendChild(renderedTaskDueDate);\n            taskDiv.appendChild(renderedTimeLeft);\n            taskDiv.appendChild(taskCompletedCheckbox);\n            taskDiv.appendChild(deleteTaskBtn);\n\n         \n            currentSubHeadingDOMElement.appendChild(taskDiv);\n\n            updateCompletionBar(workingProject);\n\n            saveData();\n        };\n    });\n};\n;// ./src/js/loadExistingProjectCards.js\n\n\nfunction loadExistingProjectCards(data) {\n    \n    data.forEach((project) => {\n        createProjectCard(project);\n    });\n\n\n};\n;// ./src/js/loadData.js\n\n\nfunction loadData() {\n    \n    if (!localStorage.getItem("projectData")) {\n        // if no storage do nothing\n    }\n\n    else {\n        let existingData = localStorage.getItem("projectData");\n        existingData = JSON.parse(existingData);\n        loadExistingProjectCards(existingData);\n        return existingData;\n    };  \n};\n;// ./src/js/clearLocalStorage.js\n\n\nfunction clearLocalStorage() {\n    localStorage.setItem("projectData", []);\n    loadData();\n}\n;// ./src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet currentProjects = [];\nlet editTaskModal;\n\n(function() {\n\n    currentProjects = loadData();\n    \n    if (currentProjects === undefined) {\n        currentProjects = [];\n    };\n\n    function addListeners() {\n\n        // buttons\n    \n        const addNewProjectBtn = document.querySelector(".add-project-btn");\n        const confirmAddTaskBtn = document.querySelector(".confirm-task-button");\n        const clearLocalStorageBtn = document.querySelector(".clear-storage");\n        const confirmEditTaskBtn = document.querySelector(".confirm-edit-task-button");\n\n        const addTaskModal = document.querySelector(".add-task-modal");\n        editTaskModal = document.querySelector(".edit-task-modal");\n\n        // modal inputs - add task\n\n        const taskTitleInput = document.querySelector("#taskTitle");\n        const taskDescInput = document.querySelector("#taskDesc");\n        const taskDueDateInput = document.querySelector("#taskDueDate");\n        const taskPriorityLvlInput = document.querySelector("#taskPriorityLvl");\n\n        // modal inputs - edit task\n\n        let editTaskTitleInput = document.querySelector("#edittedTaskTitle");\n        let editTaskDescInput = document.querySelector("#edittedTaskDesc");\n        let editTaskDueDateInput = document.querySelector("#edittedTaskDueDate");\n        let editTaskPriorityLvlInput = document.querySelector("#edittedTaskPriorityLvl");\n\n        let divToEdit;\n        let existingHeadingList = document.querySelectorAll("h3");\n\n\n        taskDueDateInput.min = new Date().toISOString().split("T")[0];\n        editTaskDueDateInput.min = new Date().toISOString().split("T")[0];\n\n    \n        clearLocalStorageBtn.addEventListener("click", function() {\n            clearLocalStorage();\n        });\n\n        addNewProjectBtn.addEventListener("click", () => {\n\n            let projectExists = false;\n            let emptyInput = false;\n            let inputtedTitle = prompt("Enter Project Title:", "House Cleaning");\n\n\n\n            if (inputtedTitle === null || inputtedTitle.length === 0) { emptyInput = true;}\n\n            currentProjects.forEach((project) => {\n                if (project.projectTitle === inputtedTitle) {projectExists = true;}\n            });\n\n            if (projectExists === false && emptyInput === false) {\n                let projectToAdd = addNewProject(inputtedTitle);\n                currentProjects.push(projectToAdd);\n                renderProjectHeading(inputtedTitle);\n                renderCompletionBar();\n            }\n\n\n            if (projectExists || emptyInput) {\n                alert("Project Exists or Field is Empty, cancelling...")\n            }\n        });\n\n        confirmAddTaskBtn.addEventListener("click", function() {\n        \n            addTaskModal.close();\n\n            let subHeadingtoAppend = addTaskModal.dataset.subHeading;\n\n            for (const subHeading in workingProject.subHeadings) {\n                \n                const subHeadingToCheck = workingProject.subHeadings[subHeading].title;\n\n                if (subHeadingToCheck === subHeadingtoAppend) {\n\n                    let taskExists = false;\n                    let emptyInput = false;\n                    if (taskTitleInput.value.length === 0) {emptyInput = true;}\n\n                    workingProject.subHeadings[subHeading].tasks.forEach(task => {\n                        if (task.taskTitle === taskTitleInput.value) {taskExists = true;}\n                    });\n\n                    if (!taskExists && !emptyInput) {\n                        const newTask = createTask(\n                        taskTitleInput.value, \n                        taskDescInput.value, \n                        taskDueDateInput.value, \n                        taskPriorityLvlInput.value);\n                        workingProject.subHeadings[subHeading].tasks.push(newTask);\n                        renderNewTask(workingProject, subHeadingtoAppend);\n                    }\n                    else {alert("Task already exists or title field empty, cancelling...")}\n                };\n            };\n            taskTitleInput.value = ""\n            taskDescInput.value = ""\n            taskDueDateInput.value = ""\n            taskPriorityLvlInput.value = ""\n        });\n        \n        confirmEditTaskBtn.addEventListener("click", function() {\n        \n\n            let fetchedArrayTask = createTask(\n                editTaskModal.dataset.fetchedTaskTitle,\n                editTaskModal.dataset.fetchedTaskDesc,\n                editTaskModal.dataset.fetchedDueDate,\n                editTaskModal.dataset.fetchedPrioLvl\n            );\n\n            let edittedArrayTask = createTask(\n                fetchedArrayTask.taskTitle,\n                fetchedArrayTask.taskDesc, \n                fetchedArrayTask.dueDate, \n                fetchedArrayTask.priorityLvl\n            );\n        \n            edittedArrayTask.taskTitle = editTaskTitleInput.value;\n            edittedArrayTask.taskDesc = editTaskDescInput.value;\n            edittedArrayTask.dueDate = editTaskDueDateInput.value;\n            edittedArrayTask.priorityLvl = editTaskPriorityLvlInput.value;\n\n            existingHeadingList = document.querySelectorAll("h3");\n            \n            existingHeadingList.forEach((heading) => {\n                if (heading.innerText === fetchedArrayTask.taskTitle) {\n                    divToEdit = heading.parentElement;\n                };\n            });\n\n            // Checking to see if the updated task already exists\n\n            let taskExists = false;\n            let emptyInput = false;\n\n            if (edittedArrayTask.taskTitle.length === 0) {emptyInput = true;};\n\n            workingProject.subHeadings.forEach((subHeading) => {\n                subHeading.tasks.forEach((task) => {\n                    if (editTaskTitleInput.value === task.taskTitle) {taskExists = true;}\n                });\n            });\n\n            if (!taskExists && !emptyInput) {\n\n                divToEdit.children[0].innerText = edittedArrayTask.taskTitle;\n                divToEdit.children[1].innerText = edittedArrayTask.taskDesc;\n                divToEdit.children[2].innerText = "Due on: " + edittedArrayTask.dueDate;\n\n                if (edittedArrayTask.dueDate === "") {\n                    divToEdit.children[4].innerText = "Time Left: " + updateTimeLeft();\n                }\n                else {\n                    divToEdit.children[4].innerText = "Time Left: " + updateTimeLeft(edittedArrayTask.dueDate);\n                };\n\n                updateTaskPriority(divToEdit, edittedArrayTask);\n\n                workingProject.subHeadings.forEach(subHeading => {\n                    subHeading.tasks.forEach((task) => {\n                        if (task.taskTitle === fetchedArrayTask.taskTitle) { \n                            task.taskTitle = edittedArrayTask.taskTitle;\n                            task.taskDesc = edittedArrayTask.taskDesc;\n                            task.dueDate = edittedArrayTask.dueDate;\n                            task.priorityLvl = edittedArrayTask.priorityLvl;\n                            editTaskModal.close();\n                        };\n                    });\n                });\n            }\n            else {alert("Task already exists, or title field empty, cancelling...")};\n            editTaskModal.close();\n        });\n};\n\naddListeners();\n\n})();\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTzs7O0FDdk44Qzs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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QTs7O0FDN0RnRTs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7O0FBRUEsT0FBTyxlQUFlO0FBQ3RCO0FBQ0E7QUFDQSxHQUFHOztBQUVILFdBQVcsZUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVILFNBQVMsZUFBZTtBQUN4QjtBQUNBO0FBQ0EsR0FBRzs7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QyxzRUFBc0U7QUFDdEUscUJBQXFCOztBQUVyQjtBQUNBLHdDQUF3QyxVQUFVO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGNBQWM7QUFDdEMsd0JBQXdCLGFBQWEsQ0FBQyxjQUFjO0FBQ3BEO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUEsbUNBQW1DLFVBQVU7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsVUFBVTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViOztBQUVBO0FBQ0E7O0FBRUEsMERBQTBEOztBQUUxRCxZQUFZLGNBQWM7QUFDMUI7QUFDQSxzRUFBc0U7QUFDdEUsaUJBQWlCO0FBQ2pCLGFBQWE7O0FBRWI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0VBQXNFLGNBQWM7QUFDcEY7QUFDQTtBQUNBLHNFQUFzRSxjQUFjO0FBQ3BGOztBQUVBLGdCQUFnQixrQkFBa0I7O0FBRWxDLGdCQUFnQixjQUFjO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0EsU0FBUztBQUNUOztBQUVBOztBQUVBLENBQUM7O0FBRXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9zcmMvY3NzL3N0eWxlcy5jc3M/OTlhMyIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL3NyYy9jc3MvcmVzZXQuY3NzPzE1MmIiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9zcmMvanMvYWRkTmV3UHJvamVjdC5qcz81YTEyIiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vc3JjL2pzL2NyZWF0ZVRhc2suanM/M2RhOSIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL3NyYy9qcy9jcmVhdGVTdWJIZWFkaW5nLmpzP2RlYTYiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9zcmMvanMvcmVuZGVyQ29tcGxldGlvbkJhci5qcz9iNTE0Iiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vc3JjL2pzL3VwZGF0ZUNvbXBsZXRpb25CYXIuanM/YjhjNSIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL3NyYy9qcy9yZW5kZXJTdWJIZWFkaW5ncy5qcz8xNGZmIiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vc3JjL2pzL3NhdmVEYXRhLmpzPzdiMzQiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9zcmMvanMvdG9nZ2xlQ29tcGxldGlvbi5qcz80MzgxIiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2NvbnN0YW50cy5qcz9kMTJiIiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2NvbnN0cnVjdEZyb20uanM/ZjhkYSIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9jb25zdHJ1Y3ROb3cuanM/NGEzNSIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvZW4tVVMvX2xpYi9mb3JtYXREaXN0YW5jZS5qcz83MzU0Iiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9fbGliL2J1aWxkRm9ybWF0TG9uZ0ZuLmpzP2U0NmIiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL2VuLVVTL19saWIvZm9ybWF0TG9uZy5qcz9hMWFkIiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2xvY2FsZS9lbi1VUy9fbGliL2Zvcm1hdFJlbGF0aXZlLmpzPzVhNTYiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL19saWIvYnVpbGRMb2NhbGl6ZUZuLmpzPzQ1ODYiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL2VuLVVTL19saWIvbG9jYWxpemUuanM/Y2I0YSIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvX2xpYi9idWlsZE1hdGNoRm4uanM/MWU0YSIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvX2xpYi9idWlsZE1hdGNoUGF0dGVybkZuLmpzPzM3YTYiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvbG9jYWxlL2VuLVVTL19saWIvbWF0Y2guanM/ZTcyNCIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9sb2NhbGUvZW4tVVMuanM/ZWU0ZSIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9fbGliL2RlZmF1bHRPcHRpb25zLmpzPzgyNmUiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvX2xpYi9nZXRSb3VuZGluZ01ldGhvZC5qcz9jZGZjIiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL3RvRGF0ZS5qcz83ZWQ5Iiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcy5qcz9hZDkwIiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvbm9ybWFsaXplRGF0ZXMuanM/OTRjYyIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9jb21wYXJlQXNjLmpzP2FiMDQiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZm9ybWF0RGlzdGFuY2VTdHJpY3QuanM/MGY5YiIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9mb3JtYXREaXN0YW5jZVRvTm93U3RyaWN0LmpzPzZiZmUiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9zcmMvanMvdXBkYXRlVGltZUxlZnQuanM/ZjJlYiIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL3NyYy9qcy91cGRhdGVUYXNrUHJpb3JpdHkuanM/NDQzNCIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL3NyYy9qcy9lZGl0VGFzay5qcz9iYTY1Iiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vc3JjL2pzL3JlbmRlclRhc2tzLmpzPzJjNDEiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9zcmMvanMvY2xlYW5Qcm9qZWN0Qm9keS5qcz9mNzlkIiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vc3JjL2pzL3JlbmRlckV4aXN0aW5nUHJvamVjdC5qcz8wMDk5Iiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vc3JjL2pzL2NyZWF0ZVByb2plY3RDYXJkLmpzPzU3NjgiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9zcmMvanMvcmVtb3ZlTGFzdENhcmQuanM/N2RiMiIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL3NyYy9qcy9yZW5kZXJQcm9qZWN0SGVhZGluZy5qcz84ODk3Iiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vc3JjL2pzL3JlbmRlck5ld1Rhc2suanM/ZmZkOCIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL3NyYy9qcy9sb2FkRXhpc3RpbmdQcm9qZWN0Q2FyZHMuanM/ZGI0YSIsIndlYnBhY2s6Ly90by1kby1saXN0LWFwcC8uL3NyYy9qcy9sb2FkRGF0YS5qcz9iNzg1Iiwid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vc3JjL2pzL2NsZWFyTG9jYWxTdG9yYWdlLmpzPzdhNDIiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcmVzZXQuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5vcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcmVzZXQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY2xhc3MgUHJvamVjdCB7XG4gICAgY29uc3RydWN0b3IodGl0bGUpIHtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBhZGROZXdQcm9qZWN0KHRpdGxlKSB7XG4gICAgbGV0IG5ld1Byb2plY3RUaXRsZSA9IG5ldyBQcm9qZWN0KHRpdGxlKTtcbiAgICBjb25zdCBuZXdQcm9qZWN0ID0ge1xuICAgICAgICBwcm9qZWN0VGl0bGU6IG5ld1Byb2plY3RUaXRsZS50aXRsZSxcbiAgICAgICAgc3ViSGVhZGluZ3M6IFtdLFxuICAgIH1cbiAgICByZXR1cm4gbmV3UHJvamVjdDtcbn0iLCJjbGFzcyBUb0RvVGFzayB7XG4gICAgXG4gICAgY29uc3RydWN0b3IodGFza1RpdGxlLCB0YXNrRGVzYywgZHVlRGF0ZSxcbiAgICAgICAgcHJpb3JpdHlMdmwsIGlzQ29tcGxldGUgPSBmYWxzZSkge1xuICAgICAgICAgICAgdGhpcy50YXNrVGl0bGUgPSB0YXNrVGl0bGU7XG4gICAgICAgICAgICB0aGlzLnRhc2tEZXNjID0gdGFza0Rlc2M7XG4gICAgICAgICAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xuICAgICAgICAgICAgdGhpcy5wcmlvcml0eUx2bCA9IHByaW9yaXR5THZsO1xuICAgICAgICAgICAgdGhpcy5pc0NvbXBsZXRlID0gaXNDb21wbGV0ZTtcbiAgICAgICAgfTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUYXNrKHRhc2tUaXRsZSwgdGFza0Rlc2MsIGR1ZURhdGUsIHByaW9yaXR5THZsKSB7XG4gICAgbGV0IG5ld1Rhc2sgPSBuZXcgVG9Eb1Rhc2sodGFza1RpdGxlLCB0YXNrRGVzYywgZHVlRGF0ZSwgcHJpb3JpdHlMdmwpO1xuXG4gICAgcmV0dXJuIG5ld1Rhc2s7XG59ICIsImNsYXNzIFN1YkhlYWRpbmcge1xuICAgIGNvbnN0cnVjdG9yKHRpdGxlLCB0YXNrcyA9IFtdKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy50YXNrcyA9IHRhc2tzO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJIZWFkaW5nKHRpdGxlKSB7XG4gICAgY29uc3QgbmV3U3ViSGVhZGluZyA9IG5ldyBTdWJIZWFkaW5nKHRpdGxlKTtcbiAgICByZXR1cm4gbmV3U3ViSGVhZGluZ1xufSIsImV4cG9ydCBmdW5jdGlvbiByZW5kZXJDb21wbGV0aW9uQmFyKCkge1xuICAgIFxuICAgIGNvbnN0IHByb2plY3RCb2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jdXJyZW50LXByb2plY3QtYm9keVwiKTtcbiAgICBjb25zdCBjb21wbGV0aW9uQmFyRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICAgIGNvbXBsZXRpb25CYXJEaXYuaW5uZXJUZXh0ID0gXCJDb21wbGV0aW9uICUgOlwiO1xuICAgIGNvbXBsZXRpb25CYXJEaXYuY2xhc3NMaXN0LmFkZChcImNvbXBsZXRpb24tYmFyXCIpO1xuXG4gICAgcHJvamVjdEJvZHkuYXBwZW5kQ2hpbGQoY29tcGxldGlvbkJhckRpdik7XG59IiwiZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUNvbXBsZXRpb25CYXIod29ya2luZ1Byb2plY3QpIHtcblxuICAgIGNvbnN0IGNvbXBsZXRpb25CYXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb21wbGV0aW9uLWJhclwiKTtcblxuICAgIGxldCBjb21wbGV0ZWRUYXNrcyA9IFtdO1xuICAgIGxldCB0b3RhbFRhc2tDb3VudGVyID0gMDtcblxuXG4gICAgd29ya2luZ1Byb2plY3Quc3ViSGVhZGluZ3MuZm9yRWFjaChzdWJIZWFkaW5nID0+IHtcbiAgICAgICAgc3ViSGVhZGluZy50YXNrcy5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgICAgICAgICB0b3RhbFRhc2tDb3VudGVyKys7XG4gICAgICAgICAgICBpZiAodGFzay5pc0NvbXBsZXRlKSB7XG4gICAgICAgICAgICAgICAgY29tcGxldGVkVGFza3MucHVzaCh0YXNrKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG5cbiAgICBjb25zdCBwZXJjZW50YWdlQ29tcGxldGlvbiA9IChjb21wbGV0ZWRUYXNrcy5sZW5ndGggLyB0b3RhbFRhc2tDb3VudGVyKSAqIDEwMDtcbiAgICBcbiAgICBpZiAocGVyY2VudGFnZUNvbXBsZXRpb24gPT09IHVuZGVmaW5lZCB8fCBwZXJjZW50YWdlQ29tcGxldGlvbiA9PT0gTmFOIHx8IHBlcmNlbnRhZ2VDb21wbGV0aW9uID09PSBudWxsKSB7XG4gICAgICAgIGNvbXBsZXRpb25CYXJFbGVtZW50LmlubmVyVGV4dCA9IFwiQ29tcGxldGlvbiAlIDogXCI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgIGNvbXBsZXRpb25CYXJFbGVtZW50LmlubmVyVGV4dCA9IFwiQ29tcGxldGlvbiAlIDogXCIgKyBwZXJjZW50YWdlQ29tcGxldGlvbiArIFwiJVwiO1xuICAgIH1cbn07IiwiaW1wb3J0IHsgcmVuZGVyQ29tcGxldGlvbkJhciB9IGZyb20gXCIuL3JlbmRlckNvbXBsZXRpb25CYXJcIjtcbmltcG9ydCB7IHVwZGF0ZUNvbXBsZXRpb25CYXIgfSBmcm9tIFwiLi91cGRhdGVDb21wbGV0aW9uQmFyXCI7XG5cbmxldCB3b3JraW5nUHJvamVjdDtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclN1YkhlYWRpbmdzKG5ld1dvcmtpbmdQcm9qZWN0KSB7XG4gICAgXG4gICAgY29uc3QgcHJvamVjdEJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmN1cnJlbnQtcHJvamVjdC1ib2R5XCIpO1xuICAgIHJlbmRlckNvbXBsZXRpb25CYXIoKTtcbiAgICB3b3JraW5nUHJvamVjdCA9IG5ld1dvcmtpbmdQcm9qZWN0O1xuICAgIFxuICAgIHdvcmtpbmdQcm9qZWN0LnN1YkhlYWRpbmdzLmZvckVhY2goc3ViSGVhZGluZyA9PiB7XG4gICAgICAgIGNvbnN0IHN1YkhlYWRpbmdEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBzdWJIZWFkaW5nRGl2LmNsYXNzTGlzdC5hZGQoXCJzdWJoZWFkaW5nLWRpdlwiKTtcbiAgICAgICAgY29uc3QgcmVuZGVyZWRTdWJIZWFkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgyXCIpO1xuICAgICAgICByZW5kZXJlZFN1YkhlYWRpbmcuY2xhc3NMaXN0LmFkZChcInN1YmhlYWRpbmctZGl2LXRpdGxlXCIpO1xuICAgICAgICBjb25zdCBidG5EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBidG5EaXYuY2xhc3NMaXN0LmFkZChcInN1YmhlYWRpbmctYnRuLWRpdlwiKTtcblxuICAgICAgICByZW5kZXJlZFN1YkhlYWRpbmcuaW5uZXJIVE1MID0gc3ViSGVhZGluZy50aXRsZTtcbiAgICAgICAgc3ViSGVhZGluZ0Rpdi5hcHBlbmRDaGlsZChyZW5kZXJlZFN1YkhlYWRpbmcpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgICAgICBhZGRUYXNrQnRuLmlubmVyVGV4dCA9IFwiQWRkIFRhc2tcIjtcbiAgICAgICAgYWRkVGFza0J0bi5jbGFzc0xpc3QuYWRkKFwiYWRkLXRhc2stYnRuXCIpO1xuICAgICAgICBidG5EaXYuYXBwZW5kQ2hpbGQoYWRkVGFza0J0bik7XG4gICAgICAgIHJlbmRlcmVkU3ViSGVhZGluZy5kYXRhc2V0LnN1YkhlYWRpbmdEYXRhID0gc3ViSGVhZGluZy50aXRsZTtcblxuICAgICAgICBhZGRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnN0IGFkZFRhc2tNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLXRhc2stbW9kYWxcIik7XG4gICAgICAgICAgICBhZGRUYXNrTW9kYWwuc2hvd01vZGFsKCk7XG4gICAgICAgICAgICBhZGRUYXNrTW9kYWwuZGF0YXNldC5zdWJIZWFkaW5nID0gc3ViSGVhZGluZy50aXRsZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgZGVsZXRlU3ViSGVhZGluZ0J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGRlbGV0ZVN1YkhlYWRpbmdCdG4uaW5uZXJUZXh0ID0gXCJEZWxldGUgU3ViIFNlY3Rpb25cIjtcbiAgICAgICAgZGVsZXRlU3ViSGVhZGluZ0J0bi5jbGFzc0xpc3QuYWRkKFwiZGVsZXRlLXN1YmhlYWRpbmctYnRuXCIpO1xuICAgICAgICBidG5EaXYuYXBwZW5kQ2hpbGQoZGVsZXRlU3ViSGVhZGluZ0J0bik7XG4gICAgICAgIGRlbGV0ZVN1YkhlYWRpbmdCdG4uZGF0YXNldC5zdWJIZWFkaW5nID0gc3ViSGVhZGluZy50aXRsZTtcblxuXG4gICAgICAgIGRlbGV0ZVN1YkhlYWRpbmdCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICBcbiAgICAgICAgdXBkYXRlQ29tcGxldGlvbkJhcih3b3JraW5nUHJvamVjdCk7XG4gICAgICAgIGRlbGV0ZVN1YkhlYWRpbmdCdG4ucGFyZW50RWxlbWVudC5yZW1vdmUoKTtcblxuICAgICAgICBjb25zdCBzdWJIZWFkaW5nRG9tVGl0bGUgPSBkZWxldGVTdWJIZWFkaW5nQnRuLmRhdGFzZXQuc3ViSGVhZGluZztcbiAgICBcbiAgICAgICAgICAgIHdvcmtpbmdQcm9qZWN0LnN1YkhlYWRpbmdzLmZvckVhY2goKHN1YkhlYWRpbmcpID0+IHtcblxuICAgICAgICAgICAgICAgIGlmIChzdWJIZWFkaW5nLnRpdGxlID09PSBzdWJIZWFkaW5nRG9tVGl0bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHN1YkhlYWRpbmdUb0RlbGV0ZUluZGV4ID0gd29ya2luZ1Byb2plY3Quc3ViSGVhZGluZ3MuaW5kZXhPZihzdWJIZWFkaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgd29ya2luZ1Byb2plY3Quc3ViSGVhZGluZ3Muc3BsaWNlKHN1YkhlYWRpbmdUb0RlbGV0ZUluZGV4LDEpOyBcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlQ29tcGxldGlvbkJhcih3b3JraW5nUHJvamVjdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG5cbiAgICAgICAgYWRkVGFza0J0bi5jbGFzc0xpc3QuYWRkKFwic3ViaGVhZGluZy1idG4tMVwiKTtcbiAgICAgICAgZGVsZXRlU3ViSGVhZGluZ0J0bi5jbGFzc0xpc3QuYWRkKFwic3ViaGVhZGluZy1idG4tMlwiKTtcblxuICAgICAgICB1cGRhdGVDb21wbGV0aW9uQmFyKHdvcmtpbmdQcm9qZWN0KTtcbiAgICAgICAgc3ViSGVhZGluZ0Rpdi5hcHBlbmRDaGlsZChidG5EaXYpO1xuICAgICAgICBwcm9qZWN0Qm9keS5hcHBlbmQoc3ViSGVhZGluZ0Rpdik7XG4gfSk7XG59O1xuZXhwb3J0IHsgd29ya2luZ1Byb2plY3QgfTtcblxuIiwiaW1wb3J0IHsgY3VycmVudFByb2plY3RzIH0gZnJvbSBcIi4uXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBzYXZlRGF0YSgpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInByb2plY3REYXRhXCIsIEpTT04uc3RyaW5naWZ5KGN1cnJlbnRQcm9qZWN0cykpO1xufTsiLCJpbXBvcnQgeyBzYXZlRGF0YSB9IGZyb20gXCIuL3NhdmVEYXRhXCI7XG5pbXBvcnQgeyB1cGRhdGVDb21wbGV0aW9uQmFyIH0gZnJvbSBcIi4vdXBkYXRlQ29tcGxldGlvbkJhclwiO1xuXG5leHBvcnQgZnVuY3Rpb24gdG9nZ2xlQ29tcGxldGlvbih0YXNrVG9FZGl0LCB3b3JraW5nUHJvamVjdCkge1xuICAgIFxuICAgIHRhc2tUb0VkaXQuaXNDb21wbGV0ZSA9ICF0YXNrVG9FZGl0LmlzQ29tcGxldGU7XG4gICAgdXBkYXRlQ29tcGxldGlvbkJhcih3b3JraW5nUHJvamVjdCk7XG5cbiAgICBzYXZlRGF0YSgpO1xufTsiLCIvKipcbiAqIEBtb2R1bGUgY29uc3RhbnRzXG4gKiBAc3VtbWFyeSBVc2VmdWwgY29uc3RhbnRzXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbGxlY3Rpb24gb2YgdXNlZnVsIGRhdGUgY29uc3RhbnRzLlxuICpcbiAqIFRoZSBjb25zdGFudHMgY291bGQgYmUgaW1wb3J0ZWQgZnJvbSBgZGF0ZS1mbnMvY29uc3RhbnRzYDpcbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgbWF4VGltZSwgbWluVGltZSB9IGZyb20gXCIuL2NvbnN0YW50cy9kYXRlLWZucy9jb25zdGFudHNcIjtcbiAqXG4gKiBmdW5jdGlvbiBpc0FsbG93ZWRUaW1lKHRpbWUpIHtcbiAqICAgcmV0dXJuIHRpbWUgPD0gbWF4VGltZSAmJiB0aW1lID49IG1pblRpbWU7XG4gKiB9XG4gKiBgYGBcbiAqL1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgZGF5c0luV2Vla1xuICogQHN1bW1hcnkgRGF5cyBpbiAxIHdlZWsuXG4gKi9cbmV4cG9ydCBjb25zdCBkYXlzSW5XZWVrID0gNztcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIGRheXNJblllYXJcbiAqIEBzdW1tYXJ5IERheXMgaW4gMSB5ZWFyLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogSG93IG1hbnkgZGF5cyBpbiBhIHllYXIuXG4gKlxuICogT25lIHllYXJzIGVxdWFscyAzNjUuMjQyNSBkYXlzIGFjY29yZGluZyB0byB0aGUgZm9ybXVsYTpcbiAqXG4gKiA+IExlYXAgeWVhciBvY2N1cnMgZXZlcnkgNCB5ZWFycywgZXhjZXB0IGZvciB5ZWFycyB0aGF0IGFyZSBkaXZpc2libGUgYnkgMTAwIGFuZCBub3QgZGl2aXNpYmxlIGJ5IDQwMC5cbiAqID4gMSBtZWFuIHllYXIgPSAoMzY1KzEvNC0xLzEwMCsxLzQwMCkgZGF5cyA9IDM2NS4yNDI1IGRheXNcbiAqL1xuZXhwb3J0IGNvbnN0IGRheXNJblllYXIgPSAzNjUuMjQyNTtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1heFRpbWVcbiAqIEBzdW1tYXJ5IE1heGltdW0gYWxsb3dlZCB0aW1lLlxuICpcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBtYXhUaW1lIH0gZnJvbSBcIi4vY29uc3RhbnRzL2RhdGUtZm5zL2NvbnN0YW50c1wiO1xuICpcbiAqIGNvbnN0IGlzVmFsaWQgPSA4NjQwMDAwMDAwMDAwMDAxIDw9IG1heFRpbWU7XG4gKiAvLz0+IGZhbHNlXG4gKlxuICogbmV3IERhdGUoODY0MDAwMDAwMDAwMDAwMSk7XG4gKiAvLz0+IEludmFsaWQgRGF0ZVxuICovXG5leHBvcnQgY29uc3QgbWF4VGltZSA9IE1hdGgucG93KDEwLCA4KSAqIDI0ICogNjAgKiA2MCAqIDEwMDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaW5UaW1lXG4gKiBAc3VtbWFyeSBNaW5pbXVtIGFsbG93ZWQgdGltZS5cbiAqXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IHsgbWluVGltZSB9IGZyb20gXCIuL2NvbnN0YW50cy9kYXRlLWZucy9jb25zdGFudHNcIjtcbiAqXG4gKiBjb25zdCBpc1ZhbGlkID0gLTg2NDAwMDAwMDAwMDAwMDEgPj0gbWluVGltZTtcbiAqIC8vPT4gZmFsc2VcbiAqXG4gKiBuZXcgRGF0ZSgtODY0MDAwMDAwMDAwMDAwMSlcbiAqIC8vPT4gSW52YWxpZCBEYXRlXG4gKi9cbmV4cG9ydCBjb25zdCBtaW5UaW1lID0gLW1heFRpbWU7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaWxsaXNlY29uZHNJbldlZWtcbiAqIEBzdW1tYXJ5IE1pbGxpc2Vjb25kcyBpbiAxIHdlZWsuXG4gKi9cbmV4cG9ydCBjb25zdCBtaWxsaXNlY29uZHNJbldlZWsgPSA2MDQ4MDAwMDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaWxsaXNlY29uZHNJbkRheVxuICogQHN1bW1hcnkgTWlsbGlzZWNvbmRzIGluIDEgZGF5LlxuICovXG5leHBvcnQgY29uc3QgbWlsbGlzZWNvbmRzSW5EYXkgPSA4NjQwMDAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luTWludXRlXG4gKiBAc3VtbWFyeSBNaWxsaXNlY29uZHMgaW4gMSBtaW51dGVcbiAqL1xuZXhwb3J0IGNvbnN0IG1pbGxpc2Vjb25kc0luTWludXRlID0gNjAwMDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaWxsaXNlY29uZHNJbkhvdXJcbiAqIEBzdW1tYXJ5IE1pbGxpc2Vjb25kcyBpbiAxIGhvdXJcbiAqL1xuZXhwb3J0IGNvbnN0IG1pbGxpc2Vjb25kc0luSG91ciA9IDM2MDAwMDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaWxsaXNlY29uZHNJblNlY29uZFxuICogQHN1bW1hcnkgTWlsbGlzZWNvbmRzIGluIDEgc2Vjb25kXG4gKi9cbmV4cG9ydCBjb25zdCBtaWxsaXNlY29uZHNJblNlY29uZCA9IDEwMDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaW51dGVzSW5ZZWFyXG4gKiBAc3VtbWFyeSBNaW51dGVzIGluIDEgeWVhci5cbiAqL1xuZXhwb3J0IGNvbnN0IG1pbnV0ZXNJblllYXIgPSA1MjU2MDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaW51dGVzSW5Nb250aFxuICogQHN1bW1hcnkgTWludXRlcyBpbiAxIG1vbnRoLlxuICovXG5leHBvcnQgY29uc3QgbWludXRlc0luTW9udGggPSA0MzIwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbnV0ZXNJbkRheVxuICogQHN1bW1hcnkgTWludXRlcyBpbiAxIGRheS5cbiAqL1xuZXhwb3J0IGNvbnN0IG1pbnV0ZXNJbkRheSA9IDE0NDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaW51dGVzSW5Ib3VyXG4gKiBAc3VtbWFyeSBNaW51dGVzIGluIDEgaG91ci5cbiAqL1xuZXhwb3J0IGNvbnN0IG1pbnV0ZXNJbkhvdXIgPSA2MDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1vbnRoc0luUXVhcnRlclxuICogQHN1bW1hcnkgTW9udGhzIGluIDEgcXVhcnRlci5cbiAqL1xuZXhwb3J0IGNvbnN0IG1vbnRoc0luUXVhcnRlciA9IDM7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtb250aHNJblllYXJcbiAqIEBzdW1tYXJ5IE1vbnRocyBpbiAxIHllYXIuXG4gKi9cbmV4cG9ydCBjb25zdCBtb250aHNJblllYXIgPSAxMjtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHF1YXJ0ZXJzSW5ZZWFyXG4gKiBAc3VtbWFyeSBRdWFydGVycyBpbiAxIHllYXJcbiAqL1xuZXhwb3J0IGNvbnN0IHF1YXJ0ZXJzSW5ZZWFyID0gNDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJbkhvdXJcbiAqIEBzdW1tYXJ5IFNlY29uZHMgaW4gMSBob3VyLlxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luSG91ciA9IDM2MDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5NaW51dGVcbiAqIEBzdW1tYXJ5IFNlY29uZHMgaW4gMSBtaW51dGUuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5NaW51dGUgPSA2MDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJbkRheVxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIGRheS5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJbkRheSA9IHNlY29uZHNJbkhvdXIgKiAyNDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJbldlZWtcbiAqIEBzdW1tYXJ5IFNlY29uZHMgaW4gMSB3ZWVrLlxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luV2VlayA9IHNlY29uZHNJbkRheSAqIDc7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5ZZWFyXG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgeWVhci5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJblllYXIgPSBzZWNvbmRzSW5EYXkgKiBkYXlzSW5ZZWFyO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luTW9udGhcbiAqIEBzdW1tYXJ5IFNlY29uZHMgaW4gMSBtb250aFxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luTW9udGggPSBzZWNvbmRzSW5ZZWFyIC8gMTI7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5RdWFydGVyXG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgcXVhcnRlci5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJblF1YXJ0ZXIgPSBzZWNvbmRzSW5Nb250aCAqIDM7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBjb25zdHJ1Y3RGcm9tU3ltYm9sXG4gKiBAc3VtbWFyeSBTeW1ib2wgZW5hYmxpbmcgRGF0ZSBleHRlbnNpb25zIHRvIGluaGVyaXQgcHJvcGVydGllcyBmcm9tIHRoZSByZWZlcmVuY2UgZGF0ZS5cbiAqXG4gKiBUaGUgc3ltYm9sIGlzIHVzZWQgdG8gZW5hYmxlIHRoZSBgY29uc3RydWN0RnJvbWAgZnVuY3Rpb24gdG8gY29uc3RydWN0IGEgZGF0ZVxuICogdXNpbmcgYSByZWZlcmVuY2UgZGF0ZSBhbmQgYSB2YWx1ZS4gSXQgYWxsb3dzIHRvIHRyYW5zZmVyIGV4dHJhIHByb3BlcnRpZXNcbiAqIGZyb20gdGhlIHJlZmVyZW5jZSBkYXRlIHRvIHRoZSBuZXcgZGF0ZS4gSXQncyB1c2VmdWwgZm9yIGV4dGVuc2lvbnMgbGlrZVxuICogW2BUWkRhdGVgXShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvdHopIHRoYXQgYWNjZXB0IGEgdGltZSB6b25lIGFzXG4gKiBhIGNvbnN0cnVjdG9yIGFyZ3VtZW50LlxuICovXG5leHBvcnQgY29uc3QgY29uc3RydWN0RnJvbVN5bWJvbCA9IFN5bWJvbC5mb3IoXCJjb25zdHJ1Y3REYXRlRnJvbVwiKTtcbiIsImltcG9ydCB7IGNvbnN0cnVjdEZyb21TeW1ib2wgfSBmcm9tIFwiLi9jb25zdGFudHMuanNcIjtcblxuLyoqXG4gKiBAbmFtZSBjb25zdHJ1Y3RGcm9tXG4gKiBAY2F0ZWdvcnkgR2VuZXJpYyBIZWxwZXJzXG4gKiBAc3VtbWFyeSBDb25zdHJ1Y3RzIGEgZGF0ZSB1c2luZyB0aGUgcmVmZXJlbmNlIGRhdGUgYW5kIHRoZSB2YWx1ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogVGhlIGZ1bmN0aW9uIGNvbnN0cnVjdHMgYSBuZXcgZGF0ZSB1c2luZyB0aGUgY29uc3RydWN0b3IgZnJvbSB0aGUgcmVmZXJlbmNlXG4gKiBkYXRlIGFuZCB0aGUgZ2l2ZW4gdmFsdWUuIEl0IGhlbHBzIHRvIGJ1aWxkIGdlbmVyaWMgZnVuY3Rpb25zIHRoYXQgYWNjZXB0XG4gKiBkYXRlIGV4dGVuc2lvbnMuXG4gKlxuICogSXQgZGVmYXVsdHMgdG8gYERhdGVgIGlmIHRoZSBwYXNzZWQgcmVmZXJlbmNlIGRhdGUgaXMgYSBudW1iZXIgb3IgYSBzdHJpbmcuXG4gKlxuICogU3RhcnRpbmcgZnJvbSB2My43LjAsIGl0IGFsbG93cyB0byBjb25zdHJ1Y3QgYSBkYXRlIHVzaW5nIGBbU3ltYm9sLmZvcihcImNvbnN0cnVjdERhdGVGcm9tXCIpXWBcbiAqIGVuYWJsaW5nIHRvIHRyYW5zZmVyIGV4dHJhIHByb3BlcnRpZXMgZnJvbSB0aGUgcmVmZXJlbmNlIGRhdGUgdG8gdGhlIG5ldyBkYXRlLlxuICogSXQncyB1c2VmdWwgZm9yIGV4dGVuc2lvbnMgbGlrZSBbYFRaRGF0ZWBdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy90eilcbiAqIHRoYXQgYWNjZXB0IGEgdGltZSB6b25lIGFzIGEgY29uc3RydWN0b3IgYXJndW1lbnQuXG4gKlxuICogQHR5cGVQYXJhbSBEYXRlVHlwZSAtIFRoZSBgRGF0ZWAgdHlwZSwgdGhlIGZ1bmN0aW9uIG9wZXJhdGVzIG9uLiBHZXRzIGluZmVycmVkIGZyb20gcGFzc2VkIGFyZ3VtZW50cy4gQWxsb3dzIHRvIHVzZSBleHRlbnNpb25zIGxpa2UgW2BVVENEYXRlYF0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL3V0YykuXG4gKlxuICogQHBhcmFtIGRhdGUgLSBUaGUgcmVmZXJlbmNlIGRhdGUgdG8gdGFrZSBjb25zdHJ1Y3RvciBmcm9tXG4gKiBAcGFyYW0gdmFsdWUgLSBUaGUgdmFsdWUgdG8gY3JlYXRlIHRoZSBkYXRlXG4gKlxuICogQHJldHVybnMgRGF0ZSBpbml0aWFsaXplZCB1c2luZyB0aGUgZ2l2ZW4gZGF0ZSBhbmQgdmFsdWVcbiAqXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IHsgY29uc3RydWN0RnJvbSB9IGZyb20gXCIuL2NvbnN0cnVjdEZyb20vZGF0ZS1mbnNcIjtcbiAqXG4gKiAvLyBBIGZ1bmN0aW9uIHRoYXQgY2xvbmVzIGEgZGF0ZSBwcmVzZXJ2aW5nIHRoZSBvcmlnaW5hbCB0eXBlXG4gKiBmdW5jdGlvbiBjbG9uZURhdGU8RGF0ZVR5cGUgZXh0ZW5kcyBEYXRlPihkYXRlOiBEYXRlVHlwZSk6IERhdGVUeXBlIHtcbiAqICAgcmV0dXJuIGNvbnN0cnVjdEZyb20oXG4gKiAgICAgZGF0ZSwgLy8gVXNlIGNvbnN0cnVjdG9yIGZyb20gdGhlIGdpdmVuIGRhdGVcbiAqICAgICBkYXRlLmdldFRpbWUoKSAvLyBVc2UgdGhlIGRhdGUgdmFsdWUgdG8gY3JlYXRlIGEgbmV3IGRhdGVcbiAqICAgKTtcbiAqIH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnN0cnVjdEZyb20oZGF0ZSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiBkYXRlID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBkYXRlKHZhbHVlKTtcblxuICBpZiAoZGF0ZSAmJiB0eXBlb2YgZGF0ZSA9PT0gXCJvYmplY3RcIiAmJiBjb25zdHJ1Y3RGcm9tU3ltYm9sIGluIGRhdGUpXG4gICAgcmV0dXJuIGRhdGVbY29uc3RydWN0RnJvbVN5bWJvbF0odmFsdWUpO1xuXG4gIGlmIChkYXRlIGluc3RhbmNlb2YgRGF0ZSkgcmV0dXJuIG5ldyBkYXRlLmNvbnN0cnVjdG9yKHZhbHVlKTtcblxuICByZXR1cm4gbmV3IERhdGUodmFsdWUpO1xufVxuXG4vLyBGYWxsYmFjayBmb3IgbW9kdWxhcml6ZWQgaW1wb3J0czpcbmV4cG9ydCBkZWZhdWx0IGNvbnN0cnVjdEZyb207XG4iLCJpbXBvcnQgeyBjb25zdHJ1Y3RGcm9tIH0gZnJvbSBcIi4vY29uc3RydWN0RnJvbS5qc1wiO1xuXG4vKipcbiAqIEBuYW1lIGNvbnN0cnVjdE5vd1xuICogQGNhdGVnb3J5IEdlbmVyaWMgSGVscGVyc1xuICogQHN1bW1hcnkgQ29uc3RydWN0cyBhIG5ldyBjdXJyZW50IGRhdGUgdXNpbmcgdGhlIHBhc3NlZCB2YWx1ZSBjb25zdHJ1Y3Rvci5cbiAqIEBwdXJlIGZhbHNlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgZnVuY3Rpb24gY29uc3RydWN0cyBhIG5ldyBjdXJyZW50IGRhdGUgdXNpbmcgdGhlIGNvbnN0cnVjdG9yIGZyb21cbiAqIHRoZSByZWZlcmVuY2UgZGF0ZS4gSXQgaGVscHMgdG8gYnVpbGQgZ2VuZXJpYyBmdW5jdGlvbnMgdGhhdCBhY2NlcHQgZGF0ZVxuICogZXh0ZW5zaW9ucyBhbmQgdXNlIHRoZSBjdXJyZW50IGRhdGUuXG4gKlxuICogSXQgZGVmYXVsdHMgdG8gYERhdGVgIGlmIHRoZSBwYXNzZWQgcmVmZXJlbmNlIGRhdGUgaXMgYSBudW1iZXIgb3IgYSBzdHJpbmcuXG4gKlxuICogQHBhcmFtIGRhdGUgLSBUaGUgcmVmZXJlbmNlIGRhdGUgdG8gdGFrZSBjb25zdHJ1Y3RvciBmcm9tXG4gKlxuICogQHJldHVybnMgQ3VycmVudCBkYXRlIGluaXRpYWxpemVkIHVzaW5nIHRoZSBnaXZlbiBkYXRlIGNvbnN0cnVjdG9yXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IGNvbnN0cnVjdE5vdywgaXNTYW1lRGF5IH0gZnJvbSAnZGF0ZS1mbnMnXG4gKlxuICogZnVuY3Rpb24gaXNUb2RheTxEYXRlVHlwZSBleHRlbmRzIERhdGU+KFxuICogICBkYXRlOiBEYXRlQXJnPERhdGVUeXBlPixcbiAqICk6IGJvb2xlYW4ge1xuICogICAvLyBJZiB3ZSB3ZXJlIHRvIHVzZSBgbmV3IERhdGUoKWAgZGlyZWN0bHksIHRoZSBmdW5jdGlvbiB3b3VsZCAgYmVoYXZlXG4gKiAgIC8vIGRpZmZlcmVudGx5IGluIGRpZmZlcmVudCB0aW1lem9uZXMgYW5kIHJldHVybiBmYWxzZSBmb3IgdGhlIHNhbWUgZGF0ZS5cbiAqICAgcmV0dXJuIGlzU2FtZURheShkYXRlLCBjb25zdHJ1Y3ROb3coZGF0ZSkpO1xuICogfVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29uc3RydWN0Tm93KGRhdGUpIHtcbiAgcmV0dXJuIGNvbnN0cnVjdEZyb20oZGF0ZSwgRGF0ZS5ub3coKSk7XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgY29uc3RydWN0Tm93O1xuIiwiY29uc3QgZm9ybWF0RGlzdGFuY2VMb2NhbGUgPSB7XG4gIGxlc3NUaGFuWFNlY29uZHM6IHtcbiAgICBvbmU6IFwibGVzcyB0aGFuIGEgc2Vjb25kXCIsXG4gICAgb3RoZXI6IFwibGVzcyB0aGFuIHt7Y291bnR9fSBzZWNvbmRzXCIsXG4gIH0sXG5cbiAgeFNlY29uZHM6IHtcbiAgICBvbmU6IFwiMSBzZWNvbmRcIixcbiAgICBvdGhlcjogXCJ7e2NvdW50fX0gc2Vjb25kc1wiLFxuICB9LFxuXG4gIGhhbGZBTWludXRlOiBcImhhbGYgYSBtaW51dGVcIixcblxuICBsZXNzVGhhblhNaW51dGVzOiB7XG4gICAgb25lOiBcImxlc3MgdGhhbiBhIG1pbnV0ZVwiLFxuICAgIG90aGVyOiBcImxlc3MgdGhhbiB7e2NvdW50fX0gbWludXRlc1wiLFxuICB9LFxuXG4gIHhNaW51dGVzOiB7XG4gICAgb25lOiBcIjEgbWludXRlXCIsXG4gICAgb3RoZXI6IFwie3tjb3VudH19IG1pbnV0ZXNcIixcbiAgfSxcblxuICBhYm91dFhIb3Vyczoge1xuICAgIG9uZTogXCJhYm91dCAxIGhvdXJcIixcbiAgICBvdGhlcjogXCJhYm91dCB7e2NvdW50fX0gaG91cnNcIixcbiAgfSxcblxuICB4SG91cnM6IHtcbiAgICBvbmU6IFwiMSBob3VyXCIsXG4gICAgb3RoZXI6IFwie3tjb3VudH19IGhvdXJzXCIsXG4gIH0sXG5cbiAgeERheXM6IHtcbiAgICBvbmU6IFwiMSBkYXlcIixcbiAgICBvdGhlcjogXCJ7e2NvdW50fX0gZGF5c1wiLFxuICB9LFxuXG4gIGFib3V0WFdlZWtzOiB7XG4gICAgb25lOiBcImFib3V0IDEgd2Vla1wiLFxuICAgIG90aGVyOiBcImFib3V0IHt7Y291bnR9fSB3ZWVrc1wiLFxuICB9LFxuXG4gIHhXZWVrczoge1xuICAgIG9uZTogXCIxIHdlZWtcIixcbiAgICBvdGhlcjogXCJ7e2NvdW50fX0gd2Vla3NcIixcbiAgfSxcblxuICBhYm91dFhNb250aHM6IHtcbiAgICBvbmU6IFwiYWJvdXQgMSBtb250aFwiLFxuICAgIG90aGVyOiBcImFib3V0IHt7Y291bnR9fSBtb250aHNcIixcbiAgfSxcblxuICB4TW9udGhzOiB7XG4gICAgb25lOiBcIjEgbW9udGhcIixcbiAgICBvdGhlcjogXCJ7e2NvdW50fX0gbW9udGhzXCIsXG4gIH0sXG5cbiAgYWJvdXRYWWVhcnM6IHtcbiAgICBvbmU6IFwiYWJvdXQgMSB5ZWFyXCIsXG4gICAgb3RoZXI6IFwiYWJvdXQge3tjb3VudH19IHllYXJzXCIsXG4gIH0sXG5cbiAgeFllYXJzOiB7XG4gICAgb25lOiBcIjEgeWVhclwiLFxuICAgIG90aGVyOiBcInt7Y291bnR9fSB5ZWFyc1wiLFxuICB9LFxuXG4gIG92ZXJYWWVhcnM6IHtcbiAgICBvbmU6IFwib3ZlciAxIHllYXJcIixcbiAgICBvdGhlcjogXCJvdmVyIHt7Y291bnR9fSB5ZWFyc1wiLFxuICB9LFxuXG4gIGFsbW9zdFhZZWFyczoge1xuICAgIG9uZTogXCJhbG1vc3QgMSB5ZWFyXCIsXG4gICAgb3RoZXI6IFwiYWxtb3N0IHt7Y291bnR9fSB5ZWFyc1wiLFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IGZvcm1hdERpc3RhbmNlID0gKHRva2VuLCBjb3VudCwgb3B0aW9ucykgPT4ge1xuICBsZXQgcmVzdWx0O1xuXG4gIGNvbnN0IHRva2VuVmFsdWUgPSBmb3JtYXREaXN0YW5jZUxvY2FsZVt0b2tlbl07XG4gIGlmICh0eXBlb2YgdG9rZW5WYWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJlc3VsdCA9IHRva2VuVmFsdWU7XG4gIH0gZWxzZSBpZiAoY291bnQgPT09IDEpIHtcbiAgICByZXN1bHQgPSB0b2tlblZhbHVlLm9uZTtcbiAgfSBlbHNlIHtcbiAgICByZXN1bHQgPSB0b2tlblZhbHVlLm90aGVyLnJlcGxhY2UoXCJ7e2NvdW50fX1cIiwgY291bnQudG9TdHJpbmcoKSk7XG4gIH1cblxuICBpZiAob3B0aW9ucz8uYWRkU3VmZml4KSB7XG4gICAgaWYgKG9wdGlvbnMuY29tcGFyaXNvbiAmJiBvcHRpb25zLmNvbXBhcmlzb24gPiAwKSB7XG4gICAgICByZXR1cm4gXCJpbiBcIiArIHJlc3VsdDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHJlc3VsdCArIFwiIGFnb1wiO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkRm9ybWF0TG9uZ0ZuKGFyZ3MpIHtcbiAgcmV0dXJuIChvcHRpb25zID0ge30pID0+IHtcbiAgICAvLyBUT0RPOiBSZW1vdmUgU3RyaW5nKClcbiAgICBjb25zdCB3aWR0aCA9IG9wdGlvbnMud2lkdGggPyBTdHJpbmcob3B0aW9ucy53aWR0aCkgOiBhcmdzLmRlZmF1bHRXaWR0aDtcbiAgICBjb25zdCBmb3JtYXQgPSBhcmdzLmZvcm1hdHNbd2lkdGhdIHx8IGFyZ3MuZm9ybWF0c1thcmdzLmRlZmF1bHRXaWR0aF07XG4gICAgcmV0dXJuIGZvcm1hdDtcbiAgfTtcbn1cbiIsImltcG9ydCB7IGJ1aWxkRm9ybWF0TG9uZ0ZuIH0gZnJvbSBcIi4uLy4uL19saWIvYnVpbGRGb3JtYXRMb25nRm4uanNcIjtcblxuY29uc3QgZGF0ZUZvcm1hdHMgPSB7XG4gIGZ1bGw6IFwiRUVFRSwgTU1NTSBkbywgeVwiLFxuICBsb25nOiBcIk1NTU0gZG8sIHlcIixcbiAgbWVkaXVtOiBcIk1NTSBkLCB5XCIsXG4gIHNob3J0OiBcIk1NL2RkL3l5eXlcIixcbn07XG5cbmNvbnN0IHRpbWVGb3JtYXRzID0ge1xuICBmdWxsOiBcImg6bW06c3MgYSB6enp6XCIsXG4gIGxvbmc6IFwiaDptbTpzcyBhIHpcIixcbiAgbWVkaXVtOiBcImg6bW06c3MgYVwiLFxuICBzaG9ydDogXCJoOm1tIGFcIixcbn07XG5cbmNvbnN0IGRhdGVUaW1lRm9ybWF0cyA9IHtcbiAgZnVsbDogXCJ7e2RhdGV9fSAnYXQnIHt7dGltZX19XCIsXG4gIGxvbmc6IFwie3tkYXRlfX0gJ2F0JyB7e3RpbWV9fVwiLFxuICBtZWRpdW06IFwie3tkYXRlfX0sIHt7dGltZX19XCIsXG4gIHNob3J0OiBcInt7ZGF0ZX19LCB7e3RpbWV9fVwiLFxufTtcblxuZXhwb3J0IGNvbnN0IGZvcm1hdExvbmcgPSB7XG4gIGRhdGU6IGJ1aWxkRm9ybWF0TG9uZ0ZuKHtcbiAgICBmb3JtYXRzOiBkYXRlRm9ybWF0cyxcbiAgICBkZWZhdWx0V2lkdGg6IFwiZnVsbFwiLFxuICB9KSxcblxuICB0aW1lOiBidWlsZEZvcm1hdExvbmdGbih7XG4gICAgZm9ybWF0czogdGltZUZvcm1hdHMsXG4gICAgZGVmYXVsdFdpZHRoOiBcImZ1bGxcIixcbiAgfSksXG5cbiAgZGF0ZVRpbWU6IGJ1aWxkRm9ybWF0TG9uZ0ZuKHtcbiAgICBmb3JtYXRzOiBkYXRlVGltZUZvcm1hdHMsXG4gICAgZGVmYXVsdFdpZHRoOiBcImZ1bGxcIixcbiAgfSksXG59O1xuIiwiY29uc3QgZm9ybWF0UmVsYXRpdmVMb2NhbGUgPSB7XG4gIGxhc3RXZWVrOiBcIidsYXN0JyBlZWVlICdhdCcgcFwiLFxuICB5ZXN0ZXJkYXk6IFwiJ3llc3RlcmRheSBhdCcgcFwiLFxuICB0b2RheTogXCIndG9kYXkgYXQnIHBcIixcbiAgdG9tb3Jyb3c6IFwiJ3RvbW9ycm93IGF0JyBwXCIsXG4gIG5leHRXZWVrOiBcImVlZWUgJ2F0JyBwXCIsXG4gIG90aGVyOiBcIlBcIixcbn07XG5cbmV4cG9ydCBjb25zdCBmb3JtYXRSZWxhdGl2ZSA9ICh0b2tlbiwgX2RhdGUsIF9iYXNlRGF0ZSwgX29wdGlvbnMpID0+XG4gIGZvcm1hdFJlbGF0aXZlTG9jYWxlW3Rva2VuXTtcbiIsIi8qKlxuICogVGhlIGxvY2FsaXplIGZ1bmN0aW9uIGFyZ3VtZW50IGNhbGxiYWNrIHdoaWNoIGFsbG93cyB0byBjb252ZXJ0IHJhdyB2YWx1ZSB0b1xuICogdGhlIGFjdHVhbCB0eXBlLlxuICpcbiAqIEBwYXJhbSB2YWx1ZSAtIFRoZSB2YWx1ZSB0byBjb252ZXJ0XG4gKlxuICogQHJldHVybnMgVGhlIGNvbnZlcnRlZCB2YWx1ZVxuICovXG5cbi8qKlxuICogVGhlIG1hcCBvZiBsb2NhbGl6ZWQgdmFsdWVzIGZvciBlYWNoIHdpZHRoLlxuICovXG5cbi8qKlxuICogVGhlIGluZGV4IHR5cGUgb2YgdGhlIGxvY2FsZSB1bml0IHZhbHVlLiBJdCB0eXBlcyBjb252ZXJzaW9uIG9mIHVuaXRzIG9mXG4gKiB2YWx1ZXMgdGhhdCBkb24ndCBzdGFydCBhdCAwIChpLmUuIHF1YXJ0ZXJzKS5cbiAqL1xuXG4vKipcbiAqIENvbnZlcnRzIHRoZSB1bml0IHZhbHVlIHRvIHRoZSB0dXBsZSBvZiB2YWx1ZXMuXG4gKi9cblxuLyoqXG4gKiBUaGUgdHVwbGUgb2YgbG9jYWxpemVkIGVyYSB2YWx1ZXMuIFRoZSBmaXJzdCBlbGVtZW50IHJlcHJlc2VudHMgQkMsXG4gKiB0aGUgc2Vjb25kIGVsZW1lbnQgcmVwcmVzZW50cyBBRC5cbiAqL1xuXG4vKipcbiAqIFRoZSB0dXBsZSBvZiBsb2NhbGl6ZWQgcXVhcnRlciB2YWx1ZXMuIFRoZSBmaXJzdCBlbGVtZW50IHJlcHJlc2VudHMgUTEuXG4gKi9cblxuLyoqXG4gKiBUaGUgdHVwbGUgb2YgbG9jYWxpemVkIGRheSB2YWx1ZXMuIFRoZSBmaXJzdCBlbGVtZW50IHJlcHJlc2VudHMgU3VuZGF5LlxuICovXG5cbi8qKlxuICogVGhlIHR1cGxlIG9mIGxvY2FsaXplZCBtb250aCB2YWx1ZXMuIFRoZSBmaXJzdCBlbGVtZW50IHJlcHJlc2VudHMgSmFudWFyeS5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRMb2NhbGl6ZUZuKGFyZ3MpIHtcbiAgcmV0dXJuICh2YWx1ZSwgb3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IGNvbnRleHQgPSBvcHRpb25zPy5jb250ZXh0ID8gU3RyaW5nKG9wdGlvbnMuY29udGV4dCkgOiBcInN0YW5kYWxvbmVcIjtcblxuICAgIGxldCB2YWx1ZXNBcnJheTtcbiAgICBpZiAoY29udGV4dCA9PT0gXCJmb3JtYXR0aW5nXCIgJiYgYXJncy5mb3JtYXR0aW5nVmFsdWVzKSB7XG4gICAgICBjb25zdCBkZWZhdWx0V2lkdGggPSBhcmdzLmRlZmF1bHRGb3JtYXR0aW5nV2lkdGggfHwgYXJncy5kZWZhdWx0V2lkdGg7XG4gICAgICBjb25zdCB3aWR0aCA9IG9wdGlvbnM/LndpZHRoID8gU3RyaW5nKG9wdGlvbnMud2lkdGgpIDogZGVmYXVsdFdpZHRoO1xuXG4gICAgICB2YWx1ZXNBcnJheSA9XG4gICAgICAgIGFyZ3MuZm9ybWF0dGluZ1ZhbHVlc1t3aWR0aF0gfHwgYXJncy5mb3JtYXR0aW5nVmFsdWVzW2RlZmF1bHRXaWR0aF07XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGRlZmF1bHRXaWR0aCA9IGFyZ3MuZGVmYXVsdFdpZHRoO1xuICAgICAgY29uc3Qgd2lkdGggPSBvcHRpb25zPy53aWR0aCA/IFN0cmluZyhvcHRpb25zLndpZHRoKSA6IGFyZ3MuZGVmYXVsdFdpZHRoO1xuXG4gICAgICB2YWx1ZXNBcnJheSA9IGFyZ3MudmFsdWVzW3dpZHRoXSB8fCBhcmdzLnZhbHVlc1tkZWZhdWx0V2lkdGhdO1xuICAgIH1cbiAgICBjb25zdCBpbmRleCA9IGFyZ3MuYXJndW1lbnRDYWxsYmFjayA/IGFyZ3MuYXJndW1lbnRDYWxsYmFjayh2YWx1ZSkgOiB2YWx1ZTtcblxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSBGb3Igc29tZSByZWFzb24gVHlwZVNjcmlwdCBqdXN0IGRvbid0IHdhbnQgdG8gbWF0Y2ggaXQsIG5vIG1hdHRlciBob3cgaGFyZCB3ZSB0cnkuIEkgY2hhbGxlbmdlIHlvdSB0byB0cnkgdG8gcmVtb3ZlIGl0IVxuICAgIHJldHVybiB2YWx1ZXNBcnJheVtpbmRleF07XG4gIH07XG59XG4iLCJpbXBvcnQgeyBidWlsZExvY2FsaXplRm4gfSBmcm9tIFwiLi4vLi4vX2xpYi9idWlsZExvY2FsaXplRm4uanNcIjtcblxuY29uc3QgZXJhVmFsdWVzID0ge1xuICBuYXJyb3c6IFtcIkJcIiwgXCJBXCJdLFxuICBhYmJyZXZpYXRlZDogW1wiQkNcIiwgXCJBRFwiXSxcbiAgd2lkZTogW1wiQmVmb3JlIENocmlzdFwiLCBcIkFubm8gRG9taW5pXCJdLFxufTtcblxuY29uc3QgcXVhcnRlclZhbHVlcyA9IHtcbiAgbmFycm93OiBbXCIxXCIsIFwiMlwiLCBcIjNcIiwgXCI0XCJdLFxuICBhYmJyZXZpYXRlZDogW1wiUTFcIiwgXCJRMlwiLCBcIlEzXCIsIFwiUTRcIl0sXG4gIHdpZGU6IFtcIjFzdCBxdWFydGVyXCIsIFwiMm5kIHF1YXJ0ZXJcIiwgXCIzcmQgcXVhcnRlclwiLCBcIjR0aCBxdWFydGVyXCJdLFxufTtcblxuLy8gTm90ZTogaW4gRW5nbGlzaCwgdGhlIG5hbWVzIG9mIGRheXMgb2YgdGhlIHdlZWsgYW5kIG1vbnRocyBhcmUgY2FwaXRhbGl6ZWQuXG4vLyBJZiB5b3UgYXJlIG1ha2luZyBhIG5ldyBsb2NhbGUgYmFzZWQgb24gdGhpcyBvbmUsIGNoZWNrIGlmIHRoZSBzYW1lIGlzIHRydWUgZm9yIHRoZSBsYW5ndWFnZSB5b3UncmUgd29ya2luZyBvbi5cbi8vIEdlbmVyYWxseSwgZm9ybWF0dGVkIGRhdGVzIHNob3VsZCBsb29rIGxpa2UgdGhleSBhcmUgaW4gdGhlIG1pZGRsZSBvZiBhIHNlbnRlbmNlLFxuLy8gZS5nLiBpbiBTcGFuaXNoIGxhbmd1YWdlIHRoZSB3ZWVrZGF5cyBhbmQgbW9udGhzIHNob3VsZCBiZSBpbiB0aGUgbG93ZXJjYXNlLlxuY29uc3QgbW9udGhWYWx1ZXMgPSB7XG4gIG5hcnJvdzogW1wiSlwiLCBcIkZcIiwgXCJNXCIsIFwiQVwiLCBcIk1cIiwgXCJKXCIsIFwiSlwiLCBcIkFcIiwgXCJTXCIsIFwiT1wiLCBcIk5cIiwgXCJEXCJdLFxuICBhYmJyZXZpYXRlZDogW1xuICAgIFwiSmFuXCIsXG4gICAgXCJGZWJcIixcbiAgICBcIk1hclwiLFxuICAgIFwiQXByXCIsXG4gICAgXCJNYXlcIixcbiAgICBcIkp1blwiLFxuICAgIFwiSnVsXCIsXG4gICAgXCJBdWdcIixcbiAgICBcIlNlcFwiLFxuICAgIFwiT2N0XCIsXG4gICAgXCJOb3ZcIixcbiAgICBcIkRlY1wiLFxuICBdLFxuXG4gIHdpZGU6IFtcbiAgICBcIkphbnVhcnlcIixcbiAgICBcIkZlYnJ1YXJ5XCIsXG4gICAgXCJNYXJjaFwiLFxuICAgIFwiQXByaWxcIixcbiAgICBcIk1heVwiLFxuICAgIFwiSnVuZVwiLFxuICAgIFwiSnVseVwiLFxuICAgIFwiQXVndXN0XCIsXG4gICAgXCJTZXB0ZW1iZXJcIixcbiAgICBcIk9jdG9iZXJcIixcbiAgICBcIk5vdmVtYmVyXCIsXG4gICAgXCJEZWNlbWJlclwiLFxuICBdLFxufTtcblxuY29uc3QgZGF5VmFsdWVzID0ge1xuICBuYXJyb3c6IFtcIlNcIiwgXCJNXCIsIFwiVFwiLCBcIldcIiwgXCJUXCIsIFwiRlwiLCBcIlNcIl0sXG4gIHNob3J0OiBbXCJTdVwiLCBcIk1vXCIsIFwiVHVcIiwgXCJXZVwiLCBcIlRoXCIsIFwiRnJcIiwgXCJTYVwiXSxcbiAgYWJicmV2aWF0ZWQ6IFtcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiLCBcIkZyaVwiLCBcIlNhdFwiXSxcbiAgd2lkZTogW1xuICAgIFwiU3VuZGF5XCIsXG4gICAgXCJNb25kYXlcIixcbiAgICBcIlR1ZXNkYXlcIixcbiAgICBcIldlZG5lc2RheVwiLFxuICAgIFwiVGh1cnNkYXlcIixcbiAgICBcIkZyaWRheVwiLFxuICAgIFwiU2F0dXJkYXlcIixcbiAgXSxcbn07XG5cbmNvbnN0IGRheVBlcmlvZFZhbHVlcyA9IHtcbiAgbmFycm93OiB7XG4gICAgYW06IFwiYVwiLFxuICAgIHBtOiBcInBcIixcbiAgICBtaWRuaWdodDogXCJtaVwiLFxuICAgIG5vb246IFwiblwiLFxuICAgIG1vcm5pbmc6IFwibW9ybmluZ1wiLFxuICAgIGFmdGVybm9vbjogXCJhZnRlcm5vb25cIixcbiAgICBldmVuaW5nOiBcImV2ZW5pbmdcIixcbiAgICBuaWdodDogXCJuaWdodFwiLFxuICB9LFxuICBhYmJyZXZpYXRlZDoge1xuICAgIGFtOiBcIkFNXCIsXG4gICAgcG06IFwiUE1cIixcbiAgICBtaWRuaWdodDogXCJtaWRuaWdodFwiLFxuICAgIG5vb246IFwibm9vblwiLFxuICAgIG1vcm5pbmc6IFwibW9ybmluZ1wiLFxuICAgIGFmdGVybm9vbjogXCJhZnRlcm5vb25cIixcbiAgICBldmVuaW5nOiBcImV2ZW5pbmdcIixcbiAgICBuaWdodDogXCJuaWdodFwiLFxuICB9LFxuICB3aWRlOiB7XG4gICAgYW06IFwiYS5tLlwiLFxuICAgIHBtOiBcInAubS5cIixcbiAgICBtaWRuaWdodDogXCJtaWRuaWdodFwiLFxuICAgIG5vb246IFwibm9vblwiLFxuICAgIG1vcm5pbmc6IFwibW9ybmluZ1wiLFxuICAgIGFmdGVybm9vbjogXCJhZnRlcm5vb25cIixcbiAgICBldmVuaW5nOiBcImV2ZW5pbmdcIixcbiAgICBuaWdodDogXCJuaWdodFwiLFxuICB9LFxufTtcblxuY29uc3QgZm9ybWF0dGluZ0RheVBlcmlvZFZhbHVlcyA9IHtcbiAgbmFycm93OiB7XG4gICAgYW06IFwiYVwiLFxuICAgIHBtOiBcInBcIixcbiAgICBtaWRuaWdodDogXCJtaVwiLFxuICAgIG5vb246IFwiblwiLFxuICAgIG1vcm5pbmc6IFwiaW4gdGhlIG1vcm5pbmdcIixcbiAgICBhZnRlcm5vb246IFwiaW4gdGhlIGFmdGVybm9vblwiLFxuICAgIGV2ZW5pbmc6IFwiaW4gdGhlIGV2ZW5pbmdcIixcbiAgICBuaWdodDogXCJhdCBuaWdodFwiLFxuICB9LFxuICBhYmJyZXZpYXRlZDoge1xuICAgIGFtOiBcIkFNXCIsXG4gICAgcG06IFwiUE1cIixcbiAgICBtaWRuaWdodDogXCJtaWRuaWdodFwiLFxuICAgIG5vb246IFwibm9vblwiLFxuICAgIG1vcm5pbmc6IFwiaW4gdGhlIG1vcm5pbmdcIixcbiAgICBhZnRlcm5vb246IFwiaW4gdGhlIGFmdGVybm9vblwiLFxuICAgIGV2ZW5pbmc6IFwiaW4gdGhlIGV2ZW5pbmdcIixcbiAgICBuaWdodDogXCJhdCBuaWdodFwiLFxuICB9LFxuICB3aWRlOiB7XG4gICAgYW06IFwiYS5tLlwiLFxuICAgIHBtOiBcInAubS5cIixcbiAgICBtaWRuaWdodDogXCJtaWRuaWdodFwiLFxuICAgIG5vb246IFwibm9vblwiLFxuICAgIG1vcm5pbmc6IFwiaW4gdGhlIG1vcm5pbmdcIixcbiAgICBhZnRlcm5vb246IFwiaW4gdGhlIGFmdGVybm9vblwiLFxuICAgIGV2ZW5pbmc6IFwiaW4gdGhlIGV2ZW5pbmdcIixcbiAgICBuaWdodDogXCJhdCBuaWdodFwiLFxuICB9LFxufTtcblxuY29uc3Qgb3JkaW5hbE51bWJlciA9IChkaXJ0eU51bWJlciwgX29wdGlvbnMpID0+IHtcbiAgY29uc3QgbnVtYmVyID0gTnVtYmVyKGRpcnR5TnVtYmVyKTtcblxuICAvLyBJZiBvcmRpbmFsIG51bWJlcnMgZGVwZW5kIG9uIGNvbnRleHQsIGZvciBleGFtcGxlLFxuICAvLyBpZiB0aGV5IGFyZSBkaWZmZXJlbnQgZm9yIGRpZmZlcmVudCBncmFtbWF0aWNhbCBnZW5kZXJzLFxuICAvLyB1c2UgYG9wdGlvbnMudW5pdGAuXG4gIC8vXG4gIC8vIGB1bml0YCBjYW4gYmUgJ3llYXInLCAncXVhcnRlcicsICdtb250aCcsICd3ZWVrJywgJ2RhdGUnLCAnZGF5T2ZZZWFyJyxcbiAgLy8gJ2RheScsICdob3VyJywgJ21pbnV0ZScsICdzZWNvbmQnLlxuXG4gIGNvbnN0IHJlbTEwMCA9IG51bWJlciAlIDEwMDtcbiAgaWYgKHJlbTEwMCA+IDIwIHx8IHJlbTEwMCA8IDEwKSB7XG4gICAgc3dpdGNoIChyZW0xMDAgJSAxMCkge1xuICAgICAgY2FzZSAxOlxuICAgICAgICByZXR1cm4gbnVtYmVyICsgXCJzdFwiO1xuICAgICAgY2FzZSAyOlxuICAgICAgICByZXR1cm4gbnVtYmVyICsgXCJuZFwiO1xuICAgICAgY2FzZSAzOlxuICAgICAgICByZXR1cm4gbnVtYmVyICsgXCJyZFwiO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVtYmVyICsgXCJ0aFwiO1xufTtcblxuZXhwb3J0IGNvbnN0IGxvY2FsaXplID0ge1xuICBvcmRpbmFsTnVtYmVyLFxuXG4gIGVyYTogYnVpbGRMb2NhbGl6ZUZuKHtcbiAgICB2YWx1ZXM6IGVyYVZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6IFwid2lkZVwiLFxuICB9KSxcblxuICBxdWFydGVyOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogcXVhcnRlclZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6IFwid2lkZVwiLFxuICAgIGFyZ3VtZW50Q2FsbGJhY2s6IChxdWFydGVyKSA9PiBxdWFydGVyIC0gMSxcbiAgfSksXG5cbiAgbW9udGg6IGJ1aWxkTG9jYWxpemVGbih7XG4gICAgdmFsdWVzOiBtb250aFZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6IFwid2lkZVwiLFxuICB9KSxcblxuICBkYXk6IGJ1aWxkTG9jYWxpemVGbih7XG4gICAgdmFsdWVzOiBkYXlWYWx1ZXMsXG4gICAgZGVmYXVsdFdpZHRoOiBcIndpZGVcIixcbiAgfSksXG5cbiAgZGF5UGVyaW9kOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogZGF5UGVyaW9kVmFsdWVzLFxuICAgIGRlZmF1bHRXaWR0aDogXCJ3aWRlXCIsXG4gICAgZm9ybWF0dGluZ1ZhbHVlczogZm9ybWF0dGluZ0RheVBlcmlvZFZhbHVlcyxcbiAgICBkZWZhdWx0Rm9ybWF0dGluZ1dpZHRoOiBcIndpZGVcIixcbiAgfSksXG59O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkTWF0Y2hGbihhcmdzKSB7XG4gIHJldHVybiAoc3RyaW5nLCBvcHRpb25zID0ge30pID0+IHtcbiAgICBjb25zdCB3aWR0aCA9IG9wdGlvbnMud2lkdGg7XG5cbiAgICBjb25zdCBtYXRjaFBhdHRlcm4gPVxuICAgICAgKHdpZHRoICYmIGFyZ3MubWF0Y2hQYXR0ZXJuc1t3aWR0aF0pIHx8XG4gICAgICBhcmdzLm1hdGNoUGF0dGVybnNbYXJncy5kZWZhdWx0TWF0Y2hXaWR0aF07XG4gICAgY29uc3QgbWF0Y2hSZXN1bHQgPSBzdHJpbmcubWF0Y2gobWF0Y2hQYXR0ZXJuKTtcblxuICAgIGlmICghbWF0Y2hSZXN1bHQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBjb25zdCBtYXRjaGVkU3RyaW5nID0gbWF0Y2hSZXN1bHRbMF07XG5cbiAgICBjb25zdCBwYXJzZVBhdHRlcm5zID1cbiAgICAgICh3aWR0aCAmJiBhcmdzLnBhcnNlUGF0dGVybnNbd2lkdGhdKSB8fFxuICAgICAgYXJncy5wYXJzZVBhdHRlcm5zW2FyZ3MuZGVmYXVsdFBhcnNlV2lkdGhdO1xuXG4gICAgY29uc3Qga2V5ID0gQXJyYXkuaXNBcnJheShwYXJzZVBhdHRlcm5zKVxuICAgICAgPyBmaW5kSW5kZXgocGFyc2VQYXR0ZXJucywgKHBhdHRlcm4pID0+IHBhdHRlcm4udGVzdChtYXRjaGVkU3RyaW5nKSlcbiAgICAgIDogLy8gW1RPRE9dIC0tIEkgY2hhbGxlbmdlIHlvdSB0byBmaXggdGhlIHR5cGVcbiAgICAgICAgZmluZEtleShwYXJzZVBhdHRlcm5zLCAocGF0dGVybikgPT4gcGF0dGVybi50ZXN0KG1hdGNoZWRTdHJpbmcpKTtcblxuICAgIGxldCB2YWx1ZTtcblxuICAgIHZhbHVlID0gYXJncy52YWx1ZUNhbGxiYWNrID8gYXJncy52YWx1ZUNhbGxiYWNrKGtleSkgOiBrZXk7XG4gICAgdmFsdWUgPSBvcHRpb25zLnZhbHVlQ2FsbGJhY2tcbiAgICAgID8gLy8gW1RPRE9dIC0tIEkgY2hhbGxlbmdlIHlvdSB0byBmaXggdGhlIHR5cGVcbiAgICAgICAgb3B0aW9ucy52YWx1ZUNhbGxiYWNrKHZhbHVlKVxuICAgICAgOiB2YWx1ZTtcblxuICAgIGNvbnN0IHJlc3QgPSBzdHJpbmcuc2xpY2UobWF0Y2hlZFN0cmluZy5sZW5ndGgpO1xuXG4gICAgcmV0dXJuIHsgdmFsdWUsIHJlc3QgfTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZmluZEtleShvYmplY3QsIHByZWRpY2F0ZSkge1xuICBmb3IgKGNvbnN0IGtleSBpbiBvYmplY3QpIHtcbiAgICBpZiAoXG4gICAgICBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpICYmXG4gICAgICBwcmVkaWNhdGUob2JqZWN0W2tleV0pXG4gICAgKSB7XG4gICAgICByZXR1cm4ga2V5O1xuICAgIH1cbiAgfVxuICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBmaW5kSW5kZXgoYXJyYXksIHByZWRpY2F0ZSkge1xuICBmb3IgKGxldCBrZXkgPSAwOyBrZXkgPCBhcnJheS5sZW5ndGg7IGtleSsrKSB7XG4gICAgaWYgKHByZWRpY2F0ZShhcnJheVtrZXldKSkge1xuICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBidWlsZE1hdGNoUGF0dGVybkZuKGFyZ3MpIHtcbiAgcmV0dXJuIChzdHJpbmcsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgIGNvbnN0IG1hdGNoUmVzdWx0ID0gc3RyaW5nLm1hdGNoKGFyZ3MubWF0Y2hQYXR0ZXJuKTtcbiAgICBpZiAoIW1hdGNoUmVzdWx0KSByZXR1cm4gbnVsbDtcbiAgICBjb25zdCBtYXRjaGVkU3RyaW5nID0gbWF0Y2hSZXN1bHRbMF07XG5cbiAgICBjb25zdCBwYXJzZVJlc3VsdCA9IHN0cmluZy5tYXRjaChhcmdzLnBhcnNlUGF0dGVybik7XG4gICAgaWYgKCFwYXJzZVJlc3VsdCkgcmV0dXJuIG51bGw7XG4gICAgbGV0IHZhbHVlID0gYXJncy52YWx1ZUNhbGxiYWNrXG4gICAgICA/IGFyZ3MudmFsdWVDYWxsYmFjayhwYXJzZVJlc3VsdFswXSlcbiAgICAgIDogcGFyc2VSZXN1bHRbMF07XG5cbiAgICAvLyBbVE9ET10gSSBjaGFsbGVuZ2UgeW91IHRvIGZpeCB0aGUgdHlwZVxuICAgIHZhbHVlID0gb3B0aW9ucy52YWx1ZUNhbGxiYWNrID8gb3B0aW9ucy52YWx1ZUNhbGxiYWNrKHZhbHVlKSA6IHZhbHVlO1xuXG4gICAgY29uc3QgcmVzdCA9IHN0cmluZy5zbGljZShtYXRjaGVkU3RyaW5nLmxlbmd0aCk7XG5cbiAgICByZXR1cm4geyB2YWx1ZSwgcmVzdCB9O1xuICB9O1xufVxuIiwiaW1wb3J0IHsgYnVpbGRNYXRjaEZuIH0gZnJvbSBcIi4uLy4uL19saWIvYnVpbGRNYXRjaEZuLmpzXCI7XG5pbXBvcnQgeyBidWlsZE1hdGNoUGF0dGVybkZuIH0gZnJvbSBcIi4uLy4uL19saWIvYnVpbGRNYXRjaFBhdHRlcm5Gbi5qc1wiO1xuXG5jb25zdCBtYXRjaE9yZGluYWxOdW1iZXJQYXR0ZXJuID0gL14oXFxkKykodGh8c3R8bmR8cmQpPy9pO1xuY29uc3QgcGFyc2VPcmRpbmFsTnVtYmVyUGF0dGVybiA9IC9cXGQrL2k7XG5cbmNvbnN0IG1hdGNoRXJhUGF0dGVybnMgPSB7XG4gIG5hcnJvdzogL14oYnxhKS9pLFxuICBhYmJyZXZpYXRlZDogL14oYlxcLj9cXHM/Y1xcLj98YlxcLj9cXHM/Y1xcLj9cXHM/ZVxcLj98YVxcLj9cXHM/ZFxcLj98Y1xcLj9cXHM/ZVxcLj8pL2ksXG4gIHdpZGU6IC9eKGJlZm9yZSBjaHJpc3R8YmVmb3JlIGNvbW1vbiBlcmF8YW5ubyBkb21pbml8Y29tbW9uIGVyYSkvaSxcbn07XG5jb25zdCBwYXJzZUVyYVBhdHRlcm5zID0ge1xuICBhbnk6IFsvXmIvaSwgL14oYXxjKS9pXSxcbn07XG5cbmNvbnN0IG1hdGNoUXVhcnRlclBhdHRlcm5zID0ge1xuICBuYXJyb3c6IC9eWzEyMzRdL2ksXG4gIGFiYnJldmlhdGVkOiAvXnFbMTIzNF0vaSxcbiAgd2lkZTogL15bMTIzNF0odGh8c3R8bmR8cmQpPyBxdWFydGVyL2ksXG59O1xuY29uc3QgcGFyc2VRdWFydGVyUGF0dGVybnMgPSB7XG4gIGFueTogWy8xL2ksIC8yL2ksIC8zL2ksIC80L2ldLFxufTtcblxuY29uc3QgbWF0Y2hNb250aFBhdHRlcm5zID0ge1xuICBuYXJyb3c6IC9eW2pmbWFzb25kXS9pLFxuICBhYmJyZXZpYXRlZDogL14oamFufGZlYnxtYXJ8YXByfG1heXxqdW58anVsfGF1Z3xzZXB8b2N0fG5vdnxkZWMpL2ksXG4gIHdpZGU6IC9eKGphbnVhcnl8ZmVicnVhcnl8bWFyY2h8YXByaWx8bWF5fGp1bmV8anVseXxhdWd1c3R8c2VwdGVtYmVyfG9jdG9iZXJ8bm92ZW1iZXJ8ZGVjZW1iZXIpL2ksXG59O1xuY29uc3QgcGFyc2VNb250aFBhdHRlcm5zID0ge1xuICBuYXJyb3c6IFtcbiAgICAvXmovaSxcbiAgICAvXmYvaSxcbiAgICAvXm0vaSxcbiAgICAvXmEvaSxcbiAgICAvXm0vaSxcbiAgICAvXmovaSxcbiAgICAvXmovaSxcbiAgICAvXmEvaSxcbiAgICAvXnMvaSxcbiAgICAvXm8vaSxcbiAgICAvXm4vaSxcbiAgICAvXmQvaSxcbiAgXSxcblxuICBhbnk6IFtcbiAgICAvXmphL2ksXG4gICAgL15mL2ksXG4gICAgL15tYXIvaSxcbiAgICAvXmFwL2ksXG4gICAgL15tYXkvaSxcbiAgICAvXmp1bi9pLFxuICAgIC9eanVsL2ksXG4gICAgL15hdS9pLFxuICAgIC9ecy9pLFxuICAgIC9eby9pLFxuICAgIC9ebi9pLFxuICAgIC9eZC9pLFxuICBdLFxufTtcblxuY29uc3QgbWF0Y2hEYXlQYXR0ZXJucyA9IHtcbiAgbmFycm93OiAvXltzbXR3Zl0vaSxcbiAgc2hvcnQ6IC9eKHN1fG1vfHR1fHdlfHRofGZyfHNhKS9pLFxuICBhYmJyZXZpYXRlZDogL14oc3VufG1vbnx0dWV8d2VkfHRodXxmcml8c2F0KS9pLFxuICB3aWRlOiAvXihzdW5kYXl8bW9uZGF5fHR1ZXNkYXl8d2VkbmVzZGF5fHRodXJzZGF5fGZyaWRheXxzYXR1cmRheSkvaSxcbn07XG5jb25zdCBwYXJzZURheVBhdHRlcm5zID0ge1xuICBuYXJyb3c6IFsvXnMvaSwgL15tL2ksIC9edC9pLCAvXncvaSwgL150L2ksIC9eZi9pLCAvXnMvaV0sXG4gIGFueTogWy9ec3UvaSwgL15tL2ksIC9edHUvaSwgL153L2ksIC9edGgvaSwgL15mL2ksIC9ec2EvaV0sXG59O1xuXG5jb25zdCBtYXRjaERheVBlcmlvZFBhdHRlcm5zID0ge1xuICBuYXJyb3c6IC9eKGF8cHxtaXxufChpbiB0aGV8YXQpIChtb3JuaW5nfGFmdGVybm9vbnxldmVuaW5nfG5pZ2h0KSkvaSxcbiAgYW55OiAvXihbYXBdXFwuP1xccz9tXFwuP3xtaWRuaWdodHxub29ufChpbiB0aGV8YXQpIChtb3JuaW5nfGFmdGVybm9vbnxldmVuaW5nfG5pZ2h0KSkvaSxcbn07XG5jb25zdCBwYXJzZURheVBlcmlvZFBhdHRlcm5zID0ge1xuICBhbnk6IHtcbiAgICBhbTogL15hL2ksXG4gICAgcG06IC9ecC9pLFxuICAgIG1pZG5pZ2h0OiAvXm1pL2ksXG4gICAgbm9vbjogL15uby9pLFxuICAgIG1vcm5pbmc6IC9tb3JuaW5nL2ksXG4gICAgYWZ0ZXJub29uOiAvYWZ0ZXJub29uL2ksXG4gICAgZXZlbmluZzogL2V2ZW5pbmcvaSxcbiAgICBuaWdodDogL25pZ2h0L2ksXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgbWF0Y2ggPSB7XG4gIG9yZGluYWxOdW1iZXI6IGJ1aWxkTWF0Y2hQYXR0ZXJuRm4oe1xuICAgIG1hdGNoUGF0dGVybjogbWF0Y2hPcmRpbmFsTnVtYmVyUGF0dGVybixcbiAgICBwYXJzZVBhdHRlcm46IHBhcnNlT3JkaW5hbE51bWJlclBhdHRlcm4sXG4gICAgdmFsdWVDYWxsYmFjazogKHZhbHVlKSA9PiBwYXJzZUludCh2YWx1ZSwgMTApLFxuICB9KSxcblxuICBlcmE6IGJ1aWxkTWF0Y2hGbih7XG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hFcmFQYXR0ZXJucyxcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogXCJ3aWRlXCIsXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VFcmFQYXR0ZXJucyxcbiAgICBkZWZhdWx0UGFyc2VXaWR0aDogXCJhbnlcIixcbiAgfSksXG5cbiAgcXVhcnRlcjogYnVpbGRNYXRjaEZuKHtcbiAgICBtYXRjaFBhdHRlcm5zOiBtYXRjaFF1YXJ0ZXJQYXR0ZXJucyxcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogXCJ3aWRlXCIsXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VRdWFydGVyUGF0dGVybnMsXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6IFwiYW55XCIsXG4gICAgdmFsdWVDYWxsYmFjazogKGluZGV4KSA9PiBpbmRleCArIDEsXG4gIH0pLFxuXG4gIG1vbnRoOiBidWlsZE1hdGNoRm4oe1xuICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoTW9udGhQYXR0ZXJucyxcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogXCJ3aWRlXCIsXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VNb250aFBhdHRlcm5zLFxuICAgIGRlZmF1bHRQYXJzZVdpZHRoOiBcImFueVwiLFxuICB9KSxcblxuICBkYXk6IGJ1aWxkTWF0Y2hGbih7XG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hEYXlQYXR0ZXJucyxcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogXCJ3aWRlXCIsXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VEYXlQYXR0ZXJucyxcbiAgICBkZWZhdWx0UGFyc2VXaWR0aDogXCJhbnlcIixcbiAgfSksXG5cbiAgZGF5UGVyaW9kOiBidWlsZE1hdGNoRm4oe1xuICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoRGF5UGVyaW9kUGF0dGVybnMsXG4gICAgZGVmYXVsdE1hdGNoV2lkdGg6IFwiYW55XCIsXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VEYXlQZXJpb2RQYXR0ZXJucyxcbiAgICBkZWZhdWx0UGFyc2VXaWR0aDogXCJhbnlcIixcbiAgfSksXG59O1xuIiwiaW1wb3J0IHsgZm9ybWF0RGlzdGFuY2UgfSBmcm9tIFwiLi9lbi1VUy9fbGliL2Zvcm1hdERpc3RhbmNlLmpzXCI7XG5pbXBvcnQgeyBmb3JtYXRMb25nIH0gZnJvbSBcIi4vZW4tVVMvX2xpYi9mb3JtYXRMb25nLmpzXCI7XG5pbXBvcnQgeyBmb3JtYXRSZWxhdGl2ZSB9IGZyb20gXCIuL2VuLVVTL19saWIvZm9ybWF0UmVsYXRpdmUuanNcIjtcbmltcG9ydCB7IGxvY2FsaXplIH0gZnJvbSBcIi4vZW4tVVMvX2xpYi9sb2NhbGl6ZS5qc1wiO1xuaW1wb3J0IHsgbWF0Y2ggfSBmcm9tIFwiLi9lbi1VUy9fbGliL21hdGNoLmpzXCI7XG5cbi8qKlxuICogQGNhdGVnb3J5IExvY2FsZXNcbiAqIEBzdW1tYXJ5IEVuZ2xpc2ggbG9jYWxlIChVbml0ZWQgU3RhdGVzKS5cbiAqIEBsYW5ndWFnZSBFbmdsaXNoXG4gKiBAaXNvLTYzOS0yIGVuZ1xuICogQGF1dGhvciBTYXNoYSBLb3NzIFtAa29zc25vY29ycF0oaHR0cHM6Ly9naXRodWIuY29tL2tvc3Nub2NvcnApXG4gKiBAYXV0aG9yIExlc2hhIEtvc3MgW0BsZXNoYWtvc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9sZXNoYWtvc3MpXG4gKi9cbmV4cG9ydCBjb25zdCBlblVTID0ge1xuICBjb2RlOiBcImVuLVVTXCIsXG4gIGZvcm1hdERpc3RhbmNlOiBmb3JtYXREaXN0YW5jZSxcbiAgZm9ybWF0TG9uZzogZm9ybWF0TG9uZyxcbiAgZm9ybWF0UmVsYXRpdmU6IGZvcm1hdFJlbGF0aXZlLFxuICBsb2NhbGl6ZTogbG9jYWxpemUsXG4gIG1hdGNoOiBtYXRjaCxcbiAgb3B0aW9uczoge1xuICAgIHdlZWtTdGFydHNPbjogMCAvKiBTdW5kYXkgKi8sXG4gICAgZmlyc3RXZWVrQ29udGFpbnNEYXRlOiAxLFxuICB9LFxufTtcblxuLy8gRmFsbGJhY2sgZm9yIG1vZHVsYXJpemVkIGltcG9ydHM6XG5leHBvcnQgZGVmYXVsdCBlblVTO1xuIiwibGV0IGRlZmF1bHRPcHRpb25zID0ge307XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0T3B0aW9ucygpIHtcbiAgcmV0dXJuIGRlZmF1bHRPcHRpb25zO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0RGVmYXVsdE9wdGlvbnMobmV3T3B0aW9ucykge1xuICBkZWZhdWx0T3B0aW9ucyA9IG5ld09wdGlvbnM7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gZ2V0Um91bmRpbmdNZXRob2QobWV0aG9kKSB7XG4gIHJldHVybiAobnVtYmVyKSA9PiB7XG4gICAgY29uc3Qgcm91bmQgPSBtZXRob2QgPyBNYXRoW21ldGhvZF0gOiBNYXRoLnRydW5jO1xuICAgIGNvbnN0IHJlc3VsdCA9IHJvdW5kKG51bWJlcik7XG4gICAgLy8gUHJldmVudCBuZWdhdGl2ZSB6ZXJvXG4gICAgcmV0dXJuIHJlc3VsdCA9PT0gMCA/IDAgOiByZXN1bHQ7XG4gIH07XG59XG4iLCJpbXBvcnQgeyBjb25zdHJ1Y3RGcm9tIH0gZnJvbSBcIi4vY29uc3RydWN0RnJvbS5qc1wiO1xuXG4vKipcbiAqIEBuYW1lIHRvRGF0ZVxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBDb252ZXJ0IHRoZSBnaXZlbiBhcmd1bWVudCB0byBhbiBpbnN0YW5jZSBvZiBEYXRlLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ29udmVydCB0aGUgZ2l2ZW4gYXJndW1lbnQgdG8gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYW4gaW5zdGFuY2Ugb2YgRGF0ZSwgdGhlIGZ1bmN0aW9uIHJldHVybnMgaXRzIGNsb25lLlxuICpcbiAqIElmIHRoZSBhcmd1bWVudCBpcyBhIG51bWJlciwgaXQgaXMgdHJlYXRlZCBhcyBhIHRpbWVzdGFtcC5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgbm9uZSBvZiB0aGUgYWJvdmUsIHRoZSBmdW5jdGlvbiByZXR1cm5zIEludmFsaWQgRGF0ZS5cbiAqXG4gKiBTdGFydGluZyBmcm9tIHYzLjcuMCwgaXQgY2xvbmVzIGEgZGF0ZSB1c2luZyBgW1N5bWJvbC5mb3IoXCJjb25zdHJ1Y3REYXRlRnJvbVwiKV1gXG4gKiBlbmFibGluZyB0byB0cmFuc2ZlciBleHRyYSBwcm9wZXJ0aWVzIGZyb20gdGhlIHJlZmVyZW5jZSBkYXRlIHRvIHRoZSBuZXcgZGF0ZS5cbiAqIEl0J3MgdXNlZnVsIGZvciBleHRlbnNpb25zIGxpa2UgW2BUWkRhdGVgXShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvdHopXG4gKiB0aGF0IGFjY2VwdCBhIHRpbWUgem9uZSBhcyBhIGNvbnN0cnVjdG9yIGFyZ3VtZW50LlxuICpcbiAqICoqTm90ZSoqOiAqYWxsKiBEYXRlIGFyZ3VtZW50cyBwYXNzZWQgdG8gYW55ICpkYXRlLWZucyogZnVuY3Rpb24gaXMgcHJvY2Vzc2VkIGJ5IGB0b0RhdGVgLlxuICpcbiAqIEB0eXBlUGFyYW0gRGF0ZVR5cGUgLSBUaGUgYERhdGVgIHR5cGUsIHRoZSBmdW5jdGlvbiBvcGVyYXRlcyBvbi4gR2V0cyBpbmZlcnJlZCBmcm9tIHBhc3NlZCBhcmd1bWVudHMuIEFsbG93cyB0byB1c2UgZXh0ZW5zaW9ucyBsaWtlIFtgVVRDRGF0ZWBdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy91dGMpLlxuICogQHR5cGVQYXJhbSBSZXN1bHREYXRlIC0gVGhlIHJlc3VsdCBgRGF0ZWAgdHlwZSwgaXQgaXMgdGhlIHR5cGUgcmV0dXJuZWQgZnJvbSB0aGUgY29udGV4dCBmdW5jdGlvbiBpZiBpdCBpcyBwYXNzZWQsIG9yIGluZmVycmVkIGZyb20gdGhlIGFyZ3VtZW50cy5cbiAqXG4gKiBAcGFyYW0gYXJndW1lbnQgLSBUaGUgdmFsdWUgdG8gY29udmVydFxuICpcbiAqIEByZXR1cm5zIFRoZSBwYXJzZWQgZGF0ZSBpbiB0aGUgbG9jYWwgdGltZSB6b25lXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENsb25lIHRoZSBkYXRlOlxuICogY29uc3QgcmVzdWx0ID0gdG9EYXRlKG5ldyBEYXRlKDIwMTQsIDEsIDExLCAxMSwgMzAsIDMwKSlcbiAqIC8vPT4gVHVlIEZlYiAxMSAyMDE0IDExOjMwOjMwXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENvbnZlcnQgdGhlIHRpbWVzdGFtcCB0byBkYXRlOlxuICogY29uc3QgcmVzdWx0ID0gdG9EYXRlKDEzOTIwOTg0MzAwMDApXG4gKiAvLz0+IFR1ZSBGZWIgMTEgMjAxNCAxMTozMDozMFxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9EYXRlKGFyZ3VtZW50LCBjb250ZXh0KSB7XG4gIC8vIFtUT0RPXSBHZXQgcmlkIG9mIGB0b0RhdGVgIG9yIGBjb25zdHJ1Y3RGcm9tYD9cbiAgcmV0dXJuIGNvbnN0cnVjdEZyb20oY29udGV4dCB8fCBhcmd1bWVudCwgYXJndW1lbnQpO1xufVxuXG4vLyBGYWxsYmFjayBmb3IgbW9kdWxhcml6ZWQgaW1wb3J0czpcbmV4cG9ydCBkZWZhdWx0IHRvRGF0ZTtcbiIsImltcG9ydCB7IHRvRGF0ZSB9IGZyb20gXCIuLi90b0RhdGUuanNcIjtcblxuLyoqXG4gKiBHb29nbGUgQ2hyb21lIGFzIG9mIDY3LjAuMzM5Ni44NyBpbnRyb2R1Y2VkIHRpbWV6b25lcyB3aXRoIG9mZnNldCB0aGF0IGluY2x1ZGVzIHNlY29uZHMuXG4gKiBUaGV5IHVzdWFsbHkgYXBwZWFyIGZvciBkYXRlcyB0aGF0IGRlbm90ZSB0aW1lIGJlZm9yZSB0aGUgdGltZXpvbmVzIHdlcmUgaW50cm9kdWNlZFxuICogKGUuZy4gZm9yICdFdXJvcGUvUHJhZ3VlJyB0aW1lem9uZSB0aGUgb2Zmc2V0IGlzIEdNVCswMDo1Nzo0NCBiZWZvcmUgMSBPY3RvYmVyIDE4OTFcbiAqIGFuZCBHTVQrMDE6MDA6MDAgYWZ0ZXIgdGhhdCBkYXRlKVxuICpcbiAqIERhdGUjZ2V0VGltZXpvbmVPZmZzZXQgcmV0dXJucyB0aGUgb2Zmc2V0IGluIG1pbnV0ZXMgYW5kIHdvdWxkIHJldHVybiA1NyBmb3IgdGhlIGV4YW1wbGUgYWJvdmUsXG4gKiB3aGljaCB3b3VsZCBsZWFkIHRvIGluY29ycmVjdCBjYWxjdWxhdGlvbnMuXG4gKlxuICogVGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSB0aW1lem9uZSBvZmZzZXQgaW4gbWlsbGlzZWNvbmRzIHRoYXQgdGFrZXMgc2Vjb25kcyBpbiBhY2NvdW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhkYXRlKSB7XG4gIGNvbnN0IF9kYXRlID0gdG9EYXRlKGRhdGUpO1xuICBjb25zdCB1dGNEYXRlID0gbmV3IERhdGUoXG4gICAgRGF0ZS5VVEMoXG4gICAgICBfZGF0ZS5nZXRGdWxsWWVhcigpLFxuICAgICAgX2RhdGUuZ2V0TW9udGgoKSxcbiAgICAgIF9kYXRlLmdldERhdGUoKSxcbiAgICAgIF9kYXRlLmdldEhvdXJzKCksXG4gICAgICBfZGF0ZS5nZXRNaW51dGVzKCksXG4gICAgICBfZGF0ZS5nZXRTZWNvbmRzKCksXG4gICAgICBfZGF0ZS5nZXRNaWxsaXNlY29uZHMoKSxcbiAgICApLFxuICApO1xuICB1dGNEYXRlLnNldFVUQ0Z1bGxZZWFyKF9kYXRlLmdldEZ1bGxZZWFyKCkpO1xuICByZXR1cm4gK2RhdGUgLSArdXRjRGF0ZTtcbn1cbiIsImltcG9ydCB7IGNvbnN0cnVjdEZyb20gfSBmcm9tIFwiLi4vY29uc3RydWN0RnJvbS5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplRGF0ZXMoY29udGV4dCwgLi4uZGF0ZXMpIHtcbiAgY29uc3Qgbm9ybWFsaXplID0gY29uc3RydWN0RnJvbS5iaW5kKFxuICAgIG51bGwsXG4gICAgY29udGV4dCB8fCBkYXRlcy5maW5kKChkYXRlKSA9PiB0eXBlb2YgZGF0ZSA9PT0gXCJvYmplY3RcIiksXG4gICk7XG4gIHJldHVybiBkYXRlcy5tYXAobm9ybWFsaXplKTtcbn1cbiIsImltcG9ydCB7IHRvRGF0ZSB9IGZyb20gXCIuL3RvRGF0ZS5qc1wiO1xuXG4vKipcbiAqIEBuYW1lIGNvbXBhcmVBc2NcbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgQ29tcGFyZSB0aGUgdHdvIGRhdGVzIGFuZCByZXR1cm4gLTEsIDAgb3IgMS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbXBhcmUgdGhlIHR3byBkYXRlcyBhbmQgcmV0dXJuIDEgaWYgdGhlIGZpcnN0IGRhdGUgaXMgYWZ0ZXIgdGhlIHNlY29uZCxcbiAqIC0xIGlmIHRoZSBmaXJzdCBkYXRlIGlzIGJlZm9yZSB0aGUgc2Vjb25kIG9yIDAgaWYgZGF0ZXMgYXJlIGVxdWFsLlxuICpcbiAqIEBwYXJhbSBkYXRlTGVmdCAtIFRoZSBmaXJzdCBkYXRlIHRvIGNvbXBhcmVcbiAqIEBwYXJhbSBkYXRlUmlnaHQgLSBUaGUgc2Vjb25kIGRhdGUgdG8gY29tcGFyZVxuICpcbiAqIEByZXR1cm5zIFRoZSByZXN1bHQgb2YgdGhlIGNvbXBhcmlzb25cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29tcGFyZSAxMSBGZWJydWFyeSAxOTg3IGFuZCAxMCBKdWx5IDE5ODk6XG4gKiBjb25zdCByZXN1bHQgPSBjb21wYXJlQXNjKG5ldyBEYXRlKDE5ODcsIDEsIDExKSwgbmV3IERhdGUoMTk4OSwgNiwgMTApKVxuICogLy89PiAtMVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTb3J0IHRoZSBhcnJheSBvZiBkYXRlczpcbiAqIGNvbnN0IHJlc3VsdCA9IFtcbiAqICAgbmV3IERhdGUoMTk5NSwgNiwgMiksXG4gKiAgIG5ldyBEYXRlKDE5ODcsIDEsIDExKSxcbiAqICAgbmV3IERhdGUoMTk4OSwgNiwgMTApXG4gKiBdLnNvcnQoY29tcGFyZUFzYylcbiAqIC8vPT4gW1xuICogLy8gICBXZWQgRmViIDExIDE5ODcgMDA6MDA6MDAsXG4gKiAvLyAgIE1vbiBKdWwgMTAgMTk4OSAwMDowMDowMCxcbiAqIC8vICAgU3VuIEp1bCAwMiAxOTk1IDAwOjAwOjAwXG4gKiAvLyBdXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlQXNjKGRhdGVMZWZ0LCBkYXRlUmlnaHQpIHtcbiAgY29uc3QgZGlmZiA9ICt0b0RhdGUoZGF0ZUxlZnQpIC0gK3RvRGF0ZShkYXRlUmlnaHQpO1xuXG4gIGlmIChkaWZmIDwgMCkgcmV0dXJuIC0xO1xuICBlbHNlIGlmIChkaWZmID4gMCkgcmV0dXJuIDE7XG5cbiAgLy8gUmV0dXJuIDAgaWYgZGlmZiBpcyAwOyByZXR1cm4gTmFOIGlmIGRpZmYgaXMgTmFOXG4gIHJldHVybiBkaWZmO1xufVxuXG4vLyBGYWxsYmFjayBmb3IgbW9kdWxhcml6ZWQgaW1wb3J0czpcbmV4cG9ydCBkZWZhdWx0IGNvbXBhcmVBc2M7XG4iLCJpbXBvcnQgeyBkZWZhdWx0TG9jYWxlIH0gZnJvbSBcIi4vX2xpYi9kZWZhdWx0TG9jYWxlLmpzXCI7XG5pbXBvcnQgeyBnZXREZWZhdWx0T3B0aW9ucyB9IGZyb20gXCIuL19saWIvZGVmYXVsdE9wdGlvbnMuanNcIjtcbmltcG9ydCB7IGdldFJvdW5kaW5nTWV0aG9kIH0gZnJvbSBcIi4vX2xpYi9nZXRSb3VuZGluZ01ldGhvZC5qc1wiO1xuaW1wb3J0IHsgZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyB9IGZyb20gXCIuL19saWIvZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcy5qc1wiO1xuaW1wb3J0IHsgbm9ybWFsaXplRGF0ZXMgfSBmcm9tIFwiLi9fbGliL25vcm1hbGl6ZURhdGVzLmpzXCI7XG5pbXBvcnQgeyBjb21wYXJlQXNjIH0gZnJvbSBcIi4vY29tcGFyZUFzYy5qc1wiO1xuaW1wb3J0IHtcbiAgbWlsbGlzZWNvbmRzSW5NaW51dGUsXG4gIG1pbnV0ZXNJbkRheSxcbiAgbWludXRlc0luTW9udGgsXG4gIG1pbnV0ZXNJblllYXIsXG59IGZyb20gXCIuL2NvbnN0YW50cy5qc1wiO1xuXG4vKipcbiAqIFRoZSB7QGxpbmsgZm9ybWF0RGlzdGFuY2VTdHJpY3R9IGZ1bmN0aW9uIG9wdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBUaGUgdW5pdCB1c2VkIHRvIGZvcm1hdCB0aGUgZGlzdGFuY2UgaW4ge0BsaW5rIGZvcm1hdERpc3RhbmNlU3RyaWN0fS5cbiAqL1xuXG4vKipcbiAqIEBuYW1lIGZvcm1hdERpc3RhbmNlU3RyaWN0XG4gKiBAY2F0ZWdvcnkgQ29tbW9uIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IFJldHVybiB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZXMgaW4gd29yZHMuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm4gdGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzIGluIHdvcmRzLCB1c2luZyBzdHJpY3QgdW5pdHMuXG4gKiBUaGlzIGlzIGxpa2UgYGZvcm1hdERpc3RhbmNlYCwgYnV0IGRvZXMgbm90IHVzZSBoZWxwZXJzIGxpa2UgJ2FsbW9zdCcsICdvdmVyJyxcbiAqICdsZXNzIHRoYW4nIGFuZCB0aGUgbGlrZS5cbiAqXG4gKiB8IERpc3RhbmNlIGJldHdlZW4gZGF0ZXMgfCBSZXN1bHQgICAgICAgICAgICAgIHxcbiAqIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tfFxuICogfCAwIC4uLiA1OSBzZWNzICAgICAgICAgIHwgWzAuLjU5XSBzZWNvbmRzICAgICB8XG4gKiB8IDEgLi4uIDU5IG1pbnMgICAgICAgICAgfCBbMS4uNTldIG1pbnV0ZXMgICAgIHxcbiAqIHwgMSAuLi4gMjMgaHJzICAgICAgICAgICB8IFsxLi4yM10gaG91cnMgICAgICAgfFxuICogfCAxIC4uLiAyOSBkYXlzICAgICAgICAgIHwgWzEuLjI5XSBkYXlzICAgICAgICB8XG4gKiB8IDEgLi4uIDExIG1vbnRocyAgICAgICAgfCBbMS4uMTFdIG1vbnRocyAgICAgIHxcbiAqIHwgMSAuLi4gTiB5ZWFycyAgICAgICAgICB8IFsxLi5OXSAgeWVhcnMgICAgICAgfFxuICpcbiAqIEBwYXJhbSBsYXRlckRhdGUgLSBUaGUgZGF0ZVxuICogQHBhcmFtIGVhcmxpZXJEYXRlIC0gVGhlIGRhdGUgdG8gY29tcGFyZSB3aXRoXG4gKiBAcGFyYW0gb3B0aW9ucyAtIEFuIG9iamVjdCB3aXRoIG9wdGlvbnNcbiAqXG4gKiBAcmV0dXJucyBUaGUgZGlzdGFuY2UgaW4gd29yZHNcbiAqXG4gKiBAdGhyb3dzIGBkYXRlYCBtdXN0IG5vdCBiZSBJbnZhbGlkIERhdGVcbiAqIEB0aHJvd3MgYGJhc2VEYXRlYCBtdXN0IG5vdCBiZSBJbnZhbGlkIERhdGVcbiAqIEB0aHJvd3MgYG9wdGlvbnMudW5pdGAgbXVzdCBiZSAnc2Vjb25kJywgJ21pbnV0ZScsICdob3VyJywgJ2RheScsICdtb250aCcgb3IgJ3llYXInXG4gKiBAdGhyb3dzIGBvcHRpb25zLmxvY2FsZWAgbXVzdCBjb250YWluIGBmb3JtYXREaXN0YW5jZWAgcHJvcGVydHlcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gV2hhdCBpcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiAyIEp1bHkgMjAxNCBhbmQgMSBKYW51YXJ5IDIwMTU/XG4gKiBjb25zdCByZXN1bHQgPSBmb3JtYXREaXN0YW5jZVN0cmljdChuZXcgRGF0ZSgyMDE0LCA2LCAyKSwgbmV3IERhdGUoMjAxNSwgMCwgMikpXG4gKiAvLz0+ICc2IG1vbnRocydcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gV2hhdCBpcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiAxIEphbnVhcnkgMjAxNSAwMDowMDoxNVxuICogLy8gYW5kIDEgSmFudWFyeSAyMDE1IDAwOjAwOjAwP1xuICogY29uc3QgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VTdHJpY3QoXG4gKiAgIG5ldyBEYXRlKDIwMTUsIDAsIDEsIDAsIDAsIDE1KSxcbiAqICAgbmV3IERhdGUoMjAxNSwgMCwgMSwgMCwgMCwgMClcbiAqIClcbiAqIC8vPT4gJzE1IHNlY29uZHMnXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFdoYXQgaXMgdGhlIGRpc3RhbmNlIGZyb20gMSBKYW51YXJ5IDIwMTZcbiAqIC8vIHRvIDEgSmFudWFyeSAyMDE1LCB3aXRoIGEgc3VmZml4P1xuICogY29uc3QgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VTdHJpY3QobmV3IERhdGUoMjAxNSwgMCwgMSksIG5ldyBEYXRlKDIwMTYsIDAsIDEpLCB7XG4gKiAgIGFkZFN1ZmZpeDogdHJ1ZVxuICogfSlcbiAqIC8vPT4gJzEgeWVhciBhZ28nXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFdoYXQgaXMgdGhlIGRpc3RhbmNlIGZyb20gMSBKYW51YXJ5IDIwMTZcbiAqIC8vIHRvIDEgSmFudWFyeSAyMDE1LCBpbiBtaW51dGVzP1xuICogY29uc3QgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VTdHJpY3QobmV3IERhdGUoMjAxNiwgMCwgMSksIG5ldyBEYXRlKDIwMTUsIDAsIDEpLCB7XG4gKiAgIHVuaXQ6ICdtaW51dGUnXG4gKiB9KVxuICogLy89PiAnNTI1NjAwIG1pbnV0ZXMnXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFdoYXQgaXMgdGhlIGRpc3RhbmNlIGZyb20gMSBKYW51YXJ5IDIwMTVcbiAqIC8vIHRvIDI4IEphbnVhcnkgMjAxNSwgaW4gbW9udGhzLCByb3VuZGVkIHVwP1xuICogY29uc3QgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VTdHJpY3QobmV3IERhdGUoMjAxNSwgMCwgMjgpLCBuZXcgRGF0ZSgyMDE1LCAwLCAxKSwge1xuICogICB1bml0OiAnbW9udGgnLFxuICogICByb3VuZGluZ01ldGhvZDogJ2NlaWwnXG4gKiB9KVxuICogLy89PiAnMSBtb250aCdcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gV2hhdCBpcyB0aGUgZGlzdGFuY2UgYmV0d2VlbiAxIEF1Z3VzdCAyMDE2IGFuZCAxIEphbnVhcnkgMjAxNSBpbiBFc3BlcmFudG8/XG4gKiBpbXBvcnQgeyBlb0xvY2FsZSB9IGZyb20gJ2RhdGUtZm5zL2xvY2FsZS9lbydcbiAqIGNvbnN0IHJlc3VsdCA9IGZvcm1hdERpc3RhbmNlU3RyaWN0KG5ldyBEYXRlKDIwMTYsIDcsIDEpLCBuZXcgRGF0ZSgyMDE1LCAwLCAxKSwge1xuICogICBsb2NhbGU6IGVvTG9jYWxlXG4gKiB9KVxuICogLy89PiAnMSBqYXJvJ1xuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXREaXN0YW5jZVN0cmljdChsYXRlckRhdGUsIGVhcmxpZXJEYXRlLCBvcHRpb25zKSB7XG4gIGNvbnN0IGRlZmF1bHRPcHRpb25zID0gZ2V0RGVmYXVsdE9wdGlvbnMoKTtcbiAgY29uc3QgbG9jYWxlID0gb3B0aW9ucz8ubG9jYWxlID8/IGRlZmF1bHRPcHRpb25zLmxvY2FsZSA/PyBkZWZhdWx0TG9jYWxlO1xuXG4gIGNvbnN0IGNvbXBhcmlzb24gPSBjb21wYXJlQXNjKGxhdGVyRGF0ZSwgZWFybGllckRhdGUpO1xuXG4gIGlmIChpc05hTihjb21wYXJpc29uKSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFwiSW52YWxpZCB0aW1lIHZhbHVlXCIpO1xuICB9XG5cbiAgY29uc3QgbG9jYWxpemVPcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucywge1xuICAgIGFkZFN1ZmZpeDogb3B0aW9ucz8uYWRkU3VmZml4LFxuICAgIGNvbXBhcmlzb246IGNvbXBhcmlzb24sXG4gIH0pO1xuXG4gIGNvbnN0IFtsYXRlckRhdGVfLCBlYXJsaWVyRGF0ZV9dID0gbm9ybWFsaXplRGF0ZXMoXG4gICAgb3B0aW9ucz8uaW4sXG4gICAgLi4uKGNvbXBhcmlzb24gPiAwID8gW2VhcmxpZXJEYXRlLCBsYXRlckRhdGVdIDogW2xhdGVyRGF0ZSwgZWFybGllckRhdGVdKSxcbiAgKTtcblxuICBjb25zdCByb3VuZGluZ01ldGhvZCA9IGdldFJvdW5kaW5nTWV0aG9kKG9wdGlvbnM/LnJvdW5kaW5nTWV0aG9kID8/IFwicm91bmRcIik7XG5cbiAgY29uc3QgbWlsbGlzZWNvbmRzID0gZWFybGllckRhdGVfLmdldFRpbWUoKSAtIGxhdGVyRGF0ZV8uZ2V0VGltZSgpO1xuICBjb25zdCBtaW51dGVzID0gbWlsbGlzZWNvbmRzIC8gbWlsbGlzZWNvbmRzSW5NaW51dGU7XG5cbiAgY29uc3QgdGltZXpvbmVPZmZzZXQgPVxuICAgIGdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMoZWFybGllckRhdGVfKSAtXG4gICAgZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyhsYXRlckRhdGVfKTtcblxuICAvLyBVc2UgRFNULW5vcm1hbGl6ZWQgZGlmZmVyZW5jZSBpbiBtaW51dGVzIGZvciB5ZWFycywgbW9udGhzIGFuZCBkYXlzO1xuICAvLyB1c2UgcmVndWxhciBkaWZmZXJlbmNlIGluIG1pbnV0ZXMgZm9yIGhvdXJzLCBtaW51dGVzIGFuZCBzZWNvbmRzLlxuICBjb25zdCBkc3ROb3JtYWxpemVkTWludXRlcyA9XG4gICAgKG1pbGxpc2Vjb25kcyAtIHRpbWV6b25lT2Zmc2V0KSAvIG1pbGxpc2Vjb25kc0luTWludXRlO1xuXG4gIGNvbnN0IGRlZmF1bHRVbml0ID0gb3B0aW9ucz8udW5pdDtcbiAgbGV0IHVuaXQ7XG4gIGlmICghZGVmYXVsdFVuaXQpIHtcbiAgICBpZiAobWludXRlcyA8IDEpIHtcbiAgICAgIHVuaXQgPSBcInNlY29uZFwiO1xuICAgIH0gZWxzZSBpZiAobWludXRlcyA8IDYwKSB7XG4gICAgICB1bml0ID0gXCJtaW51dGVcIjtcbiAgICB9IGVsc2UgaWYgKG1pbnV0ZXMgPCBtaW51dGVzSW5EYXkpIHtcbiAgICAgIHVuaXQgPSBcImhvdXJcIjtcbiAgICB9IGVsc2UgaWYgKGRzdE5vcm1hbGl6ZWRNaW51dGVzIDwgbWludXRlc0luTW9udGgpIHtcbiAgICAgIHVuaXQgPSBcImRheVwiO1xuICAgIH0gZWxzZSBpZiAoZHN0Tm9ybWFsaXplZE1pbnV0ZXMgPCBtaW51dGVzSW5ZZWFyKSB7XG4gICAgICB1bml0ID0gXCJtb250aFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICB1bml0ID0gXCJ5ZWFyXCI7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHVuaXQgPSBkZWZhdWx0VW5pdDtcbiAgfVxuXG4gIC8vIDAgdXAgdG8gNjAgc2Vjb25kc1xuICBpZiAodW5pdCA9PT0gXCJzZWNvbmRcIikge1xuICAgIGNvbnN0IHNlY29uZHMgPSByb3VuZGluZ01ldGhvZChtaWxsaXNlY29uZHMgLyAxMDAwKTtcbiAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKFwieFNlY29uZHNcIiwgc2Vjb25kcywgbG9jYWxpemVPcHRpb25zKTtcblxuICAgIC8vIDEgdXAgdG8gNjAgbWluc1xuICB9IGVsc2UgaWYgKHVuaXQgPT09IFwibWludXRlXCIpIHtcbiAgICBjb25zdCByb3VuZGVkTWludXRlcyA9IHJvdW5kaW5nTWV0aG9kKG1pbnV0ZXMpO1xuICAgIHJldHVybiBsb2NhbGUuZm9ybWF0RGlzdGFuY2UoXCJ4TWludXRlc1wiLCByb3VuZGVkTWludXRlcywgbG9jYWxpemVPcHRpb25zKTtcblxuICAgIC8vIDEgdXAgdG8gMjQgaG91cnNcbiAgfSBlbHNlIGlmICh1bml0ID09PSBcImhvdXJcIikge1xuICAgIGNvbnN0IGhvdXJzID0gcm91bmRpbmdNZXRob2QobWludXRlcyAvIDYwKTtcbiAgICByZXR1cm4gbG9jYWxlLmZvcm1hdERpc3RhbmNlKFwieEhvdXJzXCIsIGhvdXJzLCBsb2NhbGl6ZU9wdGlvbnMpO1xuXG4gICAgLy8gMSB1cCB0byAzMCBkYXlzXG4gIH0gZWxzZSBpZiAodW5pdCA9PT0gXCJkYXlcIikge1xuICAgIGNvbnN0IGRheXMgPSByb3VuZGluZ01ldGhvZChkc3ROb3JtYWxpemVkTWludXRlcyAvIG1pbnV0ZXNJbkRheSk7XG4gICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZShcInhEYXlzXCIsIGRheXMsIGxvY2FsaXplT3B0aW9ucyk7XG5cbiAgICAvLyAxIHVwIHRvIDEyIG1vbnRoc1xuICB9IGVsc2UgaWYgKHVuaXQgPT09IFwibW9udGhcIikge1xuICAgIGNvbnN0IG1vbnRocyA9IHJvdW5kaW5nTWV0aG9kKGRzdE5vcm1hbGl6ZWRNaW51dGVzIC8gbWludXRlc0luTW9udGgpO1xuICAgIHJldHVybiBtb250aHMgPT09IDEyICYmIGRlZmF1bHRVbml0ICE9PSBcIm1vbnRoXCJcbiAgICAgID8gbG9jYWxlLmZvcm1hdERpc3RhbmNlKFwieFllYXJzXCIsIDEsIGxvY2FsaXplT3B0aW9ucylcbiAgICAgIDogbG9jYWxlLmZvcm1hdERpc3RhbmNlKFwieE1vbnRoc1wiLCBtb250aHMsIGxvY2FsaXplT3B0aW9ucyk7XG5cbiAgICAvLyAxIHllYXIgdXAgdG8gbWF4IERhdGVcbiAgfSBlbHNlIHtcbiAgICBjb25zdCB5ZWFycyA9IHJvdW5kaW5nTWV0aG9kKGRzdE5vcm1hbGl6ZWRNaW51dGVzIC8gbWludXRlc0luWWVhcik7XG4gICAgcmV0dXJuIGxvY2FsZS5mb3JtYXREaXN0YW5jZShcInhZZWFyc1wiLCB5ZWFycywgbG9jYWxpemVPcHRpb25zKTtcbiAgfVxufVxuXG4vLyBGYWxsYmFjayBmb3IgbW9kdWxhcml6ZWQgaW1wb3J0czpcbmV4cG9ydCBkZWZhdWx0IGZvcm1hdERpc3RhbmNlU3RyaWN0O1xuIiwiaW1wb3J0IHsgY29uc3RydWN0Tm93IH0gZnJvbSBcIi4vY29uc3RydWN0Tm93LmpzXCI7XG5cbmltcG9ydCB7IGZvcm1hdERpc3RhbmNlU3RyaWN0IH0gZnJvbSBcIi4vZm9ybWF0RGlzdGFuY2VTdHJpY3QuanNcIjtcblxuLyoqXG4gKiBUaGUge0BsaW5rIGZvcm1hdERpc3RhbmNlVG9Ob3dTdHJpY3R9IGZ1bmN0aW9uIG9wdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBAbmFtZSBmb3JtYXREaXN0YW5jZVRvTm93U3RyaWN0XG4gKiBAY2F0ZWdvcnkgQ29tbW9uIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IFJldHVybiB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZSBhbmQgbm93IGluIHdvcmRzLlxuICogQHB1cmUgZmFsc2VcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFJldHVybiB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZXMgaW4gd29yZHMsIHVzaW5nIHN0cmljdCB1bml0cy5cbiAqIFRoaXMgaXMgbGlrZSBgZm9ybWF0RGlzdGFuY2VgLCBidXQgZG9lcyBub3QgdXNlIGhlbHBlcnMgbGlrZSAnYWxtb3N0JywgJ292ZXInLFxuICogJ2xlc3MgdGhhbicgYW5kIHRoZSBsaWtlLlxuICpcbiAqIHwgRGlzdGFuY2UgYmV0d2VlbiBkYXRlcyB8IFJlc3VsdCAgICAgICAgICAgICAgfFxuICogfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLS18XG4gKiB8IDAgLi4uIDU5IHNlY3MgICAgICAgICAgfCBbMC4uNTldIHNlY29uZHMgICAgIHxcbiAqIHwgMSAuLi4gNTkgbWlucyAgICAgICAgICB8IFsxLi41OV0gbWludXRlcyAgICAgfFxuICogfCAxIC4uLiAyMyBocnMgICAgICAgICAgIHwgWzEuLjIzXSBob3VycyAgICAgICB8XG4gKiB8IDEgLi4uIDI5IGRheXMgICAgICAgICAgfCBbMS4uMjldIGRheXMgICAgICAgIHxcbiAqIHwgMSAuLi4gMTEgbW9udGhzICAgICAgICB8IFsxLi4xMV0gbW9udGhzICAgICAgfFxuICogfCAxIC4uLiBOIHllYXJzICAgICAgICAgIHwgWzEuLk5dICB5ZWFycyAgICAgICB8XG4gKlxuICogQHBhcmFtIGRhdGUgLSBUaGUgZ2l2ZW4gZGF0ZVxuICogQHBhcmFtIG9wdGlvbnMgLSBBbiBvYmplY3Qgd2l0aCBvcHRpb25zLlxuICpcbiAqIEByZXR1cm5zIFRoZSBkaXN0YW5jZSBpbiB3b3Jkc1xuICpcbiAqIEB0aHJvd3MgYGRhdGVgIG11c3Qgbm90IGJlIEludmFsaWQgRGF0ZVxuICogQHRocm93cyBgb3B0aW9ucy5sb2NhbGVgIG11c3QgY29udGFpbiBgZm9ybWF0RGlzdGFuY2VgIHByb3BlcnR5XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElmIHRvZGF5IGlzIDEgSmFudWFyeSAyMDE1LCB3aGF0IGlzIHRoZSBkaXN0YW5jZSB0byAyIEp1bHkgMjAxND9cbiAqIGNvbnN0IHJlc3VsdCA9IGZvcm1hdERpc3RhbmNlVG9Ob3dTdHJpY3QoXG4gKiAgIG5ldyBEYXRlKDIwMTQsIDYsIDIpXG4gKiApXG4gKiAvLz0+ICc2IG1vbnRocydcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSWYgbm93IGlzIDEgSmFudWFyeSAyMDE1IDAwOjAwOjAwLFxuICogLy8gd2hhdCBpcyB0aGUgZGlzdGFuY2UgdG8gMSBKYW51YXJ5IDIwMTUgMDA6MDA6MTUsIGluY2x1ZGluZyBzZWNvbmRzP1xuICogY29uc3QgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VUb05vd1N0cmljdChcbiAqICAgbmV3IERhdGUoMjAxNSwgMCwgMSwgMCwgMCwgMTUpXG4gKiApXG4gKiAvLz0+ICcxNSBzZWNvbmRzJ1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBJZiB0b2RheSBpcyAxIEphbnVhcnkgMjAxNSxcbiAqIC8vIHdoYXQgaXMgdGhlIGRpc3RhbmNlIHRvIDEgSmFudWFyeSAyMDE2LCB3aXRoIGEgc3VmZml4P1xuICogY29uc3QgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VUb05vd1N0cmljdChcbiAqICAgbmV3IERhdGUoMjAxNiwgMCwgMSksXG4gKiAgIHthZGRTdWZmaXg6IHRydWV9XG4gKiApXG4gKiAvLz0+ICdpbiAxIHllYXInXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElmIHRvZGF5IGlzIDI4IEphbnVhcnkgMjAxNSxcbiAqIC8vIHdoYXQgaXMgdGhlIGRpc3RhbmNlIHRvIDEgSmFudWFyeSAyMDE1LCBpbiBtb250aHMsIHJvdW5kZWQgdXA/P1xuICogY29uc3QgcmVzdWx0ID0gZm9ybWF0RGlzdGFuY2VUb05vd1N0cmljdChuZXcgRGF0ZSgyMDE1LCAwLCAxKSwge1xuICogICB1bml0OiAnbW9udGgnLFxuICogICByb3VuZGluZ01ldGhvZDogJ2NlaWwnXG4gKiB9KVxuICogLy89PiAnMSBtb250aCdcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSWYgdG9kYXkgaXMgMSBKYW51YXJ5IDIwMTUsXG4gKiAvLyB3aGF0IGlzIHRoZSBkaXN0YW5jZSB0byAxIEphbnVhcnkgMjAxNiBpbiBFc3BlcmFudG8/XG4gKiBjb25zdCBlb0xvY2FsZSA9IHJlcXVpcmUoJ2RhdGUtZm5zL2xvY2FsZS9lbycpXG4gKiBjb25zdCByZXN1bHQgPSBmb3JtYXREaXN0YW5jZVRvTm93U3RyaWN0KFxuICogICBuZXcgRGF0ZSgyMDE2LCAwLCAxKSxcbiAqICAge2xvY2FsZTogZW9Mb2NhbGV9XG4gKiApXG4gKiAvLz0+ICcxIGphcm8nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXREaXN0YW5jZVRvTm93U3RyaWN0KGRhdGUsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIGZvcm1hdERpc3RhbmNlU3RyaWN0KGRhdGUsIGNvbnN0cnVjdE5vdyhkYXRlKSwgb3B0aW9ucyk7XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgZm9ybWF0RGlzdGFuY2VUb05vd1N0cmljdDtcbiIsImltcG9ydCB7IGZvcm1hdERpc3RhbmNlVG9Ob3dTdHJpY3QgfSBmcm9tIFwiZGF0ZS1mbnNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVRpbWVMZWZ0KGRhdGUpIHtcblxuICAgIGxldCB0aW1lTGVmdDtcblxuICAgIGlmIChkYXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGltZUxlZnQgPSBcIkVycm9yXCI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBkdWVEYXRlID0gbmV3IERhdGUoZGF0ZSk7XG4gICAgICAgIHRpbWVMZWZ0ID0gZm9ybWF0RGlzdGFuY2VUb05vd1N0cmljdChkdWVEYXRlKTtcbiAgICB9O1xuICAgIHJldHVybiB0aW1lTGVmdDtcbn07IiwiZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVRhc2tQcmlvcml0eSh0YXNrRGl2LCB0YXNrKSB7XG5cbiAgICBzd2l0Y2ggKHRhc2sucHJpb3JpdHlMdmwpIHtcbiAgICAgICAgY2FzZSBcIjFcIiA6XG4gICAgICAgICAgICB0YXNrRGl2LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiYmFja2dyb3VuZC1jb2xvcjogI2YzMDAwMDk0XCIpO1xuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSBcIjJcIiA6XG4gICAgICAgICAgICB0YXNrRGl2LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiYmFja2dyb3VuZC1jb2xvcjogI2ZmZjE3MGZmXCIpO1xuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSBcIjNcIiA6XG4gICAgICAgICAgICB0YXNrRGl2LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiYmFja2dyb3VuZC1jb2xvcjogIzRBOTc4MlwiKTtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0YXNrRGl2LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsIFwiYmFja2dyb3VuZC1jb2xvcjogI0U0RTBFMVwiKTtcbiAgICB9O1xufTsiLCJpbXBvcnQgeyBlZGl0VGFza01vZGFsIH0gZnJvbSBcIi4uXCI7XG5pbXBvcnQgeyBjcmVhdGVUYXNrIH0gZnJvbSBcIi4vY3JlYXRlVGFza1wiO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBlZGl0VGFzayhyZW5kZXJlZFRhc2tUaXRsZSwgd29ya2luZ1Byb2plY3QpIHtcblxuICAgIGxldCBmZXRjaGVkQXJyYXlUYXNrO1xuICAgIGxldCBkaXZUb0VkaXQgPSByZW5kZXJlZFRhc2tUaXRsZS5wYXJlbnRFbGVtZW50OyBcblxuICAgIGxldCBzdWJIZWFkaW5nVGl0bGUgPSBkaXZUb0VkaXQucGFyZW50RWxlbWVudC5kYXRhc2V0LnN1YkhlYWRpbmdEYXRhO1xuXG4gICAgd29ya2luZ1Byb2plY3Quc3ViSGVhZGluZ3MuZm9yRWFjaChzdWJIZWFkaW5nID0+IHtcblxuICAgICAgICBpZiAoc3ViSGVhZGluZy50aXRsZSA9PT0gc3ViSGVhZGluZ1RpdGxlKSB7XG4gICAgICAgICAgICBzdWJIZWFkaW5nLnRhc2tzLmZvckVhY2goKHRhc2spID0+IHtcbiAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAodGFzay50YXNrVGl0bGUgPT09IHJlbmRlcmVkVGFza1RpdGxlLmlubmVyVGV4dCkge1xuICAgICAgICAgICAgICAgICAgICBmZXRjaGVkQXJyYXlUYXNrID0gY3JlYXRlVGFzayh0YXNrLnRhc2tUaXRsZSwgdGFzay50YXNrRGVzYyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhc2suZHVlRGF0ZSwgdGFzay5wcmlvcml0eUx2bCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgIH0pO1xuXG4vLyAvLyAgICAgLy8gZmluZCBpbnB1dCBib3hlcyBcblxuICAgIGxldCB0YXNrVGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdHRlZFRhc2tUaXRsZVwiKTtcbiAgICBsZXQgdGFza0Rlc2NJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdHRlZFRhc2tEZXNjXCIpO1xuICAgIGxldCB0YXNrRHVlRGF0ZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0dGVkVGFza0R1ZURhdGVcIik7XG4gICAgbGV0IHRhc2tQcmlvcml0eUx2bElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0dGVkVGFza1ByaW9yaXR5THZsXCIpO1xuXG4gICAgdGFza1RpdGxlSW5wdXQudmFsdWUgPSBmZXRjaGVkQXJyYXlUYXNrLnRhc2tUaXRsZTtcbiAgICB0YXNrRGVzY0lucHV0LnZhbHVlID0gZmV0Y2hlZEFycmF5VGFzay50YXNrRGVzYztcbiAgICB0YXNrRHVlRGF0ZUlucHV0LnZhbHVlID0gZmV0Y2hlZEFycmF5VGFzay5kdWVEYXRlO1xuICAgIHRhc2tQcmlvcml0eUx2bElucHV0LnZhbHVlID0gZmV0Y2hlZEFycmF5VGFzay5wcmlvcml0eUx2bDtcblxuICAgIGVkaXRUYXNrTW9kYWwuZGF0YXNldC5mZXRjaGVkVGFza1RpdGxlID0gZmV0Y2hlZEFycmF5VGFzay50YXNrVGl0bGU7XG4gICAgZWRpdFRhc2tNb2RhbC5kYXRhc2V0LmZldGNoZWRUYXNrRGVzYyA9IGZldGNoZWRBcnJheVRhc2sudGFza1RpdGxlO1xuICAgIGVkaXRUYXNrTW9kYWwuZGF0YXNldC5mZXRjaGVkRHVlRGF0ZSA9IGZldGNoZWRBcnJheVRhc2suZHVlRGF0ZTtcbiAgICBlZGl0VGFza01vZGFsLmRhdGFzZXQuZmV0Y2hlZFByaW9MdmwgPSBmZXRjaGVkQXJyYXlUYXNrLnByaW9yaXR5THZsO1xuXG5cblxuICAgIGVkaXRUYXNrTW9kYWwuc2hvd01vZGFsKCk7XG5cbn1cblxuIiwiaW1wb3J0IHsgdG9nZ2xlQ29tcGxldGlvbiB9IGZyb20gXCIuL3RvZ2dsZUNvbXBsZXRpb25cIjtcbmltcG9ydCB7IHVwZGF0ZUNvbXBsZXRpb25CYXIgfSBmcm9tIFwiLi91cGRhdGVDb21wbGV0aW9uQmFyXCI7XG5pbXBvcnQgeyB1cGRhdGVUaW1lTGVmdCB9IGZyb20gXCIuL3VwZGF0ZVRpbWVMZWZ0XCI7XG5pbXBvcnQgeyB1cGRhdGVUYXNrUHJpb3JpdHkgfSBmcm9tIFwiLi91cGRhdGVUYXNrUHJpb3JpdHlcIlxuaW1wb3J0IHsgZWRpdFRhc2sgfSBmcm9tIFwiLi9lZGl0VGFza1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyVGFza3Mod29ya2luZ1Byb2plY3QpIHtcblxuICAgIE5vZGVMaXN0LnByb3RvdHlwZS5mb3JFYWNoID0gQXJyYXkucHJvdG90eXBlLmZvckVhY2g7XG4gICAgbGV0IHRhc2tEaXY7XG4gICAgbGV0IGN1cnJlbnRTdWJIZWFkaW5nRE9NRWxlbWVudDtcblxuICAgIHdvcmtpbmdQcm9qZWN0LnN1YkhlYWRpbmdzLmZvckVhY2goKHN1YkhlYWRpbmcpID0+IHtcbiAgICAgICAgY3VycmVudFN1YkhlYWRpbmdET01FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImgyW2RhdGEtc3ViLWhlYWRpbmctZGF0YSA9IFwiICArIFwiJ1wiICsgc3ViSGVhZGluZy50aXRsZSArIFwiJ1wiICsgXCJdXCIpO1xuICAgICAgICBcbiAgICAgICAgc3ViSGVhZGluZy50YXNrcy5mb3JFYWNoKCh0YXNrKSA9PiB7XG5cbiAgICAgICAgICAgIHRhc2tEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgdGFza0Rpdi5jbGFzc0xpc3QuYWRkKFwidGFzay1kaXZcIik7XG4gICAgICAgICAgICB0YXNrRGl2LmRhdGFzZXQuZGl2SWRlbnRpZmllciA9IHRhc2sudGFza1RpdGxlO1xuXG4gICAgICAgICAgICBjb25zdCBkZWxldGVUYXNrQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgICAgIGRlbGV0ZVRhc2tCdG4uaW5uZXJIVE1MID0gXCJEZWxldGVcIjtcbiAgICAgICAgICAgIGRlbGV0ZVRhc2tCdG4uY2xhc3NMaXN0LmFkZChcImRlbGV0ZS10YXNrLWJ0blwiKTtcblxuICAgICAgICAgICAgZGVsZXRlVGFza0J0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKXtcblxuICAgICAgICAgICAgICAgIGNvbnN0IHJlY29sbGVjdGVkQmVsb25naW5nU3ViSGVhZGluZyA9IHRoaXMucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmZpcnN0Q2hpbGQudGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVjb2xsZWN0ZWRUYXNrVGl0bGUgPSB0aGlzLnBhcmVudEVsZW1lbnQuZmlyc3RDaGlsZC5pbm5lclRleHRcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB3b3JraW5nUHJvamVjdC5zdWJIZWFkaW5ncy5mb3JFYWNoKChzdWJIZWFkaW5nKSA9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlY29sbGVjdGVkQmVsb25naW5nU3ViSGVhZGluZyA9PT0gc3ViSGVhZGluZy50aXRsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3ViSGVhZGluZy50YXNrcy5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YXNrLnRhc2tUaXRsZSA9PT0gcmVjb2xsZWN0ZWRUYXNrVGl0bGUpIHtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhc2tUb0RlbGV0ZUluZGV4ID0gc3ViSGVhZGluZy50YXNrcy5pbmRleE9mKHRhc2spXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1YkhlYWRpbmcudGFza3Muc3BsaWNlKHRhc2tUb0RlbGV0ZUluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIHVwZGF0ZUNvbXBsZXRpb25CYXIod29ya2luZ1Byb2plY3QpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNvbnN0IHJlbmRlcmVkVGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgzXCIpO1xuICAgICAgICAgICAgcmVuZGVyZWRUYXNrVGl0bGUuY2xhc3NMaXN0LmFkZChcInRhc2stdGl0bGVcIik7XG4gICAgICAgICAgICBjb25zdCByZW5kZXJlZFRhc2tEZXNjID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgICAgICBjb25zdCByZW5kZXJlZFRhc2tEdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgICAgICBjb25zdCByZW5kZXJlZFRhc2tQcmlvcml0eUx2bCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICAgICAgY29uc3QgcmVuZGVyZWRUaW1lTGVmdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zdCB0YXNrQ29tcGxldGVkQ2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICAgICAgICB0YXNrQ29tcGxldGVkQ2hlY2tib3guc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcImNoZWNrYm94XCIpO1xuICAgICAgICAgICAgIFxuICAgICAgICAgICAgdGFza0NvbXBsZXRlZENoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdG9nZ2xlQ29tcGxldGlvbih0YXNrLCB3b3JraW5nUHJvamVjdCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmVuZGVyZWRUYXNrVGl0bGUuaW5uZXJIVE1MID0gdGFzay50YXNrVGl0bGU7XG4gICAgICAgICAgICByZW5kZXJlZFRhc2tEZXNjLmlubmVySFRNTCA9IHRhc2sudGFza0Rlc2M7XG4gICAgICAgICAgICByZW5kZXJlZFRhc2tEdWVEYXRlLmlubmVySFRNTCA9IFwiRHVlIERhdGU6IFwiICsgdGFzay5kdWVEYXRlO1xuICAgICAgICAgICAgcmVuZGVyZWRUYXNrUHJpb3JpdHlMdmwuaW5uZXJIVE1MID0gdGFzay5wcmlvcml0eUx2bDtcblxuICAgICAgICAgICAgdXBkYXRlVGFza1ByaW9yaXR5KHRhc2tEaXYsIHRhc2spO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAodGFzay5kdWVEYXRlID09PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgcmVuZGVyZWRUaW1lTGVmdC5pbm5lclRleHQgPSBcIlRpbWUgTGVmdDogXCIgKyB1cGRhdGVUaW1lTGVmdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVuZGVyZWRUaW1lTGVmdC5pbm5lclRleHQgPSBcIlRpbWUgTGVmdDogXCIgKyB1cGRhdGVUaW1lTGVmdCh0YXNrLmR1ZURhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGFza0Rpdi5hcHBlbmRDaGlsZChyZW5kZXJlZFRhc2tUaXRsZSk7XG4gICAgICAgICAgICB0YXNrRGl2LmFwcGVuZENoaWxkKHJlbmRlcmVkVGFza0Rlc2MpO1xuICAgICAgICAgICAgdGFza0Rpdi5hcHBlbmRDaGlsZChyZW5kZXJlZFRhc2tEdWVEYXRlKTtcbiAgICAgICAgICAgIHRhc2tEaXYuYXBwZW5kQ2hpbGQocmVuZGVyZWRUaW1lTGVmdCk7XG4gICAgICAgICAgICB0YXNrRGl2LmFwcGVuZENoaWxkKHRhc2tDb21wbGV0ZWRDaGVja2JveCk7XG4gICAgICAgICAgICB0YXNrRGl2LmFwcGVuZENoaWxkKGRlbGV0ZVRhc2tCdG4pO1xuXG5cbiAgICAgICAgICAgIGlmICh0YXNrLmlzQ29tcGxldGUpIHtcbiAgICAgICAgICAgICAgICB0YXNrQ29tcGxldGVkQ2hlY2tib3guY2hlY2tlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJlbmRlcmVkVGFza1RpdGxlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgICAgIGVkaXRUYXNrKHRoaXMsIHdvcmtpbmdQcm9qZWN0KTtcblxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGN1cnJlbnRTdWJIZWFkaW5nRE9NRWxlbWVudC5hcHBlbmRDaGlsZCh0YXNrRGl2KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgdXBkYXRlQ29tcGxldGlvbkJhcih3b3JraW5nUHJvamVjdCk7XG59OyIsImV4cG9ydCBmdW5jdGlvbiBjbGVhblByb2plY3RCb2R5KCkge1xuICAgIGNvbnN0IHByb2plY3RCb2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jdXJyZW50LXByb2plY3QtYm9keVwiKTtcblxuICAgIHdoaWxlIChwcm9qZWN0Qm9keS5oYXNDaGlsZE5vZGVzKCkpIHtcbiAgICAgICAgcHJvamVjdEJvZHkuZmlyc3RDaGlsZC5yZW1vdmUoKTtcbiAgICB9O1xufTsiLCJpbXBvcnQgeyByZW5kZXJQcm9qZWN0SGVhZGluZyB9IGZyb20gXCIuL3JlbmRlclByb2plY3RIZWFkaW5nXCI7XG5pbXBvcnQgeyByZW5kZXJTdWJIZWFkaW5ncyB9IGZyb20gXCIuL3JlbmRlclN1YkhlYWRpbmdzXCI7XG5pbXBvcnQgeyByZW5kZXJUYXNrcyB9IGZyb20gXCIuL3JlbmRlclRhc2tzXCI7XG5pbXBvcnQgeyBzYXZlRGF0YSB9IGZyb20gXCIuL3NhdmVEYXRhXCI7XG5pbXBvcnQgeyBjbGVhblByb2plY3RCb2R5IH0gZnJvbSBcIi4vY2xlYW5Qcm9qZWN0Qm9keVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyRXhpc3RpbmdQcm9qZWN0KHByb2plY3RUaXRsZSwgd29ya2luZ1Byb2plY3QsIGdvVG9Qcm9qZWN0QnV0dG9uUHJlc3NlZCkge1xuICAgXG4gICAgY2xlYW5Qcm9qZWN0Qm9keSgpO1xuICAgIHJlbmRlclByb2plY3RIZWFkaW5nKHByb2plY3RUaXRsZSwgZ29Ub1Byb2plY3RCdXR0b25QcmVzc2VkKTtcblxuICAgIHJlbmRlclN1YkhlYWRpbmdzKHdvcmtpbmdQcm9qZWN0KTtcbiAgICByZW5kZXJUYXNrcyh3b3JraW5nUHJvamVjdCk7XG5cbiAgICBzYXZlRGF0YSgpO1xufTsiLCJpbXBvcnQgeyByZW5kZXJFeGlzdGluZ1Byb2plY3QgfSBmcm9tIFwiLi9yZW5kZXJFeGlzdGluZ1Byb2plY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVByb2plY3RDYXJkKHdvcmtpbmdQcm9qZWN0KSB7XG5cbiAgICAgICAgY29uc3QgcHJvamVjdExpc3RCb2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0LWxpc3QtYm9keVwiKTtcbiAgICAgICAgY29uc3QgbmV3UHJvamVjdENhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBjb25zdCBwcm9qZWN0VGl0bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuXG4gICAgICAgIHByb2plY3RUaXRsZUVsZW1lbnQuaW5uZXJUZXh0ID0gd29ya2luZ1Byb2plY3QucHJvamVjdFRpdGxlO1xuICAgICAgICBwcm9qZWN0VGl0bGVFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LWNhcmQtdGl0bGVcIilcbiAgICAgICAgXG4gICAgICAgIG5ld1Byb2plY3RDYXJkLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LWNhcmRcIik7XG4gICAgICAgIG5ld1Byb2plY3RDYXJkLmNsYXNzTGlzdC5hZGQoXCJnby10by1wcm9qZWN0LWNhcmRcIilcblxuXG4gICAgICAgIGNvbnN0IGdvVG9Qcm9qZWN0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgZ29Ub1Byb2plY3RCdG4uaW5uZXJIVE1MID0gXCJPcGVuXCI7XG5cbiAgICAgICAgbGV0IGNsYXNzVG9BZGQgPSB3b3JraW5nUHJvamVjdC5wcm9qZWN0VGl0bGUudHJpbSgpO1xuICAgICAgICBjbGFzc1RvQWRkID0gY2xhc3NUb0FkZC5yZXBsYWNlKC9cXHMvZywgJycpO1xuICAgICAgICBnb1RvUHJvamVjdEJ0bi5jbGFzc0xpc3QuYWRkKGNsYXNzVG9BZGQpO1xuICAgICAgICBnb1RvUHJvamVjdEJ0bi5jbGFzc0xpc3QuYWRkKFwiZ28tdG8tcHJvamVjdC1jYXJkLWJ0blwiKVxuXG5cbiAgICAgICAgcHJvamVjdExpc3RCb2R5LmFwcGVuZENoaWxkKG5ld1Byb2plY3RDYXJkKTtcbiAgICAgICAgbmV3UHJvamVjdENhcmQuYXBwZW5kQ2hpbGQocHJvamVjdFRpdGxlRWxlbWVudCk7XG4gICAgICAgIG5ld1Byb2plY3RDYXJkLmFwcGVuZENoaWxkKGdvVG9Qcm9qZWN0QnRuKTtcblxuICAgICAgICBnb1RvUHJvamVjdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7ICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBib29sIHRvIHByZXZlbnQgcHJvamVjdCBjYXJkIGNyZWF0aW9uIG9uIGdvIHRvIFByb2plY3QgQnRuXG4gICAgICAgICAgICBsZXQgZ29Ub1Byb2plY3RCdXR0b25QcmVzc2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIHJlbmRlckV4aXN0aW5nUHJvamVjdCh3b3JraW5nUHJvamVjdC5wcm9qZWN0VGl0bGUsIHdvcmtpbmdQcm9qZWN0LCBnb1RvUHJvamVjdEJ1dHRvblByZXNzZWQpO1xuICAgICAgICB9KVxuXG59IiwiZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZVByb2plY3RDYXJkKHRpdGxlKSB7XG4gICAgXG4gICAgY29uc3QgZm9ybWF0dGVkVGl0bGUgPSB0aXRsZS5yZXBsYWNlKC9cXHMvZywgJycpO1xuICAgIGNvbnN0IGJ0bkJlbG9uZ2luZ1RvUHJvamVjdENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLlwiICsgZm9ybWF0dGVkVGl0bGUpO1xuICAgIGJ0bkJlbG9uZ2luZ1RvUHJvamVjdENhcmQucGFyZW50RWxlbWVudC5yZW1vdmUoKTtcbn07IiwiaW1wb3J0IHsgY3VycmVudFByb2plY3RzIH0gZnJvbSBcIi4uL2luZGV4XCI7XG5pbXBvcnQgeyBjcmVhdGVTdWJIZWFkaW5nIH0gZnJvbSBcIi4vY3JlYXRlU3ViSGVhZGluZ1wiO1xuaW1wb3J0IHsgcmVuZGVyU3ViSGVhZGluZ3MgfSBmcm9tIFwiLi9yZW5kZXJTdWJIZWFkaW5nc1wiXG5pbXBvcnQgeyBjcmVhdGVQcm9qZWN0Q2FyZCB9IGZyb20gXCIuL2NyZWF0ZVByb2plY3RDYXJkXCI7XG5pbXBvcnQgeyBzYXZlRGF0YSB9IGZyb20gXCIuL3NhdmVEYXRhXCI7XG5pbXBvcnQgeyBjbGVhblByb2plY3RCb2R5IH0gZnJvbSBcIi4vY2xlYW5Qcm9qZWN0Qm9keVwiO1xuaW1wb3J0IHsgcmVuZGVyVGFza3MgfSBmcm9tIFwiLi9yZW5kZXJUYXNrc1wiO1xuaW1wb3J0IHsgcmVtb3ZlUHJvamVjdENhcmQgfSBmcm9tIFwiLi9yZW1vdmVMYXN0Q2FyZFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyUHJvamVjdEhlYWRpbmcodGl0bGUsIGdvVG9Qcm9qZWN0QnV0dG9uUHJlc3NlZCkge1xuXG4gICAgbGV0IHdvcmtpbmdQcm9qZWN0XG4gICAgY29uc3QgcHJvamVjdEJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmN1cnJlbnQtcHJvamVjdC1ib2R5XCIpO1xuXG4gICAgY2xlYW5Qcm9qZWN0Qm9keSgpO1xuICAgIGN1cnJlbnRQcm9qZWN0cy5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgICAgIGlmIChwcm9qZWN0LnByb2plY3RUaXRsZSA9PT0gdGl0bGUpIHtcbiAgICAgICAgICAgIHdvcmtpbmdQcm9qZWN0ID0gcHJvamVjdDtcbiAgICAgICAgfTtcbiAgICB9KTtcbiAgICBcbiAgICBsZXQgY2xhc3NUb0FkZCA9IHdvcmtpbmdQcm9qZWN0LnByb2plY3RUaXRsZS50cmltKCk7XG4gICAgY2xhc3NUb0FkZCA9IGNsYXNzVG9BZGQucmVwbGFjZSgvXFxzL2csICcnKTtcbiAgICBwcm9qZWN0Qm9keS5jbGFzc0xpc3QuYWRkKGNsYXNzVG9BZGQpO1xuXG4gICAgLy8gcmVuZGVyIGhlYWRpbmcgXG5cbiAgICBjb25zdCB0aXRsZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgdGl0bGVEaXYuY2xhc3NMaXN0LmFkZChcInRpdGxlLWRpdlwiKTtcbiAgICBwcm9qZWN0Qm9keS5hcHBlbmRDaGlsZCh0aXRsZURpdik7XG5cbiAgICBjb25zdCByZW5kZXJlZFByb2plY3RUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcbiAgICByZW5kZXJlZFByb2plY3RUaXRsZS5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1UaXRsZVwiKTtcbiAgICByZW5kZXJlZFByb2plY3RUaXRsZS5pbm5lckhUTUwgPSAgd29ya2luZ1Byb2plY3QucHJvamVjdFRpdGxlO1xuICAgIHRpdGxlRGl2LmFwcGVuZENoaWxkKHJlbmRlcmVkUHJvamVjdFRpdGxlKTtcblxuICAgIGNvbnN0IGFkZFN1YkhlYWRpbmdCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGFkZFN1YkhlYWRpbmdCdG4uaW5uZXJIVE1MID0gXCJBZGQgU3Vic2VjdGlvblwiO1xuICAgIGFkZFN1YkhlYWRpbmdCdG4uY2xhc3NMaXN0LmFkZChcImFkZC1zdWJoZWFkaW5nLWJ0blwiKTtcbiAgICBcbiAgICBhZGRTdWJIZWFkaW5nQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcblxuICAgICAgICBsZXQgc3ViSGVhZGluZ0V4aXN0cyA9IGZhbHNlO1xuICAgICAgICBsZXQgZW1wdHlJbnB1dCA9IGZhbHNlO1xuICAgICAgICBsZXQgZW50ZXJlZFN1YmhlYWRpbmcgPSBwcm9tcHQoXCJFbnRlciBhIFN1YiBTZWN0aW9uIFRpdGxlOlwiLCBcIktpdGNoZW4gQ2xlYW5pbmdcIik7XG5cbiAgICAgICAgaWYgKGVudGVyZWRTdWJoZWFkaW5nID09PSBudWxsIHx8IGVudGVyZWRTdWJoZWFkaW5nLmxlbmd0aCA9PT0gMCkge2VtcHR5SW5wdXQgPSB0cnVlO31cbiBcbiAgICAgICAgd29ya2luZ1Byb2plY3Quc3ViSGVhZGluZ3MuZm9yRWFjaCgoc3ViSGVhZGluZykgPT4ge1xuICAgICAgICAgICAgaWYgKHN1YkhlYWRpbmcudGl0bGUgPT09IGVudGVyZWRTdWJoZWFkaW5nKSB7c3ViSGVhZGluZ0V4aXN0cyA9IHRydWU7fVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIXN1YkhlYWRpbmdFeGlzdHMgJiYgIWVtcHR5SW5wdXQpIHtcbiAgICAgICAgICAgIGxldCBjcmVhdGVkU3ViSGVhZGluZyA9IGNyZWF0ZVN1YkhlYWRpbmcoZW50ZXJlZFN1YmhlYWRpbmcpO1xuICAgICAgICAgICAgc2F2ZURhdGEoKTtcbiAgICAgICAgICAgIHdvcmtpbmdQcm9qZWN0LnN1YkhlYWRpbmdzLnB1c2goY3JlYXRlZFN1YkhlYWRpbmcpO1xuICAgICAgICAgICAgY2xlYW5Qcm9qZWN0Qm9keSgpIFxuXG4gICAgICAgICAgICBwcm9qZWN0Qm9keS5hcHBlbmRDaGlsZCh0aXRsZURpdik7XG4gICAgICAgICAgICByZW5kZXJTdWJIZWFkaW5ncyh3b3JraW5nUHJvamVjdCk7XG4gICAgICAgICAgICByZW5kZXJUYXNrcyh3b3JraW5nUHJvamVjdCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3ViSGVhZGluZ0V4aXN0cyB8fCBlbXB0eUlucHV0KSB7XG4gICAgICAgICAgICBhbGVydChcIlN1YnRpdGxlIGV4aXN0cyBvciBmaWVsZCBpcyBlbXB0eSwgY2FuY2VsbGluZy4uLlwiKVxuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBjb25zdCBkZWxldGVQcm9qZWN0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBkZWxldGVQcm9qZWN0QnRuLmlubmVyVGV4dCA9IFwiRGVsZXRlIFByb2plY3RcIjtcbiAgICBkZWxldGVQcm9qZWN0QnRuLmNsYXNzTGlzdC5hZGQoXCJkZWxldGUtcHJvamVjdC1idG5cIilcbiAgICBcblxuICAgIGRlbGV0ZVByb2plY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICBjbGVhblByb2plY3RCb2R5KCk7XG4gICAgICAgIGN1cnJlbnRQcm9qZWN0cy5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgICAgICAgICBpZiAocHJvamVjdC5wcm9qZWN0VGl0bGUgPT09IHRpdGxlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXhPZlJlbW92aW5nUHJvamVjdCA9IGN1cnJlbnRQcm9qZWN0cy5pbmRleE9mKHByb2plY3QpO1xuICAgICAgICAgICAgICAgIGN1cnJlbnRQcm9qZWN0cy5zcGxpY2UoaW5kZXhPZlJlbW92aW5nUHJvamVjdCwgMSk7XG4gICAgICAgICAgICAgICAgcmVtb3ZlUHJvamVjdENhcmQodGl0bGUpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICB0aXRsZURpdi5hcHBlbmRDaGlsZChhZGRTdWJIZWFkaW5nQnRuKTtcbiAgICB0aXRsZURpdi5hcHBlbmRDaGlsZChkZWxldGVQcm9qZWN0QnRuKTtcblxuICAgIGlmICghZ29Ub1Byb2plY3RCdXR0b25QcmVzc2VkKSB7XG4gICAgICAgIGNyZWF0ZVByb2plY3RDYXJkKHdvcmtpbmdQcm9qZWN0KTtcbiAgICB9XG5cbiAgICBnb1RvUHJvamVjdEJ1dHRvblByZXNzZWQgPSBmYWxzZTtcblxuICAgIHJldHVybiB7IHdvcmtpbmdQcm9qZWN0IH07XG5cbn07XG5cblxuXG4iLCJpbXBvcnQgeyBzYXZlRGF0YSB9IGZyb20gXCIuL3NhdmVEYXRhXCI7XG5pbXBvcnQgeyB0b2dnbGVDb21wbGV0aW9uIH0gZnJvbSBcIi4vdG9nZ2xlQ29tcGxldGlvblwiO1xuaW1wb3J0IHsgdXBkYXRlQ29tcGxldGlvbkJhciB9IGZyb20gXCIuL3VwZGF0ZUNvbXBsZXRpb25CYXJcIjtcbmltcG9ydCB7IHVwZGF0ZVRpbWVMZWZ0IH0gZnJvbSBcIi4vdXBkYXRlVGltZUxlZnRcIlxuaW1wb3J0IHsgdXBkYXRlVGFza1ByaW9yaXR5IH0gZnJvbSBcIi4vdXBkYXRlVGFza1ByaW9yaXR5XCJcbmltcG9ydCB7IGVkaXRUYXNrIH0gZnJvbSBcIi4vZWRpdFRhc2tcIlxuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyTmV3VGFzayh3b3JraW5nUHJvamVjdCwgd29ya2luZ1N1YkhlYWRpbmcpIHtcblxuICAgIHdvcmtpbmdQcm9qZWN0LnN1YkhlYWRpbmdzLmZvckVhY2goc3ViSGVhZGluZyA9PiB7XG4gICAgICAgIGlmIChzdWJIZWFkaW5nLnRpdGxlID09PSB3b3JraW5nU3ViSGVhZGluZykge1xuXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50U3ViSGVhZGluZ0RPTUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaDJbZGF0YS1zdWItaGVhZGluZy1kYXRhID0gXCIgICsgXCInXCIgKyBzdWJIZWFkaW5nLnRpdGxlICsgXCInXCIgKyBcIl1cIik7XG5cbiAgICAgICAgICAgIGNvbnN0IHdvcmtpbmdUYXNrTGlzdCA9IHN1YkhlYWRpbmcudGFza3M7IFxuICAgICAgICAgICAgY29uc3QgdGFza1RvUmVuZGVyID0gd29ya2luZ1Rhc2tMaXN0W3dvcmtpbmdUYXNrTGlzdC5sZW5ndGggLSAxXTtcblxuICAgICAgICAgICAgY29uc3QgdGFza0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICB0YXNrRGl2LmNsYXNzTGlzdC5hZGQoXCJ0YXNrLWRpdlwiKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3QgcmVuZGVyZWRUYXNrVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgICAgICAgICByZW5kZXJlZFRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKFwidGFzay10aXRsZVwiKTtcbiAgICAgICAgICAgIGNvbnN0IHJlbmRlcmVkVGFza0Rlc2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICAgICAgICAgIGNvbnN0IHJlbmRlcmVkVGFza0R1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICAgICAgICAgIGNvbnN0IHJlbmRlcmVkVGFza1ByaW9yaXR5THZsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgICAgICBjb25zdCByZW5kZXJlZFRpbWVMZWZ0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG5cbiAgICAgICAgICAgIGNvbnN0IHRhc2tDb21wbGV0ZWRDaGVja2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICAgICAgICAgIHRhc2tDb21wbGV0ZWRDaGVja2JveC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiY2hlY2tib3hcIik7XG5cbiAgICAgICAgICAgIHRhc2tDb21wbGV0ZWRDaGVja2JveC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHRvZ2dsZUNvbXBsZXRpb24odGFza1RvUmVuZGVyLCB3b3JraW5nUHJvamVjdCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgY29uc3QgZGVsZXRlVGFza0J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgICAgICBkZWxldGVUYXNrQnRuLmlubmVySFRNTCA9IFwiRGVsZXRlXCI7XG4gICAgICAgICAgICBkZWxldGVUYXNrQnRuLmNsYXNzTGlzdC5hZGQoXCJkZWxldGUtdGFzay1idG5cIik7XG5cbiAgICAgICAgICAgIGRlbGV0ZVRhc2tCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY29uc3QgcmVjb2xsZWN0ZWRCZWxvbmdpbmdTdWJIZWFkaW5nID0gdGhpcy5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQuZmlyc3RDaGlsZC50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICBjb25zdCByZWNvbGxlY3RlZFRhc2tUaXRsZSA9IHRoaXMucGFyZW50RWxlbWVudC5maXJzdENoaWxkLmlubmVyVGV4dDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB3b3JraW5nUHJvamVjdC5zdWJIZWFkaW5ncy5mb3JFYWNoKChzdWJIZWFkaW5nKSA9PiB7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlY29sbGVjdGVkQmVsb25naW5nU3ViSGVhZGluZyA9PT0gc3ViSGVhZGluZy50aXRsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3ViSGVhZGluZy50YXNrcy5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YXNrLnRhc2tUaXRsZSA9PT0gcmVjb2xsZWN0ZWRUYXNrVGl0bGUpIHtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhc2tUb0RlbGV0ZUluZGV4ID0gc3ViSGVhZGluZy50YXNrcy5pbmRleE9mKHRhc2spO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJIZWFkaW5nLnRhc2tzLnNwbGljZSh0YXNrVG9EZWxldGVJbmRleCwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIHVwZGF0ZUNvbXBsZXRpb25CYXIod29ya2luZ1Byb2plY3QpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJlbmRlcmVkVGFza1RpdGxlLmlubmVySFRNTCA9IHRhc2tUb1JlbmRlci50YXNrVGl0bGU7XG4gICAgICAgICAgICByZW5kZXJlZFRhc2tEZXNjLmlubmVySFRNTCA9IHRhc2tUb1JlbmRlci50YXNrRGVzYztcbiAgICAgICAgICAgIHJlbmRlcmVkVGFza0R1ZURhdGUuaW5uZXJIVE1MID0gXCJEdWUgRGF0ZTogXCIgKyB0YXNrVG9SZW5kZXIuZHVlRGF0ZTtcbiAgICAgICAgICAgIHJlbmRlcmVkVGFza1ByaW9yaXR5THZsLmlubmVySFRNTCA9IHRhc2tUb1JlbmRlci5wcmlvcml0eUx2bDtcblxuICAgICAgICAgICAgdXBkYXRlVGFza1ByaW9yaXR5KHRhc2tEaXYsIHRhc2tUb1JlbmRlcik7XG5cbiAgICAgICAgICAgIC8vIGNoZWNrcyB0byBzZWUgdGhhdCBkdWUgZGF0ZSBpbnB1dHRlZFxuXG4gICAgICAgICAgICBpZiAodGFza1RvUmVuZGVyLmR1ZURhdGUgPT09IFwiXCIpIHtcbiAgICAgICAgICAgICAgICAvLyB0aHJvd3MgZXJyb3JcbiAgICAgICAgICAgICAgICByZW5kZXJlZFRpbWVMZWZ0LmlubmVyVGV4dCA9IFwiVGltZSBMZWZ0OiBcIiArIHVwZGF0ZVRpbWVMZWZ0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZW5kZXJlZFRpbWVMZWZ0LmlubmVyVGV4dCA9IFwiVGltZSBMZWZ0OiBcIiArIHVwZGF0ZVRpbWVMZWZ0KHRhc2tUb1JlbmRlci5kdWVEYXRlKTtcbiAgICAgICAgICAgIH07XG4gICAgXG4gICAgICAgICAgICByZW5kZXJlZFRhc2tUaXRsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgZWRpdFRhc2socmVuZGVyZWRUYXNrVGl0bGUsIHdvcmtpbmdQcm9qZWN0KTsgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdGFza0Rpdi5hcHBlbmRDaGlsZChyZW5kZXJlZFRhc2tUaXRsZSk7XG4gICAgICAgICAgICB0YXNrRGl2LmFwcGVuZENoaWxkKHJlbmRlcmVkVGFza0Rlc2MpO1xuICAgICAgICAgICAgdGFza0Rpdi5hcHBlbmRDaGlsZChyZW5kZXJlZFRhc2tEdWVEYXRlKTtcbiAgICAgICAgICAgIHRhc2tEaXYuYXBwZW5kQ2hpbGQocmVuZGVyZWRUaW1lTGVmdCk7XG4gICAgICAgICAgICB0YXNrRGl2LmFwcGVuZENoaWxkKHRhc2tDb21wbGV0ZWRDaGVja2JveCk7XG4gICAgICAgICAgICB0YXNrRGl2LmFwcGVuZENoaWxkKGRlbGV0ZVRhc2tCdG4pO1xuXG4gICAgICAgICBcbiAgICAgICAgICAgIGN1cnJlbnRTdWJIZWFkaW5nRE9NRWxlbWVudC5hcHBlbmRDaGlsZCh0YXNrRGl2KTtcblxuICAgICAgICAgICAgdXBkYXRlQ29tcGxldGlvbkJhcih3b3JraW5nUHJvamVjdCk7XG5cbiAgICAgICAgICAgIHNhdmVEYXRhKCk7XG4gICAgICAgIH07XG4gICAgfSk7XG59OyIsImltcG9ydCB7IGNyZWF0ZVByb2plY3RDYXJkIH0gZnJvbSBcIi4vY3JlYXRlUHJvamVjdENhcmRcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRFeGlzdGluZ1Byb2plY3RDYXJkcyhkYXRhKSB7XG4gICAgXG4gICAgZGF0YS5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgICAgIGNyZWF0ZVByb2plY3RDYXJkKHByb2plY3QpO1xuICAgIH0pO1xuXG5cbn07IiwiaW1wb3J0IHsgbG9hZEV4aXN0aW5nUHJvamVjdENhcmRzIH0gZnJvbSBcIi4vbG9hZEV4aXN0aW5nUHJvamVjdENhcmRzXCJcblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWREYXRhKCkge1xuICAgIFxuICAgIGlmICghbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwcm9qZWN0RGF0YVwiKSkge1xuICAgICAgICAvLyBpZiBubyBzdG9yYWdlIGRvIG5vdGhpbmdcbiAgICB9XG5cbiAgICBlbHNlIHtcbiAgICAgICAgbGV0IGV4aXN0aW5nRGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicHJvamVjdERhdGFcIik7XG4gICAgICAgIGV4aXN0aW5nRGF0YSA9IEpTT04ucGFyc2UoZXhpc3RpbmdEYXRhKTtcbiAgICAgICAgbG9hZEV4aXN0aW5nUHJvamVjdENhcmRzKGV4aXN0aW5nRGF0YSk7XG4gICAgICAgIHJldHVybiBleGlzdGluZ0RhdGE7XG4gICAgfTsgIFxufTsiLCJpbXBvcnQgeyBsb2FkRGF0YSB9IGZyb20gXCIuL2xvYWREYXRhXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGVhckxvY2FsU3RvcmFnZSgpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInByb2plY3REYXRhXCIsIFtdKTtcbiAgICBsb2FkRGF0YSgpO1xufSIsImltcG9ydCBcIi4vY3NzL3N0eWxlcy5jc3NcIjtcbmltcG9ydCBcIi4vY3NzL3Jlc2V0LmNzc1wiXG5cbmltcG9ydCB7IGFkZE5ld1Byb2plY3QgfSBmcm9tIFwiLi9qcy9hZGROZXdQcm9qZWN0XCI7XG5pbXBvcnQgeyBjcmVhdGVUYXNrIH0gZnJvbSBcIi4vanMvY3JlYXRlVGFza1wiO1xuaW1wb3J0IHsgcmVuZGVyUHJvamVjdEhlYWRpbmcgfSBmcm9tIFwiLi9qcy9yZW5kZXJQcm9qZWN0SGVhZGluZ1wiXG5pbXBvcnQgeyByZW5kZXJOZXdUYXNrIH0gZnJvbSBcIi4vanMvcmVuZGVyTmV3VGFza1wiXG5pbXBvcnQgeyB3b3JraW5nUHJvamVjdCB9IGZyb20gXCIuL2pzL3JlbmRlclN1YkhlYWRpbmdzXCI7XG5pbXBvcnQgeyBsb2FkRGF0YSB9IGZyb20gXCIuL2pzL2xvYWREYXRhXCI7XG5pbXBvcnQgeyBjbGVhckxvY2FsU3RvcmFnZSB9IGZyb20gXCIuL2pzL2NsZWFyTG9jYWxTdG9yYWdlXCI7XG5pbXBvcnQgeyByZW5kZXJDb21wbGV0aW9uQmFyIH0gZnJvbSBcIi4vanMvcmVuZGVyQ29tcGxldGlvbkJhclwiO1xuaW1wb3J0IHsgdXBkYXRlVGltZUxlZnQgfSBmcm9tIFwiLi9qcy91cGRhdGVUaW1lTGVmdFwiO1xuaW1wb3J0IHsgdXBkYXRlVGFza1ByaW9yaXR5IH0gZnJvbSBcIi4vanMvdXBkYXRlVGFza1ByaW9yaXR5XCI7XG5cbmxldCBjdXJyZW50UHJvamVjdHMgPSBbXTtcbmxldCBlZGl0VGFza01vZGFsO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICBjdXJyZW50UHJvamVjdHMgPSBsb2FkRGF0YSgpO1xuICAgIFxuICAgIGlmIChjdXJyZW50UHJvamVjdHMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjdXJyZW50UHJvamVjdHMgPSBbXTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gYWRkTGlzdGVuZXJzKCkge1xuXG4gICAgICAgIC8vIGJ1dHRvbnNcbiAgICBcbiAgICAgICAgY29uc3QgYWRkTmV3UHJvamVjdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLXByb2plY3QtYnRuXCIpO1xuICAgICAgICBjb25zdCBjb25maXJtQWRkVGFza0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29uZmlybS10YXNrLWJ1dHRvblwiKTtcbiAgICAgICAgY29uc3QgY2xlYXJMb2NhbFN0b3JhZ2VCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNsZWFyLXN0b3JhZ2VcIik7XG4gICAgICAgIGNvbnN0IGNvbmZpcm1FZGl0VGFza0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29uZmlybS1lZGl0LXRhc2stYnV0dG9uXCIpO1xuXG4gICAgICAgIGNvbnN0IGFkZFRhc2tNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLXRhc2stbW9kYWxcIik7XG4gICAgICAgIGVkaXRUYXNrTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtdGFzay1tb2RhbFwiKTtcblxuICAgICAgICAvLyBtb2RhbCBpbnB1dHMgLSBhZGQgdGFza1xuXG4gICAgICAgIGNvbnN0IHRhc2tUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YXNrVGl0bGVcIik7XG4gICAgICAgIGNvbnN0IHRhc2tEZXNjSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Rhc2tEZXNjXCIpO1xuICAgICAgICBjb25zdCB0YXNrRHVlRGF0ZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YXNrRHVlRGF0ZVwiKTtcbiAgICAgICAgY29uc3QgdGFza1ByaW9yaXR5THZsSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Rhc2tQcmlvcml0eUx2bFwiKTtcblxuICAgICAgICAvLyBtb2RhbCBpbnB1dHMgLSBlZGl0IHRhc2tcblxuICAgICAgICBsZXQgZWRpdFRhc2tUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0dGVkVGFza1RpdGxlXCIpO1xuICAgICAgICBsZXQgZWRpdFRhc2tEZXNjSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXR0ZWRUYXNrRGVzY1wiKTtcbiAgICAgICAgbGV0IGVkaXRUYXNrRHVlRGF0ZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0dGVkVGFza0R1ZURhdGVcIik7XG4gICAgICAgIGxldCBlZGl0VGFza1ByaW9yaXR5THZsSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXR0ZWRUYXNrUHJpb3JpdHlMdmxcIik7XG5cbiAgICAgICAgbGV0IGRpdlRvRWRpdDtcbiAgICAgICAgbGV0IGV4aXN0aW5nSGVhZGluZ0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaDNcIik7XG5cblxuICAgICAgICB0YXNrRHVlRGF0ZUlucHV0Lm1pbiA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdChcIlRcIilbMF07XG4gICAgICAgIGVkaXRUYXNrRHVlRGF0ZUlucHV0Lm1pbiA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdChcIlRcIilbMF07XG5cbiAgICBcbiAgICAgICAgY2xlYXJMb2NhbFN0b3JhZ2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgY2xlYXJMb2NhbFN0b3JhZ2UoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYWRkTmV3UHJvamVjdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuXG4gICAgICAgICAgICBsZXQgcHJvamVjdEV4aXN0cyA9IGZhbHNlO1xuICAgICAgICAgICAgbGV0IGVtcHR5SW5wdXQgPSBmYWxzZTtcbiAgICAgICAgICAgIGxldCBpbnB1dHRlZFRpdGxlID0gcHJvbXB0KFwiRW50ZXIgUHJvamVjdCBUaXRsZTpcIiwgXCJIb3VzZSBDbGVhbmluZ1wiKTtcblxuXG5cbiAgICAgICAgICAgIGlmIChpbnB1dHRlZFRpdGxlID09PSBudWxsIHx8IGlucHV0dGVkVGl0bGUubGVuZ3RoID09PSAwKSB7IGVtcHR5SW5wdXQgPSB0cnVlO31cblxuICAgICAgICAgICAgY3VycmVudFByb2plY3RzLmZvckVhY2goKHByb2plY3QpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocHJvamVjdC5wcm9qZWN0VGl0bGUgPT09IGlucHV0dGVkVGl0bGUpIHtwcm9qZWN0RXhpc3RzID0gdHJ1ZTt9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKHByb2plY3RFeGlzdHMgPT09IGZhbHNlICYmIGVtcHR5SW5wdXQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgbGV0IHByb2plY3RUb0FkZCA9IGFkZE5ld1Byb2plY3QoaW5wdXR0ZWRUaXRsZSk7XG4gICAgICAgICAgICAgICAgY3VycmVudFByb2plY3RzLnB1c2gocHJvamVjdFRvQWRkKTtcbiAgICAgICAgICAgICAgICByZW5kZXJQcm9qZWN0SGVhZGluZyhpbnB1dHRlZFRpdGxlKTtcbiAgICAgICAgICAgICAgICByZW5kZXJDb21wbGV0aW9uQmFyKCk7XG4gICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgaWYgKHByb2plY3RFeGlzdHMgfHwgZW1wdHlJbnB1dCkge1xuICAgICAgICAgICAgICAgIGFsZXJ0KFwiUHJvamVjdCBFeGlzdHMgb3IgRmllbGQgaXMgRW1wdHksIGNhbmNlbGxpbmcuLi5cIilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uZmlybUFkZFRhc2tCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICBcbiAgICAgICAgICAgIGFkZFRhc2tNb2RhbC5jbG9zZSgpO1xuXG4gICAgICAgICAgICBsZXQgc3ViSGVhZGluZ3RvQXBwZW5kID0gYWRkVGFza01vZGFsLmRhdGFzZXQuc3ViSGVhZGluZztcblxuICAgICAgICAgICAgZm9yIChjb25zdCBzdWJIZWFkaW5nIGluIHdvcmtpbmdQcm9qZWN0LnN1YkhlYWRpbmdzKSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY29uc3Qgc3ViSGVhZGluZ1RvQ2hlY2sgPSB3b3JraW5nUHJvamVjdC5zdWJIZWFkaW5nc1tzdWJIZWFkaW5nXS50aXRsZTtcblxuICAgICAgICAgICAgICAgIGlmIChzdWJIZWFkaW5nVG9DaGVjayA9PT0gc3ViSGVhZGluZ3RvQXBwZW5kKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IHRhc2tFeGlzdHMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGVtcHR5SW5wdXQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRhc2tUaXRsZUlucHV0LnZhbHVlLmxlbmd0aCA9PT0gMCkge2VtcHR5SW5wdXQgPSB0cnVlO31cblxuICAgICAgICAgICAgICAgICAgICB3b3JraW5nUHJvamVjdC5zdWJIZWFkaW5nc1tzdWJIZWFkaW5nXS50YXNrcy5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRhc2sudGFza1RpdGxlID09PSB0YXNrVGl0bGVJbnB1dC52YWx1ZSkge3Rhc2tFeGlzdHMgPSB0cnVlO31cbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0YXNrRXhpc3RzICYmICFlbXB0eUlucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdUYXNrID0gY3JlYXRlVGFzayhcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhc2tUaXRsZUlucHV0LnZhbHVlLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhc2tEZXNjSW5wdXQudmFsdWUsIFxuICAgICAgICAgICAgICAgICAgICAgICAgdGFza0R1ZURhdGVJbnB1dC52YWx1ZSwgXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXNrUHJpb3JpdHlMdmxJbnB1dC52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3b3JraW5nUHJvamVjdC5zdWJIZWFkaW5nc1tzdWJIZWFkaW5nXS50YXNrcy5wdXNoKG5ld1Rhc2spO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVuZGVyTmV3VGFzayh3b3JraW5nUHJvamVjdCwgc3ViSGVhZGluZ3RvQXBwZW5kKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHthbGVydChcIlRhc2sgYWxyZWFkeSBleGlzdHMgb3IgdGl0bGUgZmllbGQgZW1wdHksIGNhbmNlbGxpbmcuLi5cIil9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0YXNrVGl0bGVJbnB1dC52YWx1ZSA9IFwiXCJcbiAgICAgICAgICAgIHRhc2tEZXNjSW5wdXQudmFsdWUgPSBcIlwiXG4gICAgICAgICAgICB0YXNrRHVlRGF0ZUlucHV0LnZhbHVlID0gXCJcIlxuICAgICAgICAgICAgdGFza1ByaW9yaXR5THZsSW5wdXQudmFsdWUgPSBcIlwiXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgY29uZmlybUVkaXRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgXG5cbiAgICAgICAgICAgIGxldCBmZXRjaGVkQXJyYXlUYXNrID0gY3JlYXRlVGFzayhcbiAgICAgICAgICAgICAgICBlZGl0VGFza01vZGFsLmRhdGFzZXQuZmV0Y2hlZFRhc2tUaXRsZSxcbiAgICAgICAgICAgICAgICBlZGl0VGFza01vZGFsLmRhdGFzZXQuZmV0Y2hlZFRhc2tEZXNjLFxuICAgICAgICAgICAgICAgIGVkaXRUYXNrTW9kYWwuZGF0YXNldC5mZXRjaGVkRHVlRGF0ZSxcbiAgICAgICAgICAgICAgICBlZGl0VGFza01vZGFsLmRhdGFzZXQuZmV0Y2hlZFByaW9MdmxcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGxldCBlZGl0dGVkQXJyYXlUYXNrID0gY3JlYXRlVGFzayhcbiAgICAgICAgICAgICAgICBmZXRjaGVkQXJyYXlUYXNrLnRhc2tUaXRsZSxcbiAgICAgICAgICAgICAgICBmZXRjaGVkQXJyYXlUYXNrLnRhc2tEZXNjLCBcbiAgICAgICAgICAgICAgICBmZXRjaGVkQXJyYXlUYXNrLmR1ZURhdGUsIFxuICAgICAgICAgICAgICAgIGZldGNoZWRBcnJheVRhc2sucHJpb3JpdHlMdmxcbiAgICAgICAgICAgICk7XG4gICAgICAgIFxuICAgICAgICAgICAgZWRpdHRlZEFycmF5VGFzay50YXNrVGl0bGUgPSBlZGl0VGFza1RpdGxlSW5wdXQudmFsdWU7XG4gICAgICAgICAgICBlZGl0dGVkQXJyYXlUYXNrLnRhc2tEZXNjID0gZWRpdFRhc2tEZXNjSW5wdXQudmFsdWU7XG4gICAgICAgICAgICBlZGl0dGVkQXJyYXlUYXNrLmR1ZURhdGUgPSBlZGl0VGFza0R1ZURhdGVJbnB1dC52YWx1ZTtcbiAgICAgICAgICAgIGVkaXR0ZWRBcnJheVRhc2sucHJpb3JpdHlMdmwgPSBlZGl0VGFza1ByaW9yaXR5THZsSW5wdXQudmFsdWU7XG5cbiAgICAgICAgICAgIGV4aXN0aW5nSGVhZGluZ0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaDNcIik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGV4aXN0aW5nSGVhZGluZ0xpc3QuZm9yRWFjaCgoaGVhZGluZykgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChoZWFkaW5nLmlubmVyVGV4dCA9PT0gZmV0Y2hlZEFycmF5VGFzay50YXNrVGl0bGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZGl2VG9FZGl0ID0gaGVhZGluZy5wYXJlbnRFbGVtZW50O1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8gQ2hlY2tpbmcgdG8gc2VlIGlmIHRoZSB1cGRhdGVkIHRhc2sgYWxyZWFkeSBleGlzdHNcblxuICAgICAgICAgICAgbGV0IHRhc2tFeGlzdHMgPSBmYWxzZTtcbiAgICAgICAgICAgIGxldCBlbXB0eUlucHV0ID0gZmFsc2U7XG5cbiAgICAgICAgICAgIGlmIChlZGl0dGVkQXJyYXlUYXNrLnRhc2tUaXRsZS5sZW5ndGggPT09IDApIHtlbXB0eUlucHV0ID0gdHJ1ZTt9O1xuXG4gICAgICAgICAgICB3b3JraW5nUHJvamVjdC5zdWJIZWFkaW5ncy5mb3JFYWNoKChzdWJIZWFkaW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgc3ViSGVhZGluZy50YXNrcy5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlZGl0VGFza1RpdGxlSW5wdXQudmFsdWUgPT09IHRhc2sudGFza1RpdGxlKSB7dGFza0V4aXN0cyA9IHRydWU7fVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmICghdGFza0V4aXN0cyAmJiAhZW1wdHlJbnB1dCkge1xuXG4gICAgICAgICAgICAgICAgZGl2VG9FZGl0LmNoaWxkcmVuWzBdLmlubmVyVGV4dCA9IGVkaXR0ZWRBcnJheVRhc2sudGFza1RpdGxlO1xuICAgICAgICAgICAgICAgIGRpdlRvRWRpdC5jaGlsZHJlblsxXS5pbm5lclRleHQgPSBlZGl0dGVkQXJyYXlUYXNrLnRhc2tEZXNjO1xuICAgICAgICAgICAgICAgIGRpdlRvRWRpdC5jaGlsZHJlblsyXS5pbm5lclRleHQgPSBcIkR1ZSBvbjogXCIgKyBlZGl0dGVkQXJyYXlUYXNrLmR1ZURhdGU7XG5cbiAgICAgICAgICAgICAgICBpZiAoZWRpdHRlZEFycmF5VGFzay5kdWVEYXRlID09PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGRpdlRvRWRpdC5jaGlsZHJlbls0XS5pbm5lclRleHQgPSBcIlRpbWUgTGVmdDogXCIgKyB1cGRhdGVUaW1lTGVmdCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZGl2VG9FZGl0LmNoaWxkcmVuWzRdLmlubmVyVGV4dCA9IFwiVGltZSBMZWZ0OiBcIiArIHVwZGF0ZVRpbWVMZWZ0KGVkaXR0ZWRBcnJheVRhc2suZHVlRGF0ZSk7XG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgIHVwZGF0ZVRhc2tQcmlvcml0eShkaXZUb0VkaXQsIGVkaXR0ZWRBcnJheVRhc2spO1xuXG4gICAgICAgICAgICAgICAgd29ya2luZ1Byb2plY3Quc3ViSGVhZGluZ3MuZm9yRWFjaChzdWJIZWFkaW5nID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc3ViSGVhZGluZy50YXNrcy5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFzay50YXNrVGl0bGUgPT09IGZldGNoZWRBcnJheVRhc2sudGFza1RpdGxlKSB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhc2sudGFza1RpdGxlID0gZWRpdHRlZEFycmF5VGFzay50YXNrVGl0bGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFzay50YXNrRGVzYyA9IGVkaXR0ZWRBcnJheVRhc2sudGFza0Rlc2M7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFzay5kdWVEYXRlID0gZWRpdHRlZEFycmF5VGFzay5kdWVEYXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhc2sucHJpb3JpdHlMdmwgPSBlZGl0dGVkQXJyYXlUYXNrLnByaW9yaXR5THZsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRUYXNrTW9kYWwuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7YWxlcnQoXCJUYXNrIGFscmVhZHkgZXhpc3RzLCBvciB0aXRsZSBmaWVsZCBlbXB0eSwgY2FuY2VsbGluZy4uLlwiKX07XG4gICAgICAgICAgICBlZGl0VGFza01vZGFsLmNsb3NlKCk7XG4gICAgICAgIH0pO1xufTtcblxuYWRkTGlzdGVuZXJzKCk7XG5cbn0pKCk7XG5cbmV4cG9ydCB7Y3VycmVudFByb2plY3RzLCBlZGl0VGFza01vZGFsfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///662\n\n}')},758:(n,t,I)=>{n.exports=I.p+"27eddc44f14756eecc8d.woff"},790:(module,__webpack_exports__,__webpack_require__)=>{eval('{/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*\n  Josh\'s Custom CSS Reset\n  https://www.joshwcomeau.com/css/custom-css-reset/\n*/\n*, *::before, *::after {\n  box-sizing: border-box;\n}\n* {\n  margin: 0;\n}\n@media (prefers-reduced-motion: no-preference) {\n  html {\n    interpolate-size: allow-keywords;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Oxygen, Ubuntu, Cantarell, \'Open Sans\', \'Helvetica Neue\', sans-serif;\n  }\n}\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\nimg, picture, video, canvas, svg {\n  display: block;\n  max-width: 100%;\n}\ninput, textarea, select {\n  font: inherit;\n  padding: 0;\n  width: 150px;\n  \n}\np, h1, h2, h3, h4, h5, h6 {\n  overflow-wrap: break-word;\n}\np {\n  text-wrap: pretty;\n}\nh1, h2, h3, h4, h5, h6 {\n  text-wrap: balance;\n}\n#root, #__next {\n  isolation: isolate;\n}\nol[role="list"], ul[role="list"] {\n  list-style: none;\n  padding-inline: 0;\n}\n\n\n`, "",{"version":3,"sources":["webpack://./src/css/reset.css"],"names":[],"mappings":"AAAA;;;CAGC;AACD;EACE,sBAAsB;AACxB;AACA;EACE,SAAS;AACX;AACA;EACE;IACE,gCAAgC;IAChC,mJAAmJ;EACrJ;AACF;AACA;EACE,gBAAgB;EAChB,mCAAmC;AACrC;AACA;EACE,cAAc;EACd,eAAe;AACjB;AACA;EACE,aAAa;EACb,UAAU;EACV,YAAY;;AAEd;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,iBAAiB;AACnB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,gBAAgB;EAChB,iBAAiB;AACnB","sourcesContent":["/*\\n  Josh\'s Custom CSS Reset\\n  https://www.joshwcomeau.com/css/custom-css-reset/\\n*/\\n*, *::before, *::after {\\n  box-sizing: border-box;\\n}\\n* {\\n  margin: 0;\\n}\\n@media (prefers-reduced-motion: no-preference) {\\n  html {\\n    interpolate-size: allow-keywords;\\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Oxygen, Ubuntu, Cantarell, \'Open Sans\', \'Helvetica Neue\', sans-serif;\\n  }\\n}\\nbody {\\n  line-height: 1.5;\\n  -webkit-font-smoothing: antialiased;\\n}\\nimg, picture, video, canvas, svg {\\n  display: block;\\n  max-width: 100%;\\n}\\ninput, textarea, select {\\n  font: inherit;\\n  padding: 0;\\n  width: 150px;\\n  \\n}\\np, h1, h2, h3, h4, h5, h6 {\\n  overflow-wrap: break-word;\\n}\\np {\\n  text-wrap: pretty;\\n}\\nh1, h2, h3, h4, h5, h6 {\\n  text-wrap: balance;\\n}\\n#root, #__next {\\n  isolation: isolate;\\n}\\nol[role=\\"list\\"], ul[role=\\"list\\"] {\\n  list-style: none;\\n  padding-inline: 0;\\n}\\n\\n\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLE9BQU8sc0ZBQXNGLEtBQUssS0FBSyxZQUFZLE1BQU0sS0FBSyxVQUFVLEtBQUssS0FBSyxLQUFLLFlBQVksYUFBYSxNQUFNLEtBQUssS0FBSyxZQUFZLGFBQWEsTUFBTSxLQUFLLFVBQVUsVUFBVSxNQUFNLEtBQUssVUFBVSxVQUFVLFdBQVcsS0FBSyxLQUFLLFlBQVksTUFBTSxLQUFLLFlBQVksTUFBTSxLQUFLLFlBQVksTUFBTSxLQUFLLFlBQVksTUFBTSxLQUFLLFlBQVksYUFBYSwwSUFBMEksMkJBQTJCLEdBQUcsS0FBSyxjQUFjLEdBQUcsa0RBQWtELFVBQVUsdUNBQXVDLDBKQUEwSixLQUFLLEdBQUcsUUFBUSxxQkFBcUIsd0NBQXdDLEdBQUcsb0NBQW9DLG1CQUFtQixvQkFBb0IsR0FBRywyQkFBMkIsa0JBQWtCLGVBQWUsaUJBQWlCLE9BQU8sNkJBQTZCLDhCQUE4QixHQUFHLEtBQUssc0JBQXNCLEdBQUcsMEJBQTBCLHVCQUF1QixHQUFHLGtCQUFrQix1QkFBdUIsR0FBRyx3Q0FBd0MscUJBQXFCLHNCQUFzQixHQUFHLHlCQUF5QjtBQUN6M0M7QUFDQSxpRUFBZSx1QkFBdUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvLWRvLWxpc3QtYXBwLy4vc3JjL2Nzcy9yZXNldC5jc3M/YjI0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLypcbiAgSm9zaCdzIEN1c3RvbSBDU1MgUmVzZXRcbiAgaHR0cHM6Ly93d3cuam9zaHdjb21lYXUuY29tL2Nzcy9jdXN0b20tY3NzLXJlc2V0L1xuKi9cbiosICo6OmJlZm9yZSwgKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuKiB7XG4gIG1hcmdpbjogMDtcbn1cbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogbm8tcHJlZmVyZW5jZSkge1xuICBodG1sIHtcbiAgICBpbnRlcnBvbGF0ZS1zaXplOiBhbGxvdy1rZXl3b3JkcztcbiAgICBmb250LWZhbWlseTogc3lzdGVtLXVpLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgJ09wZW4gU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWY7XG4gIH1cbn1cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMS41O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cbmltZywgcGljdHVyZSwgdmlkZW8sIGNhbnZhcywgc3ZnIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbmlucHV0LCB0ZXh0YXJlYSwgc2VsZWN0IHtcbiAgZm9udDogaW5oZXJpdDtcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IDE1MHB4O1xuICBcbn1cbnAsIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xufVxucCB7XG4gIHRleHQtd3JhcDogcHJldHR5O1xufVxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIHRleHQtd3JhcDogYmFsYW5jZTtcbn1cbiNyb290LCAjX19uZXh0IHtcbiAgaXNvbGF0aW9uOiBpc29sYXRlO1xufVxub2xbcm9sZT1cImxpc3RcIl0sIHVsW3JvbGU9XCJsaXN0XCJdIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZy1pbmxpbmU6IDA7XG59XG5cblxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL3Jlc2V0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7O0NBR0M7QUFDRDtFQUNFLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0UsU0FBUztBQUNYO0FBQ0E7RUFDRTtJQUNFLGdDQUFnQztJQUNoQyxtSkFBbUo7RUFDcko7QUFDRjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1DQUFtQztBQUNyQztBQUNBO0VBQ0UsY0FBYztFQUNkLGVBQWU7QUFDakI7QUFDQTtFQUNFLGFBQWE7RUFDYixVQUFVO0VBQ1YsWUFBWTs7QUFFZDtBQUNBO0VBQ0UseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSxpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qXFxuICBKb3NoJ3MgQ3VzdG9tIENTUyBSZXNldFxcbiAgaHR0cHM6Ly93d3cuam9zaHdjb21lYXUuY29tL2Nzcy9jdXN0b20tY3NzLXJlc2V0L1xcbiovXFxuKiwgKjo6YmVmb3JlLCAqOjphZnRlciB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG4qIHtcXG4gIG1hcmdpbjogMDtcXG59XFxuQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiBuby1wcmVmZXJlbmNlKSB7XFxuICBodG1sIHtcXG4gICAgaW50ZXJwb2xhdGUtc2l6ZTogYWxsb3cta2V5d29yZHM7XFxuICAgIGZvbnQtZmFtaWx5OiBzeXN0ZW0tdWksIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgUm9ib3RvLCBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLCAnT3BlbiBTYW5zJywgJ0hlbHZldGljYSBOZXVlJywgc2Fucy1zZXJpZjtcXG4gIH1cXG59XFxuYm9keSB7XFxuICBsaW5lLWhlaWdodDogMS41O1xcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxufVxcbmltZywgcGljdHVyZSwgdmlkZW8sIGNhbnZhcywgc3ZnIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgbWF4LXdpZHRoOiAxMDAlO1xcbn1cXG5pbnB1dCwgdGV4dGFyZWEsIHNlbGVjdCB7XFxuICBmb250OiBpbmhlcml0O1xcbiAgcGFkZGluZzogMDtcXG4gIHdpZHRoOiAxNTBweDtcXG4gIFxcbn1cXG5wLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcXG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XFxufVxcbnAge1xcbiAgdGV4dC13cmFwOiBwcmV0dHk7XFxufVxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xcbiAgdGV4dC13cmFwOiBiYWxhbmNlO1xcbn1cXG4jcm9vdCwgI19fbmV4dCB7XFxuICBpc29sYXRpb246IGlzb2xhdGU7XFxufVxcbm9sW3JvbGU9XFxcImxpc3RcXFwiXSwgdWxbcm9sZT1cXFwibGlzdFxcXCJdIHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxuICBwYWRkaW5nLWlubGluZTogMDtcXG59XFxuXFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///790\n\n}')},800:(n,t,I)=>{n.exports=I.p+"d03d61660c72235617ba.woff2"},825:module=>{eval('{\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9lNDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///825\n\n}')}},__webpack_module_cache__={};function __webpack_require__(n){var t=__webpack_module_cache__[n];if(void 0!==t)return t.exports;var I=__webpack_module_cache__[n]={id:n,exports:{}};return __webpack_modules__[n](I,I.exports,__webpack_require__),I.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(n,t)=>{for(var I in t)__webpack_require__.o(t,I)&&!__webpack_require__.o(n,I)&&Object.defineProperty(n,I,{enumerable:!0,get:t[I]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),__webpack_require__.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;__webpack_require__.g.importScripts&&(n=__webpack_require__.g.location+"");var t=__webpack_require__.g.document;if(!n&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(n=t.currentScript.src),!n)){var I=t.getElementsByTagName("script");if(I.length)for(var e=I.length-1;e>-1&&(!n||!/^http(s?):/.test(n));)n=I[e--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=n})(),__webpack_require__.b=document.baseURI||self.location.href,__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(662)})();